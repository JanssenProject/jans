apiVersion: v1
kind: Namespace
metadata:
  name: jans
  labels:
    istio-injection: enabled

---

apiVersion: v1
kind: Secret
metadata:
  name: jans-aio-gen-params
  namespace: jans
  labels:
    APP_NAME: configurator
type: Opaque
stringData:
  generate.json: |-
    {
      "hostname": "jans-aio.jans.io",
      "country_code": "US",
      "state": "TX",
      "city": "Austin",
      "admin_pw": "S3cr3t+pass",
      "ldap_pw": "S3cr3t+pass",
      "redis_pw": "S3cr3t+[ass]",
      "email": "support@jans-aio.jans.io",
      "org_name": "Janssen Project",
      "sql_pw": "S3cr3t+pass",
      "couchbase_pw": "S3cr3t+pass",
      "couchbase_superuser_pw": "S3cr3t+pass",
      "optional_scopes": ["sql", "ldap", "couchbase"]
    }

---

apiVersion: v1
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDNDCCAhygAwIBAgIUJg+HTzcEQRVVhywCKgjRwIo9y6wwDQYJKoZIhvcNAQEL
    BQAwGzEZMBcGA1UEAwwQamFucy1haW8uamFucy5pbzAeFw0yMzEwMTkyMDUwNTRa
    Fw0yNDEwMTgyMDUwNTRaMBsxGTAXBgNVBAMMEGphbnMtYWlvLmphbnMuaW8wggEi
    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCjU8zFEFq2b/RXyPd/3ziGGDso
    Cm5PAzbOGtY+TMf+N3dXE1luWLYFdsnwxyl+J24ga96Ad1cvxa97ntreOVxSimKG
    gJOMOAmT8UrL51f5qUOs/4+ngCM8vC9Vw4jBMGQgrxr6Dk33EGyOWYe5xR+1Rf5J
    2r3GjjVpKyQ9lIMCQXYVDpQNa+k/kZyeeVoXbFIfNGIFfmnZIXML/6RgswMonlyQ
    FfPJHEG+wCazuZiMkHK5TXtzIKyi0V2I3EHZEX6AAkDK1FMFbYIvcpJTPKgR0snn
    e/ehhcMi6lucbKVkdHdBU3Qlf/BEZca2MY1TYAodZlEN6MXiCBQdWsVvpEfhAgMB
    AAGjcDBuMB0GA1UdDgQWBBSMMzOqckxjpxVcVCw6vuBWPr34xjAfBgNVHSMEGDAW
    gBSMMzOqckxjpxVcVCw6vuBWPr34xjAPBgNVHRMBAf8EBTADAQH/MBsGA1UdEQQU
    MBKCEGphbnMtYWlvLmphbnMuaW8wDQYJKoZIhvcNAQELBQADggEBAIIKQuMvr1L+
    yz7iR8173h+K6qgJYniK4/s8S9i0iPtg/1i2lh25IcTxN5XK03AknLV317YkC1bw
    pGzX3aRs9MdkWes0f/krsnmGTJEAWWhGj4z06yVYCXFPV6xHC+kEBmRRvF9b14nL
    gCajFoxXct1vULCb4VYJThv1gO6++hncTHP4VpkJ7qY/o+v3lJ3IrIX1FzhN+hsU
    lJNuTEqSRJGXv1tR2gfNNW7hEowtGOpJdFlbmAtYOQfWmWcaRVcKNoItl2CbIGLk
    sTNVfGneSFfYkTcXjdRRWy7uRiO/ubmalu9vAxPV4oUR7FB4orDvGLDqa3rAfKsh
    sqoy+0x0w6A=
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCjU8zFEFq2b/RX
    yPd/3ziGGDsoCm5PAzbOGtY+TMf+N3dXE1luWLYFdsnwxyl+J24ga96Ad1cvxa97
    ntreOVxSimKGgJOMOAmT8UrL51f5qUOs/4+ngCM8vC9Vw4jBMGQgrxr6Dk33EGyO
    WYe5xR+1Rf5J2r3GjjVpKyQ9lIMCQXYVDpQNa+k/kZyeeVoXbFIfNGIFfmnZIXML
    /6RgswMonlyQFfPJHEG+wCazuZiMkHK5TXtzIKyi0V2I3EHZEX6AAkDK1FMFbYIv
    cpJTPKgR0snne/ehhcMi6lucbKVkdHdBU3Qlf/BEZca2MY1TYAodZlEN6MXiCBQd
    WsVvpEfhAgMBAAECggEACjrVSwyHWgDwzCTKwmgaqWTQI7sPhgRnWjPFHS7VofRw
    avRLzYUMlZKx+vzxJN/XCScoebcVL2lRi0vRB/U4yp9fT28IjtJIYKCkNNmfIYSQ
    DWsOYN6Tlm9vruP/PKEezGCbWckr6fXN5CvzES1/GxgGDDMsCskydY1ds5EJ6Z9S
    k97Qy/VANypKjhQ9PT3UBR4bkHAEl1rDPaZkMpnlRZ2CN5W0TfsvwBF+5jz9iqvB
    n5T3FfnDaGRnFevlR0A6WO02ju0PjXgpqVzqNZIiCv1KuSxCYOV8L2/nnmxypnBK
    Hy9GtCTnWdM4VK0nBgvVKuYn8sd0BvEHyUktJ2kyqQKBgQC3C2Rt1dfB3fUS0TIW
    oQKfdlatF+16Q1sFMPb2sB/IiC2rXnnGFlpTzUsBFS9ddrgaFPygSO7FVqHQlssi
    IS3Ylq2/lOmOSPS0kmLiqPpdaGL2XEGdo8hrS+4mmMmhNsAyYqb1DsDPdvnNJ6TI
    ZRkMurG2oAXB1/ozt6GJs3FH1QKBgQDkbJqReqZdN+YgUZbXxNf8QRpIk1QbX6P8
    rZT9VLnHX+UrkeLzECkr6IDSW25gpoZehlKqJjPawJ+iFoqex2WnO3YxhQUxKCHr
    fCigvWTrDu0a+bBQC2f6/ifOttxWBQEJhS+IiCQjyB3E5/EFDQhPPHndTKxCs888
    qw44cfOx3QKBgHKdupQgHArz/fp7bb7HsUnCowGeAwDU3lDA2VOc8znxM4+kB+Jm
    qsbgvL9/0XnX1e3XCF0hbgm5dneThLzpQ7jkmQVmrFyBCGFtbGf7YVJOA/G50Qhx
    vxSYphYbA95j1zN1nI/EXi1KlZ7F3SPyUh4rZQ4y44f+wlfR+1+rMhrFAoGATnJJ
    xwpzFfJ7kr/SaPmOH3CQQTpvmRMIc199ml69io4RWxw377euHAk2LIf/6StnXBEP
    VKXYCxk5+WV6Z7sc2wjdt3XyaYZZ19CE92bzwJIYtbnoZiT0qcsdCq3cD6KaT5Ww
    1FfE6ZDxQE1ThaOLJgMj6u9I/YNY+YHZWWMxCPUCgYEAqaAK6pa2wJST653a/Maj
    XVgB+IByelf96k+/z4jy+ZNap7PyfBOOo3asFYt9zz+Kh9n6S9I3KVfiLS2D9afW
    yB3QSx8onKEI1Bd0NpLwPUv6GSRE6uH/ywZSOX4GFZhh4hT8nYc2W06w8e/njSLW
    APfbTcT/F1g0Zpct75HLRmc=
    -----END PRIVATE KEY-----
kind: Secret
metadata:
  name: tls-certificate
  namespace: jans
type: kubernetes.io/tls

---

apiVersion: v1
kind: Secret
metadata:
  name: jans-aio-sql-pass
  namespace: jans
stringData:
  sql_password: S3cr3t+pass

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jans-aio-envs
  namespace: jans
data:
  CN_CONFIG_ADAPTER: "kubernetes"
  CN_SECRET_ADAPTER: "kubernetes"
  CN_SECRET_KUBERNETES_NAMESPACE: "jans"
  CN_CONFIG_KUBERNETES_NAMESPACE: "jans"
  CN_PERSISTENCE_TYPE: "sql"
  CN_SQL_DB_DIALECT: "mysql"
  CN_SQL_DB_HOST: "mysql.sql.svc.cluster.local"
  CN_CONFIG_API_PLUGINS: "admin-ui,fido2,scim,user-mgt"
  CN_AIO_COMPONENTS: "configurator,persistence-loader,jans-auth,jans-config-api,jans-fido2,jans-scim,jans-casa,jans-link"

---

apiVersion: v1
kind: Service
metadata:
  name: jans-aio
  labels:
    app: jans-aio
  namespace: jans
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http-proxy
  selector:
    app: jans-aio
  # sessionAffinity: ClientIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jans-aio
  labels:
    app: jans-aio
  namespace: jans
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jans-aio
  template:
    metadata:
      labels:
        app: jans-aio
      namespace: jans
    spec:
      containers:
      - name: jans-aio
        image: ${JANS_AIO_IMAGE}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "8Gi"
          limits:
            memory: "16Gi"
        # ports:
        # - containerPort: 8080
        envFrom:
        - configMapRef:
            name: jans-aio-envs
        volumeMounts:
          - name: jans-aio-gen-params
            mountPath: /opt/jans/configurator/db/generate.json
            subPath: generate.json
          - name: tls-certificate
            mountPath: /opt/jans/configurator/certs/web_https.crt
            subPath: web_https.crt
          - name: tls-certificate
            mountPath: /opt/jans/configurator/certs/web_https.key
            subPath: web_https.key
          - name: jans-aio-sql-pass
            mountPath: /etc/jans/conf/sql_password
            subPath: sql_password
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 1000
        livenessProbe:
          exec:
            command: ["python3", "/app/jans_aio/jans_auth/healthcheck.py"]
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command: ["python3", "/app/jans_aio/jans_auth/healthcheck.py"]
          initialDelaySeconds: 25
          periodSeconds: 25
      volumes:
        - name: jans-aio-gen-params
          secret:
            secretName: jans-aio-gen-params
        - name: tls-certificate
          secret:
            secretName: tls-certificate
            items:
              - key: tls.crt
                path: web_https.crt
              - key: tls.key
                path: web_https.key
        - name: jans-aio-sql-pass
          secret:
            secretName: jans-aio-sql-pass
      hostAliases:
      - ip: ${NODE_IP_ADDR}
        hostnames:
        - jans-aio.jans.io

---

apiVersion: v1
kind: Namespace
metadata:
  name: sql

---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: sql
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: S3cr3t+pass
  MYSQL_DATABASE: jans
  MYSQL_USER: jans
  MYSQL_PASSWORD: S3cr3t+pass

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
  namespace: sql
spec:
  ports:
  - port: 3306
    name: mysql
  selector:
    app: mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
  namespace: sql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
      namespace: sql
    spec:
      containers:
      - name: mysql
        image: docker.io/mysql:8.0.30
        resources:
          requests:
            memory: "1000Mi"
          limits:
            memory: "1536Mi"
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
            name: mysql-secret
