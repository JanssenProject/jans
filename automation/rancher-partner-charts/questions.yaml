questions:

# =======================
# Optional Services group
# =======================
- variable: global.auth-server-key-rotation.enabled
  default: false
  type: boolean
  group: "Optional Services"
  required: true
  label: Enable Auth key rotation cronjob
  show_subquestion_if: true
  subquestions:
  - variable: auth-server-key-rotation.keysLife
    default: 48
    description: "Auth server key rotation keys life in hours."
    type: int
    label: Key life
- variable: global.fido2.enabled
  default: false
  type: boolean
  group: "Optional Services"
  required: true
  label: Enable Fido2
  description: "FIDO 2.0 (FIDO2) is an open authentication standard that enables leveraging common devices to authenticate to online services in both mobile and desktop environments."
- variable: global.config-api.enabled
  default: true
  type: boolean
  group: "Optional Services"
  required: true
  label: Enable ConfigAPI
  description: "Config Api endpoints can be used to configure the auth-server, which is an open-source OpenID Connect Provider (OP) and UMA Authorization Server (AS)."
- variable: global.scim.enabled
  default: false
  type: boolean
  group: "Optional Services"
  required: true
  label: Enable SCIM
  description: "System for Cross-domain Identity Management (SCIM) version 2.0"

# ======================
# Test environment group
# ======================
- variable: global.cloud.testEnviroment
  default: false
  type: boolean
  group: "Test Environment"
  required: true
  label: Test environment
  description: "Boolean flag if enabled will strip resources requests and limits from all services."

# =================
# Persistence group
# =================
- variable: global.cnPersistenceType
  default: "sql"
  required: true
  type: enum
  group: "Persistence"
  label: Gluu Persistence backend
  description: "Persistence backend to run Gluu with sql|hybrid"
  options:
    - "hybrid"
    - "sql"

# Hybrid
- variable: config.configmap.cnPersistenceHybridMapping
  default: "default"
  required: false
  type: enum
  group: "Persistence"
  label: Gluu Persistence hybrid mapping
  description: "Specify data that should be saved in persistence (one of default, user, cache, site, token, or session; default to default). Note this environment only takes effect when `global.cnPersistenceType`  is set to `hybrid`."
  options:
    - "default"
    - "user"
    - "site"
    - "cache"
    - "token"
    - "session"
  show_if: "global.cnPersistenceType=hybrid"
# SQL
- variable: config.configmap.cnSqlDbDialect
  default: "default"
  required: false
  type: enum
  group: "Persistence"
  label: Gluu SQL Database dialect
  description: "SQL database dialect. `mysql` or `pgsql`. The former is still not supported yet!"
  options:
    - "mysql"
    - "pgsql"
  show_if: "global.cnPersistenceType=sql"
- variable: config.configmap.cnSqlDbHost
  default: "my-release-mysql.default.svc.cluster.local"
  required: false
  type: hostname
  group: "Persistence"
  label: SQL database host uri
  description: "SQL database host uri"
  show_if: "global.cnPersistenceType=sql"
- variable: config.configmap.cnSqlDbPort
  default: 3306
  required: false
  type: int
  group: "Persistence"
  label: SQL database port
  description: "SQL database port"
  show_if: "global.cnPersistenceType=sql"
- variable: config.configmap.cnSqlDbUser
  default: "gluu"
  group: "Persistence"
  description: "SQL database username"
  type: string
  label: SQL database username
  valid_chars: "^[a-z]+$"
  show_if: "global.cnPersistenceType=sql"
- variable: config.configmap.cnSqldbUserPassword
  default: "Test1234#"
  group: "Persistence"
  description: "SQL password"
  type: password
  label: SQL password

  show_if: "global.cnPersistenceType=sql"
- variable: config.configmap.cnSqlDbName
  default: "gluu"
  group: "Persistence"
  description: "SQL database name"
  type: string
  label: SQL database name
  show_if: "global.cnPersistenceType=sql"
# ===========
# Cache group
# ===========
- variable: config.configmap.cnCacheType
  default: "NATIVE_PERSISTENCE"
  required: true
  type: enum
  group: "Cache"
  label: Gluu Cache
  description: "Cache type. `NATIVE_PERSISTENCE`, `REDIS`. or `IN_MEMORY`. Defaults to `NATIVE_PERSISTENCE` ."
  options:
    - "NATIVE_PERSISTENCE"
    - "IN_MEMORY"
    - "REDIS"
  show_subquestion_if: "REDIS"
  subquestions:
  - variable: config.configmap.cnRedisType
    default: "STANDALONE"
    type: enum
    group: "Cache"
    required: false
    label: Redix service type
    description: "Redis service type. `STANDALONE` or `CLUSTER`. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`."
    options:
      - "STANDALONE"
      - "CLUSTER"
  - variable: config.redisPassword
    default: "Test1234#"
    type: password
    group: "Cache"
    required: false
    label: Redis admin password
    description: "Redis admin password if `config.configmap.cnCacheType` is set to `REDIS`."

  - variable: config.configmap.cnRedisUrl
    default: "redis.redis.svc.cluster.local:6379"
    required: false
    type: hostname
    group: "Cache"
    label: Redis URL
    description: "Redis URL and port number <url>:<port>. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`."

# ==================
# Configuration group
# ==================
- variable: global.fqdn
  default: "demoexample.gluu.org"
  required: true
  type: hostname
  group: "Configuration"
  label: Gluu Installation FQDN
  description: "Fully qualified domain name to be used for Gluu installation. This address will be used to reach Gluu services."
- variable: global.countryCode
  default: "US"
  required: true
  type: string
  group: "Configuration"
  label: Country code
  description: "Country code. Used for certificate creation."
- variable: config.state
  default: "TX"
  required: true
  type: string
  group: "Configuration"
  label: State code
  description: "State code. Used for certificate creation."
- variable: config.city
  default: "Austin"
  required: true
  type: string
  group: "Configuration"
  label: City
  description: "City. Used for certificate creation."
- variable: config.email
  default: "support@gluu.org"
  required: true
  type: string
  group: "Configuration"
  label: Email
  description: "Email address of the administrator usually. Used for certificate creation."
- variable: config.orgName
  default: "Gluu"
  required: true
  type: string
  group: "Configuration"
  label: Organization
  description: "Organization name. Used for certificate creation."

- variable: global.isFqdnRegistered
  default: true
  required: true
  type: boolean
  group: "Configuration"
  label: Is the FQDN globally resolvable
  description: "Boolean flag to enable mapping global.lbIp  to global.fqdn inside pods on clouds that provide static ip for loadbalancers. On cloud that provide only addresses to the LB this flag will enable a script to actively scan config.configmap.lbAddr and update the hosts file inside the pods automatically."

# ===========================
# Ingress group(Istio, NGINX)
# ===========================

# ===========
# Istio group
# ===========
- variable: global.istio.enabled
  default: false
  type: boolean
  group: "Istio"
  required: true
  description: "Boolean flag that enables using istio side cars with Gluu services."
  label: Use Istio side cars
  show_subquestion_if: true
  subquestions:
  - variable: global.istio.namespace
    default: "istio-system"
    type: string
    group: "Istio"
    required: true
    description: "Boolean flag that enables using istio gateway for Gluu. This assumes istio ingress is installed and hence the LB is available."
    label: Istio namespace
  - variable: config.configmap.lbAddr
    default: ""
    group: "Istio"
    description: "Istio loadbalancer address (eks) or ip (gke, aks, digital ocean, local)"
    type: hostname
    label: LB address or ip

# ===========
# NGINX group
# ===========
- variable: config.configmap.lbAddr
  default: ""
  group: "NGINX"
  show_if: "global.istio.ingress=false&&global.isFqdnRegistered=false"
  description: "loadbalancer address (eks) or ip (gke, aks, digital ocean, local)"
  type: hostname
  label: LB address or ip
- variable: nginx-ingress.ingress.openidConfigEnabled
  default: true
  type: boolean
  group: "NGINX"
  required: false
  show_if: "global.istio.ingress=false"
  description: "Enable endpoint /.well-known/openid-configuration"
  label: Enable endpoint /.well-known/openid-configuration
  subquestions:
  - variable: nginx-ingress.ingress.uma2ConfigEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable endpoint /.well-known/uma2-configuration"
    label: Enable endpoint /.well-known/uma2-configuration
  - variable: nginx-ingress.ingress.webfingerEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable endpoint /.well-known/webfinger"
    label: Enable endpoint /.well-known/webfinger
  - variable: nginx-ingress.ingress.webdiscoveryEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable endpoint /.well-known/simple-web-discovery"
    label: Enable endpoint /.well-known/simple-web-discovery
  - variable: nginx-ingress.ingress.configApiEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable config API endpoints /jans-config-api"
    label: Enable config API endpoints /jans-config-api
  - variable: nginx-ingress.ingress.u2fConfigEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable endpoint /.well-known/fido-configuration"
    label: Enable endpoint /.well-known/fido-configuration
  - variable: nginx-ingress.ingress.authServerEnabled
    default: true
    type: boolean
    group: "NGINX"
    required: true
    description: "Enable Auth server endpoints /jans-auth"
    label: Enable Auth server endpoints /jans-auth
- variable: nginx-ingress.ingress.fido2ConfigEnabled
  default: false
  type: boolean
  group: "NGINX"
  show_if: "global.istio.ingress=false"
  required: true
  description: "Enable endpoint /.well-known/fido2-configuration"
  label: Enable endpoint /.well-known/fido2-configuration
- variable: nginx-ingress.ingress.scimConfigEnabled
  default: false
  type: boolean
  group: "NGINX"
  show_if: "global.istio.ingress=false"
  required: true
  description: "Enable endpoint /.well-known/scim-configuration"
  label: Enable endpoint /.well-known/scim-configuration
- variable: nginx-ingress.ingress.scimEnabled
  default: false
  type: boolean
  group: "NGINX"
  show_if: "global.istio.ingress=false"
  required: true
  description: "Enable SCIM endpoints /jans-scim"
  label: Enable SCIM endpoints /jans-scim

# ============
# Images group
# ============
# AuthServer
- variable: auth-server.image.repository
  required: true
  type: string
  default: "janssenproject/auth-server"
  description: "The Auth Server Image repository"
  label: Auth Server image repo
  group: "Images"
  show_if: "global.auth-server.enabled=true"
- variable: auth-server.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The Auth Server Image pull policy"
  label: Auth Server imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.auth-server.enabled=true"
- variable: auth-server.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The Auth Server Image tag"
  label: Auth Server image tag
  group: "Images"
  show_if: "global.auth-server.enabled=true"
# AuthServer KeyRotation
- variable: auth-server-key-rotation.image.repository
  required: true
  type: string
  default: "janssenproject/certmanager"
  description: "The Auth Server KeyRotation Image repository"
  label: Auth Server KeyRotation image repo
  group: "Images"
  show_if: "global.auth-server-key-rotation.enabled=true"
- variable: auth-server-key-rotation.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The Auth Server KeyRotation Image pull policy"
  label: Auth Server KeyRotation imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.auth-server-key-rotation.enabled=true"
- variable: auth-server-key-rotation.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The Auth Server Image tag"
  label: Auth Server KeyRotation image tag
  group: "Images"
  show_if: "global.auth-server-key-rotation.enabled=true"
# Configurator
- variable: config.image.repository
  required: true
  type: string
  default: "janssenproject/configurator"
  description: "The Configurator Image repository"
  label: Configurator image repo
  group: "Images"
  show_if: "global.config.enabled=true"
- variable: config.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The Configurator Image pull policy"
  label: Configurator imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.config.enabled=true"
- variable: config.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The Configurator Image tag"
  label: Configurator image tag
  group: "Images"
  show_if: "global.config.enabled=true"
# ConfigAPI
- variable: config-api.image.repository
  required: true
  type: string
  default: "janssenproject/config-api"
  description: "The ConfigAPI Image repository"
  label: ConfigAPI image repo
  group: "Images"
  show_if: "global.config-api.enabled=true"
- variable: config-api.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The ConfigAPI Image pull policy"
  label: ConfigAPI imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.config-api.enabled=true"
- variable: config-api.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The ConfigAPI Image tag"
  label: ConfigAPI image tag
  group: "Images"
  show_if: "global.config-api.enabled=true"
# Fido2
- variable: fido2.image.repository
  required: true
  type: string
  default: "janssenproject/fido2"
  description: "The Fido2 Image repository"
  label: Fido2 image repo
  group: "Images"
  show_if: "global.fido2.enabled=true"
- variable: fido2.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The Fido2 Image pull policy"
  label: Fido2 imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.fido2.enabled=true"
- variable: fido2.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The Fido2 Image tag"
  label: Fido2 image tag
  group: "Images"
  show_if: "global.fido2.enabled=true"
# Persistence
- variable: persistence.image.repository
  required: true
  type: string
  default: "janssenproject/persistence-loader"
  description: "The Persistence Image repository"
  label: Persistence image repo
  group: "Images"
  show_if: "global.persistence.enabled=true"
- variable: persistence.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The Persistence Image pull policy"
  label: Persistence imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.persistence.enabled=true"
- variable: persistence.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The Persistence Image tag"
  label: Persistence image tag
  group: "Images"
  show_if: "global.persistence.enabled=true"
# SCIM
- variable: scim.image.repository
  required: true
  type: string
  default: "janssenproject/scim"
  description: "The SCIM Image repository"
  label: SCIM image repo
  group: "Images"
  show_if: "global.scim.enabled=true"
- variable: scim.image.pullPolicy
  required: true
  type: enum
  group: "Images"
  default: IfNotPresent
  description: "The SCIM Image pull policy"
  label: SCIM imagePullPolicy
  options:
  - "Always"
  - "IfNotPresent"
  - "Never"
  show_if: "global.scim.enabled=true"
- variable: scim.image.tag
  required: true
  type: string
  default: "1.0.1-1"
  description: "The SCIM Image tag"
  label: SCIM image tag
  group: "Images"
  show_if: "global.scim.enabled=true"

# ==============
# Replicas group
# ==============
# AuthServer
- variable: auth-server.replicas
  default: 1
  required: false
  type: int
  group: "Replicas"
  label: Auth-server Replicas
  description: "Service replica number."
  show_if: "global.auth-server.enabled=true"
# ConfigAPI
- variable: config-api.replicas
  default: 1
  required: false
  type: int
  group: "Replicas"
  label: ConfigAPI Replicas
  description: "Service replica number."
  show_if: "global.config-api.enabled=true"
# ConfigAPI
- variable: config-api.replicas
  default: 1
  required: false
  type: int
  group: "Replicas"
  label: ConfigAPI Replicas
  description: "Service replica number."
  show_if: "global.config-api.enabled=true"
# Fido2
- variable: fido2.replicas
  default: 1
  required: false
  type: int
  group: "Replicas"
  label: Fido2 Replicas
  description: "Service replica number."
  show_if: "global.fido2.enabled=true"
# SCIM
- variable: scim.replicas
  default: 1
  required: false
  type: int
  group: "Replicas"
  label: SCIM Replicas
  description: "Service replica number."
  show_if: "global.scim.enabled=true"
