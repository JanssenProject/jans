# Please do not attempt to edit this flow without the direct consent from the DevOps team. This file is managed centrally.
# Contact @moabu
# Sonar cloud https://sonarcloud.io/organizations/janssenproject/projects
name: Code quality check

on:
  push:
    branches:
      - master
      - main
      - "!update-pycloud-in-**"      
    paths-ignore:
      - 'docker-jans-**/CHANGELOG.md'
      - 'docker-jans-**/version.txt'
      - 'jans-pycloudlib/CHANGELOG.md'
      - 'jans-pycloudlib/jans/pycloudlib/version.py'
      - '**.md'

  pull_request:
    branches:
      - master
      - main
      - "!update-pycloud-in-**"      
    paths-ignore:
      - 'docker-jans-**/CHANGELOG.md'
      - 'docker-jans-**/version.txt'
      - 'jans-pycloudlib/CHANGELOG.md'
      - 'jans-pycloudlib/jans/pycloudlib/version.py'
      - '**.md'
  workflow_dispatch:

jobs:
  sonar-scan:
    name: sonar scan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: [jans-auth-server, jans-config-api, jans-core, jans-ce-setup, jans-cli, jans-client-api, jans-fido2, jans-notify, jans-orm, jans-scim, jans-eleven, jans-pycloudlib]
    env:
      JVM_PROJECTS: |
        jans-auth-server
        jans-orm
        jans-config-api
        jans-client-api
        jans-scim
        jans-core
        jans-notify
        jans-fido2
        jans-eleven
      NON_JVM_PROJECTS: |
        jans-ce-setup
        jans-cli
        jans-pycloudlib

    steps:
      - name: check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis

      - name: find changed directories
        run: |
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            echo "CHANGED_DIR=$( git diff --name-only ${{ github.event.before }} ${{ github.event.pull_request.head.sha }}  | cut -d/ -f1 | sort -u | sed -z 's/\n/,/g;s/^/[/;s/,$/]/;s/$/\n/')" >> ${GITHUB_ENV}
          else
            # Push
            git fetch origin ${{ github.event.before }} --depth=1
            echo "CHANGED_DIR=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA  | cut -d/ -f1 | sort -u | sed -z 's/\n/,/g;s/^/[/;s/,$/]/;s/$/\n/')" >> ${GITHUB_ENV}
          fi

      - name: check env
        run: |
          echo ${{ env.CHANGED_DIR }}
          echo ${{ matrix.module }}

      - name: Set up JDK 11
        # JanssenProject/jans-cli is too similar to JanssenProject/jans-client-api as the contains function is returning it belonging to the JVM_PROJECT
        if: contains(env.CHANGED_DIR, matrix.module) && contains(env.JVM_PROJECTS, matrix.module) && matrix.module != 'jans-cli'
        uses: actions/setup-java@v2.5.0
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Cache SonarCloud packages for JVM based project
        # JanssenProject/jans-cli is too similar to JanssenProject/jans-client-api as the contains function is returning it belonging to the JVM_PROJECT
        if: contains(env.CHANGED_DIR, matrix.module) && contains(env.JVM_PROJECTS, matrix.module) && matrix.module != 'jans-cli'
        uses: actions/cache@v2.1.7
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Build and analyze JVM based project
        # JanssenProject/jans-cli is too similar to JanssenProject/jans-client-api as the contains function is returning it belonging to the JVM_PROJECT
        if: contains(env.CHANGED_DIR, matrix.module) && contains(env.JVM_PROJECTS, matrix.module) && matrix.module != 'jans-cli'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ${{ matrix.module }}
          case ${{ matrix.module }} in
            "jans-auth-server")
                    ;&
            "jans-client-api")
                    ;&
            "jans-scim")
                    ;&
            "jans-eleven")
                    ;&
            "jans-config-api")
                  echo "Run Sonar analysis without test execution"
                  mvn -B -DskipTests=true install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
                ;;
            *)
            echo "Run Sonar analysis with test execution"
            mvn -B install org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            ;;
          esac


      - name: Convert repo org name to lowercase for non JVM projects
        if: contains(env.CHANGED_DIR, matrix.module) && contains(env.NON_JVM_PROJECTS, matrix.module)
        env:
          REPO_OWNER: ${{ github.repository_owner }}
        run: |
          echo "REPO_ORG=${REPO_OWNER,,}" >>${GITHUB_ENV}

      - name: SonarCloud Scan for non-JVM project
        if: contains(env.CHANGED_DIR, matrix.module) && contains(env.NON_JVM_PROJECTS, matrix.module)
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=${{ env.REPO_ORG }}
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ matrix.module }}
          projectBaseDir: ${{ matrix.module }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
