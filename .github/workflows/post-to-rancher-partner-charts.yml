name: rancher-partner-charts
# This posts the latest chart to rancher/partner-charts
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  publish:
    name: Publish on rancher partner charts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Get latest tag
      id: previoustag
      run: |
        echo "::set-output name=tag::$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1)"
        echo "::set-output name=version::$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1 | cut -d 'v' -f 2)"
    - name: Configure Git
      run: |
        git clone  https://mo-auto:${{ secrets.MOWORKFLOWTOKEN }}@github.com/mo-auto/partner-charts.git
        git config --global user.name "mo-auto"
        git config --global user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"
        cd partner-charts
        git remote add upstream https://github.com/rancher/partner-charts.git
        git fetch upstream
        # ensures current branch is main-source
        git checkout main-source
        # pulls all new commits made to upstream/main-source
        git pull upstream main-source
        # this will delete all local changes to main-source
        git reset --hard upstream/main-source
        # take care, this will delete all changes on the forked main-source
        git push origin main-source --force
        mkdir ./packages/janssen || echo "directory exists!"
        cp ../automation/rancher-partner-charts/package.yaml ./packages/janssen/package.yaml
        export PACKAGE=janssen
        make prepare
        cp ../automation/rancher-partner-charts/app-readme.md ./packages/janssen/charts/app-readme.md
        cp ../automation/rancher-partner-charts/questions.yaml ./packages/janssen/charts/questions.yaml
        make patch
        make clean
        git add -A
        git commit -S -s -m "feat(janssen): patch helm package"
        make charts
        git add -A
        git commit -S -s -m "feat(janssen): chart helm package"
        git push origin
        MESSAGE="feat(janssen): update janssen helm partner chart"
        BODY=$(<../automation/rancher-partner-charts/pull_request_body.md)
        echo "${{ secrets.MOWORKFLOWTOKEN }}" > token.txt
        gh auth login --with-token < token.txt
        PR=$(gh pr create --base "main-source" --body "${BODY}" --title "${MESSAGE}")        

#TODO: Add docker test before opening a PR in rancher-partner charts.