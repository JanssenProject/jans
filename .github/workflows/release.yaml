name: release
on:
  push:
    branches:
      - master
      - main
      # below branch is triggered by jenkins which triggers dev image
      - update-source-build-date
  workflow_dispatch:
jobs:
  release-chart-pr:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        charts: ["charts/janssen" ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.1
      id: release-please
      with:
         path: ${{ matrix.charts }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: helm
         package-name: ${{ matrix.charts }}
         monorepo-tags: true
  release-simple-pr:
    needs: release-chart-pr
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        simple: [ "jans-scim", "jans-orm", "jans-notify", "jans-fido2", "jans-eleven", "jans-core", "jans-config-api", "jans-client-api", "jans-bom", "jans-auth-server", "docker-jans-auth-server", "docker-jans-certmanager", "docker-jans-config-api", "docker-jans-client-api", "docker-jans-configurator", "docker-jans-fido2", "docker-jans-persistence-loader", "docker-jans-scim" ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.1
      id: release-please
      with:
         path: ${{ matrix.simple }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
         package-name: ${{ matrix.simple }}
         monorepo-tags: true
  release-python-pr:
    needs: release-simple-pr
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python-projects: ["jans-pycloudlib", "jans-cli", "jans-linux-setup"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.1
      id: release-please
      with:
         path: ${{ matrix.python-projects }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: python
         package-name: ${{ matrix.python-projects }}
         monorepo-tags: true
  mega-release-pr:
    needs: release-python-pr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"


    - uses: google-github-actions/release-please-action@v3.1
      id: release-please
      with:
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
