THREE.OBJLoader=function(){var t=/^[og]\s*(.+)?/,e=/^mtllib /,r=/^usemtl /;function i(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.materials=null}return i.prototype={constructor:i,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(t){e(s.parse(t))},r,i)},setPath:function(t){this.path=t},setMaterials:function(t){return this.materials=t,this},parse:function(i){console.time("OBJLoader");var s=new function(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(r>=0?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,n,o,h){var l=this.vertices.length,u=this.parseVertexIndex(t,l),c=this.parseVertexIndex(e,l),p=this.parseVertexIndex(r,l);if(this.addVertex(u,c,p),void 0!==i&&""!==i){var m=this.uvs.length;u=this.parseUVIndex(i,m),c=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(u,c,p)}if(void 0!==n&&""!==n){var f=this.normals.length;u=this.parseNormalIndex(n,f),c=n===o?u:this.parseNormalIndex(o,f),p=n===h?u:this.parseNormalIndex(h,f),this.addNormal(u,c,p)}this.colors.length>0&&this.addColor(u,c,p)},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));var n=0;for(a=e.length;n<a;n++)this.addUVLine(this.parseUVIndex(e[n],i))}};return t.startObject("",!1),t};-1!==i.indexOf("\r\n")&&(i=i.replace(/\r\n/g,"\n")),-1!==i.indexOf("\\\n")&&(i=i.replace(/\\\n/g,""));for(var a=i.split("\n"),n="",o="",h=[],l="function"==typeof"".trimLeft,u=0,c=a.length;u<c;u++)if(n=a[u],0!==(n=l?n.trimLeft():n.trim()).length&&"#"!==(o=n.charAt(0)))if("v"===o){var p=n.split(/\s+/);switch(p[0]){case"v":s.vertices.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),8===p.length&&s.colors.push(parseFloat(p[4]),parseFloat(p[5]),parseFloat(p[6]));break;case"vn":s.normals.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3]));break;case"vt":s.uvs.push(parseFloat(p[1]),parseFloat(p[2]))}}else if("f"===o){for(var m=n.substr(1).trim().split(/\s+/),f=[],d=0,v=m.length;d<v;d++){var g=m[d];if(g.length>0){var b=g.split("/");f.push(b)}}var E=f[0];for(d=1,v=f.length-1;d<v;d++){var x=f[d],j=f[d+1];s.addFace(E[0],x[0],j[0],E[1],x[1],j[1],E[2],x[2],j[2])}}else if("l"===o){var y=n.substring(1).trim().split(" "),L=[],H=[];if(-1===n.indexOf("/"))L=y;else for(var R=0,T=y.length;R<T;R++){var w=y[R].split("/");""!==w[0]&&L.push(w[0]),""!==w[1]&&H.push(w[1])}s.addLineGeometry(L,H)}else if("p"===o){var V=n.substr(1).trim().split(" ");s.addPointGeometry(V)}else if(null!==(h=t.exec(n))){var M=(" "+h[0].substr(1).trim()).substr(1);s.startObject(M)}else if(r.test(n))s.object.startMaterial(n.substring(7).trim(),s.materialLibraries);else if(e.test(n))s.materialLibraries.push(n.substring(7).trim());else{if("s"!==o){if("\0"===n)continue;throw new Error('THREE.OBJLoader: Unexpected line: "'+n+'"')}if((h=n.split(" ")).length>1){var F=h[1].trim().toLowerCase();s.object.smooth="0"!==F&&"off"!==F}else s.object.smooth=!0;(J=s.object.currentMaterial())&&(J.smooth=s.object.smooth)}s.finalize();var I=new THREE.Group;I.materialLibraries=[].concat(s.materialLibraries);for(u=0,c=s.objects.length;u<c;u++){var P=s.objects[u],A=P.geometry,z=P.materials,B="Line"===A.type,C="Points"===A.type,O=!1;if(0!==A.vertices.length){var U=new THREE.BufferGeometry;U.addAttribute("position",new THREE.Float32BufferAttribute(A.vertices,3)),A.normals.length>0?U.addAttribute("normal",new THREE.Float32BufferAttribute(A.normals,3)):U.computeVertexNormals(),A.colors.length>0&&(O=!0,U.addAttribute("color",new THREE.Float32BufferAttribute(A.colors,3))),A.uvs.length>0&&U.addAttribute("uv",new THREE.Float32BufferAttribute(A.uvs,2));for(var N,G=[],S=0,_=z.length;S<_;S++){var D=z[S],J=void 0;if(null!==this.materials)if(J=this.materials.create(D.name),!B||!J||J instanceof THREE.LineBasicMaterial){if(C&&J&&!(J instanceof THREE.PointsMaterial)){var k=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});q.copy(J),J=k}}else{var q=new THREE.LineBasicMaterial;q.copy(J),q.lights=!1,J=q}J||((J=B?new THREE.LineBasicMaterial:C?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=D.name),J.flatShading=!D.smooth,J.vertexColors=O?THREE.VertexColors:THREE.NoColors,G.push(J)}if(G.length>1){for(S=0,_=z.length;S<_;S++){D=z[S];U.addGroup(D.groupStart,D.groupCount,S)}N=B?new THREE.LineSegments(U,G):C?new THREE.Points(U,G):new THREE.Mesh(U,G)}else N=B?new THREE.LineSegments(U,G[0]):C?new THREE.Points(U,G[0]):new THREE.Mesh(U,G[0]);N.name=P.name,I.add(N)}}return console.timeEnd("OBJLoader"),I}},i}();