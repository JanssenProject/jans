#policy
policy.page_title=Two-factor authentication settings
policy.title=2FA policy
policy.text=Choose when you are actually prompted for a second factor:
policy.go_manage=Manage your 2FA settings

policy.when_prompted=You'll be prompted for second factor:

policy.EVERY_LOGIN=Always (upon every login attempt)
policy.LOCATION_UNKNOWN=If the location (e.g. city) detected in the login attempt is unrecognized
policy.DEVICE_UNKNOWN=If the device used to login is unrecognized

#trusted devices
trdevices.title=Trusted devices
trdevices.text={
This is a list of devices you have used to login recently with a second factor. Remove those you do not recognize or do not deem as trusted.
}

trdevices.none=Currently your list of trusted devices is empty.
#trdevices.last_location=Last usages:
trdevices.last_location=Last usage:
trdevices.on= - 

#Admin stuff

adm.strongauth_title=2FA settings
adm.strongauth_min2fa_text={
Choose the minimum number of credentials users should enroll before second factor 
authentication can be enabled.
}

adm.strongauth_autoEnable=Automatically turn 2FA on when users have enrolled enough credentials
adm.strongauth_hideswitch=Prevent users to explicitly turn 2FA on and off  
adm.strongauth_hideswitch2=(2FA may still be turned off automatically when credentials are removed)

adm.strongauth_selPreferred=Allow users to set their preferred mechanism for two-factor authentication

adm.strongauth.policy.text=Choose the global enforcement policy applicable to second factor authentication.
adm.strongauth.policy.EVERY_LOGIN=Enforce strong authentication for every login attempt
adm.strongauth.policy.LOCATION_UNKNOWN=Prompt for 2FA when users' location is unrecognized
adm.strongauth.policy.DEVICE_UNKNOWN=Prompt for 2FA when users' device is unrecognized
adm.strongauth.policy.CUSTOM=Allow the user to set their own strong authentication policy

adm.strongauth_location_exp=Location expiration in days
adm.strongauth_device_exp=Device expiration in days
adm.strongauth_exp_invalid=Invalid expiration value

adm.strongauth_warning_one={
We recommend requiring users to enroll at least two strong credentials to minimize the chance of lockout and calls to your support desk!.

Proceed?
}

adm.strongauth_warning_up={
Current users with exactly {0} enrolled credentials and 2FA on will be able to login with their credentials as usual. Proceed?
}