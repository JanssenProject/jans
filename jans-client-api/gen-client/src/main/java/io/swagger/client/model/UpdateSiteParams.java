/*
 * jans-api-server
 * jans-api-server
 *
 * OpenAPI spec version: 4.2
 * Contact: yuriyz@gluu.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * UpdateSiteParams
 */


public class UpdateSiteParams {
  @SerializedName("rp_id")
  private String rpId = null;

  @SerializedName("redirect_uris")
  private List<String> redirectUris = null;

  @SerializedName("post_logout_redirect_uris")
  private List<String> postLogoutRedirectUris = null;

  @SerializedName("response_types")
  private List<String> responseTypes = null;

  @SerializedName("grant_types")
  private List<String> grantTypes = null;

  @SerializedName("scope")
  private List<String> scope = null;

  @SerializedName("acr_values")
  private List<String> acrValues = null;

  @SerializedName("client_jwks_uri")
  private String clientJwksUri = null;

  @SerializedName("client_token_endpoint_auth_method")
  private String clientTokenEndpointAuthMethod = null;

  @SerializedName("client_request_uris")
  private List<String> clientRequestUris = null;

  @SerializedName("client_sector_identifier_uri")
  private String clientSectorIdentifierUri = null;

  @SerializedName("contacts")
  private List<String> contacts = null;

  @SerializedName("ui_locales")
  private List<String> uiLocales = null;

  @SerializedName("claims_locales")
  private List<String> claimsLocales = null;

  @SerializedName("access_token_as_jwt")
  private Boolean accessTokenAsJwt = null;

  @SerializedName("access_token_signing_alg")
  private String accessTokenSigningAlg = null;

  @SerializedName("rpt_as_jwt")
  private Boolean rptAsJwt = null;

  @SerializedName("claims_redirect_uri")
  private List<String> claimsRedirectUri = null;

  @SerializedName("client_token_endpoint_auth_signing_alg")
  private String clientTokenEndpointAuthSigningAlg = null;

  @SerializedName("client_name")
  private String clientName = null;

  @SerializedName("logo_uri")
  private String logoUri = null;

  @SerializedName("client_uri")
  private String clientUri = null;

  @SerializedName("policy_uri")
  private String policyUri = null;

  @SerializedName("front_channel_logout_session_required")
  private Boolean frontChannelLogoutSessionRequired = null;

  @SerializedName("tos_uri")
  private String tosUri = null;

  @SerializedName("jwks")
  private String jwks = null;

  @SerializedName("id_token_binding_cnf")
  private String idTokenBindingCnf = null;

  @SerializedName("tls_client_auth_subject_dn")
  private String tlsClientAuthSubjectDn = null;

  @SerializedName("run_introspection_script_beforeaccess_token_as_jwt_creation_and_include_claims")
  private Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = null;

  @SerializedName("id_token_signed_response_alg")
  private String idTokenSignedResponseAlg = null;

  @SerializedName("id_token_encrypted_response_alg")
  private String idTokenEncryptedResponseAlg = null;

  @SerializedName("id_token_encrypted_response_enc")
  private String idTokenEncryptedResponseEnc = null;

  @SerializedName("user_info_signed_response_alg")
  private String userInfoSignedResponseAlg = null;

  @SerializedName("user_info_encrypted_response_alg")
  private String userInfoEncryptedResponseAlg = null;

  @SerializedName("user_info_encrypted_response_enc")
  private String userInfoEncryptedResponseEnc = null;

  @SerializedName("request_object_signing_alg")
  private String requestObjectSigningAlg = null;

  @SerializedName("request_object_encryption_alg")
  private String requestObjectEncryptionAlg = null;

  @SerializedName("request_object_encryption_enc")
  private String requestObjectEncryptionEnc = null;

  @SerializedName("default_max_age")
  private Integer defaultMaxAge = null;

  @SerializedName("require_auth_time")
  private Boolean requireAuthTime = null;

  @SerializedName("initiate_login_uri")
  private String initiateLoginUri = null;

  @SerializedName("authorized_origins")
  private List<String> authorizedOrigins = null;

  @SerializedName("access_token_lifetime")
  private Integer accessTokenLifetime = null;

  @SerializedName("software_id")
  private String softwareId = null;

  @SerializedName("software_version")
  private String softwareVersion = null;

  @SerializedName("software_statement")
  private String softwareStatement = null;

  @SerializedName("custom_attributes")
  private Map<String, String> customAttributes = null;

  @SerializedName("sync_client_from_op")
  private Boolean syncClientFromOp = null;

  @SerializedName("sync_client_period_in_seconds")
  private Integer syncClientPeriodInSeconds = null;

  @SerializedName("allow_spontaneous_scopes")
  private Boolean allowSpontaneousScopes = null;

  @SerializedName("spontaneous_scopes")
  private List<String> spontaneousScopes = null;

  public UpdateSiteParams rpId(String rpId) {
    this.rpId = rpId;
    return this;
  }

   /**
   * Get rpId
   * @return rpId
  **/
  @Schema(example = "6F9619FF-8B86-D011-B42D-00CF4FC964FF", required = true, description = "")
  public String getRpId() {
    return rpId;
  }

  public void setRpId(String rpId) {
    this.rpId = rpId;
  }

  public UpdateSiteParams redirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public UpdateSiteParams addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<String>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

   /**
   * Provide the list of redirection URIs. The first URL is where the user will be redirected after successful authorization at the OpenID Connect Provider (OP).
   * @return redirectUris
  **/
  @Schema(example = "[\"https://client.example.org/cb\"]", description = "Provide the list of redirection URIs. The first URL is where the user will be redirected after successful authorization at the OpenID Connect Provider (OP).")
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }

  public UpdateSiteParams postLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
    return this;
  }

  public UpdateSiteParams addPostLogoutRedirectUrisItem(String postLogoutRedirectUrisItem) {
    if (this.postLogoutRedirectUris == null) {
      this.postLogoutRedirectUris = new ArrayList<String>();
    }
    this.postLogoutRedirectUris.add(postLogoutRedirectUrisItem);
    return this;
  }

   /**
   * Get postLogoutRedirectUris
   * @return postLogoutRedirectUris
  **/
  @Schema(example = "[\"https://client.example.org/logout/page1\",\"https://client.example.org/logout/page2\",\"https://client.example.org/logout/page3\"]", description = "")
  public List<String> getPostLogoutRedirectUris() {
    return postLogoutRedirectUris;
  }

  public void setPostLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
  }

  public UpdateSiteParams responseTypes(List<String> responseTypes) {
    this.responseTypes = responseTypes;
    return this;
  }

  public UpdateSiteParams addResponseTypesItem(String responseTypesItem) {
    if (this.responseTypes == null) {
      this.responseTypes = new ArrayList<String>();
    }
    this.responseTypes.add(responseTypesItem);
    return this;
  }

   /**
   * Get responseTypes
   * @return responseTypes
  **/
  @Schema(example = "[\"code\"]", description = "")
  public List<String> getResponseTypes() {
    return responseTypes;
  }

  public void setResponseTypes(List<String> responseTypes) {
    this.responseTypes = responseTypes;
  }

  public UpdateSiteParams grantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
    return this;
  }

  public UpdateSiteParams addGrantTypesItem(String grantTypesItem) {
    if (this.grantTypes == null) {
      this.grantTypes = new ArrayList<String>();
    }
    this.grantTypes.add(grantTypesItem);
    return this;
  }

   /**
   * Get grantTypes
   * @return grantTypes
  **/
  @Schema(example = "[\"authorization_code\",\"client_credentials\"]", description = "")
  public List<String> getGrantTypes() {
    return grantTypes;
  }

  public void setGrantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
  }

  public UpdateSiteParams scope(List<String> scope) {
    this.scope = scope;
    return this;
  }

  public UpdateSiteParams addScopeItem(String scopeItem) {
    if (this.scope == null) {
      this.scope = new ArrayList<String>();
    }
    this.scope.add(scopeItem);
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(example = "[\"openid\"]", description = "")
  public List<String> getScope() {
    return scope;
  }

  public void setScope(List<String> scope) {
    this.scope = scope;
  }

  public UpdateSiteParams acrValues(List<String> acrValues) {
    this.acrValues = acrValues;
    return this;
  }

  public UpdateSiteParams addAcrValuesItem(String acrValuesItem) {
    if (this.acrValues == null) {
      this.acrValues = new ArrayList<String>();
    }
    this.acrValues.add(acrValuesItem);
    return this;
  }

   /**
   * Get acrValues
   * @return acrValues
  **/
  @Schema(example = "[\"basic\"]", description = "")
  public List<String> getAcrValues() {
    return acrValues;
  }

  public void setAcrValues(List<String> acrValues) {
    this.acrValues = acrValues;
  }

  public UpdateSiteParams clientJwksUri(String clientJwksUri) {
    this.clientJwksUri = clientJwksUri;
    return this;
  }

   /**
   * Get clientJwksUri
   * @return clientJwksUri
  **/
  @Schema(description = "")
  public String getClientJwksUri() {
    return clientJwksUri;
  }

  public void setClientJwksUri(String clientJwksUri) {
    this.clientJwksUri = clientJwksUri;
  }

  public UpdateSiteParams clientTokenEndpointAuthMethod(String clientTokenEndpointAuthMethod) {
    this.clientTokenEndpointAuthMethod = clientTokenEndpointAuthMethod;
    return this;
  }

   /**
   * Get clientTokenEndpointAuthMethod
   * @return clientTokenEndpointAuthMethod
  **/
  @Schema(description = "")
  public String getClientTokenEndpointAuthMethod() {
    return clientTokenEndpointAuthMethod;
  }

  public void setClientTokenEndpointAuthMethod(String clientTokenEndpointAuthMethod) {
    this.clientTokenEndpointAuthMethod = clientTokenEndpointAuthMethod;
  }

  public UpdateSiteParams clientRequestUris(List<String> clientRequestUris) {
    this.clientRequestUris = clientRequestUris;
    return this;
  }

  public UpdateSiteParams addClientRequestUrisItem(String clientRequestUrisItem) {
    if (this.clientRequestUris == null) {
      this.clientRequestUris = new ArrayList<String>();
    }
    this.clientRequestUris.add(clientRequestUrisItem);
    return this;
  }

   /**
   * Get clientRequestUris
   * @return clientRequestUris
  **/
  @Schema(description = "")
  public List<String> getClientRequestUris() {
    return clientRequestUris;
  }

  public void setClientRequestUris(List<String> clientRequestUris) {
    this.clientRequestUris = clientRequestUris;
  }

  public UpdateSiteParams clientSectorIdentifierUri(String clientSectorIdentifierUri) {
    this.clientSectorIdentifierUri = clientSectorIdentifierUri;
    return this;
  }

   /**
   * Get clientSectorIdentifierUri
   * @return clientSectorIdentifierUri
  **/
  @Schema(description = "")
  public String getClientSectorIdentifierUri() {
    return clientSectorIdentifierUri;
  }

  public void setClientSectorIdentifierUri(String clientSectorIdentifierUri) {
    this.clientSectorIdentifierUri = clientSectorIdentifierUri;
  }

  public UpdateSiteParams contacts(List<String> contacts) {
    this.contacts = contacts;
    return this;
  }

  public UpdateSiteParams addContactsItem(String contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<String>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @Schema(example = "[\"foo_bar@spam.org\"]", description = "")
  public List<String> getContacts() {
    return contacts;
  }

  public void setContacts(List<String> contacts) {
    this.contacts = contacts;
  }

  public UpdateSiteParams uiLocales(List<String> uiLocales) {
    this.uiLocales = uiLocales;
    return this;
  }

  public UpdateSiteParams addUiLocalesItem(String uiLocalesItem) {
    if (this.uiLocales == null) {
      this.uiLocales = new ArrayList<String>();
    }
    this.uiLocales.add(uiLocalesItem);
    return this;
  }

   /**
   * Get uiLocales
   * @return uiLocales
  **/
  @Schema(description = "")
  public List<String> getUiLocales() {
    return uiLocales;
  }

  public void setUiLocales(List<String> uiLocales) {
    this.uiLocales = uiLocales;
  }

  public UpdateSiteParams claimsLocales(List<String> claimsLocales) {
    this.claimsLocales = claimsLocales;
    return this;
  }

  public UpdateSiteParams addClaimsLocalesItem(String claimsLocalesItem) {
    if (this.claimsLocales == null) {
      this.claimsLocales = new ArrayList<String>();
    }
    this.claimsLocales.add(claimsLocalesItem);
    return this;
  }

   /**
   * Get claimsLocales
   * @return claimsLocales
  **/
  @Schema(description = "")
  public List<String> getClaimsLocales() {
    return claimsLocales;
  }

  public void setClaimsLocales(List<String> claimsLocales) {
    this.claimsLocales = claimsLocales;
  }

  public UpdateSiteParams accessTokenAsJwt(Boolean accessTokenAsJwt) {
    this.accessTokenAsJwt = accessTokenAsJwt;
    return this;
  }

   /**
   * specifies whether access_token should be return as JWT or not. Default value is false.
   * @return accessTokenAsJwt
  **/
  @Schema(description = "specifies whether access_token should be return as JWT or not. Default value is false.")
  public Boolean isAccessTokenAsJwt() {
    return accessTokenAsJwt;
  }

  public void setAccessTokenAsJwt(Boolean accessTokenAsJwt) {
    this.accessTokenAsJwt = accessTokenAsJwt;
  }

  public UpdateSiteParams accessTokenSigningAlg(String accessTokenSigningAlg) {
    this.accessTokenSigningAlg = accessTokenSigningAlg;
    return this;
  }

   /**
   * sets signing algorithm used for JWT signing. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512
   * @return accessTokenSigningAlg
  **/
  @Schema(description = "sets signing algorithm used for JWT signing. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512")
  public String getAccessTokenSigningAlg() {
    return accessTokenSigningAlg;
  }

  public void setAccessTokenSigningAlg(String accessTokenSigningAlg) {
    this.accessTokenSigningAlg = accessTokenSigningAlg;
  }

  public UpdateSiteParams rptAsJwt(Boolean rptAsJwt) {
    this.rptAsJwt = rptAsJwt;
    return this;
  }

   /**
   * specifies whether RPT should be return as JWT or not. Default value is false.
   * @return rptAsJwt
  **/
  @Schema(description = "specifies whether RPT should be return as JWT or not. Default value is false.")
  public Boolean isRptAsJwt() {
    return rptAsJwt;
  }

  public void setRptAsJwt(Boolean rptAsJwt) {
    this.rptAsJwt = rptAsJwt;
  }

  public UpdateSiteParams claimsRedirectUri(List<String> claimsRedirectUri) {
    this.claimsRedirectUri = claimsRedirectUri;
    return this;
  }

  public UpdateSiteParams addClaimsRedirectUriItem(String claimsRedirectUriItem) {
    if (this.claimsRedirectUri == null) {
      this.claimsRedirectUri = new ArrayList<String>();
    }
    this.claimsRedirectUri.add(claimsRedirectUriItem);
    return this;
  }

   /**
   * Get claimsRedirectUri
   * @return claimsRedirectUri
  **/
  @Schema(description = "")
  public List<String> getClaimsRedirectUri() {
    return claimsRedirectUri;
  }

  public void setClaimsRedirectUri(List<String> claimsRedirectUri) {
    this.claimsRedirectUri = claimsRedirectUri;
  }

  public UpdateSiteParams clientTokenEndpointAuthSigningAlg(String clientTokenEndpointAuthSigningAlg) {
    this.clientTokenEndpointAuthSigningAlg = clientTokenEndpointAuthSigningAlg;
    return this;
  }

   /**
   * Provide the Requested Client Authentication method for the Token Endpoint. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512.
   * @return clientTokenEndpointAuthSigningAlg
  **/
  @Schema(description = "Provide the Requested Client Authentication method for the Token Endpoint. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512.")
  public String getClientTokenEndpointAuthSigningAlg() {
    return clientTokenEndpointAuthSigningAlg;
  }

  public void setClientTokenEndpointAuthSigningAlg(String clientTokenEndpointAuthSigningAlg) {
    this.clientTokenEndpointAuthSigningAlg = clientTokenEndpointAuthSigningAlg;
  }

  public UpdateSiteParams clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * rp will generate its own non-human readable name by default if client_name is not specified
   * @return clientName
  **/
  @Schema(description = "rp will generate its own non-human readable name by default if client_name is not specified")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public UpdateSiteParams logoUri(String logoUri) {
    this.logoUri = logoUri;
    return this;
  }

   /**
   * specifies an URL that references a logo for the Client application.
   * @return logoUri
  **/
  @Schema(example = "https://client.example.org/logo.png", description = "specifies an URL that references a logo for the Client application.")
  public String getLogoUri() {
    return logoUri;
  }

  public void setLogoUri(String logoUri) {
    this.logoUri = logoUri;
  }

  public UpdateSiteParams clientUri(String clientUri) {
    this.clientUri = clientUri;
    return this;
  }

   /**
   * specifies an URL of the home page of the Client.
   * @return clientUri
  **/
  @Schema(example = "https://client.example.org/page", description = "specifies an URL of the home page of the Client.")
  public String getClientUri() {
    return clientUri;
  }

  public void setClientUri(String clientUri) {
    this.clientUri = clientUri;
  }

  public UpdateSiteParams policyUri(String policyUri) {
    this.policyUri = policyUri;
    return this;
  }

   /**
   * specifies an URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
   * @return policyUri
  **/
  @Schema(example = "https://client.example.org/page", description = "specifies an URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.")
  public String getPolicyUri() {
    return policyUri;
  }

  public void setPolicyUri(String policyUri) {
    this.policyUri = policyUri;
  }

  public UpdateSiteParams frontChannelLogoutSessionRequired(Boolean frontChannelLogoutSessionRequired) {
    this.frontChannelLogoutSessionRequired = frontChannelLogoutSessionRequired;
    return this;
  }

   /**
   * specifies if front channel logout session required.
   * @return frontChannelLogoutSessionRequired
  **/
  @Schema(example = "true", description = "specifies if front channel logout session required.")
  public Boolean isFrontChannelLogoutSessionRequired() {
    return frontChannelLogoutSessionRequired;
  }

  public void setFrontChannelLogoutSessionRequired(Boolean frontChannelLogoutSessionRequired) {
    this.frontChannelLogoutSessionRequired = frontChannelLogoutSessionRequired;
  }

  public UpdateSiteParams tosUri(String tosUri) {
    this.tosUri = tosUri;
    return this;
  }

   /**
   * specifies an URL that the Relying Party Client provides to the End-User to read about the Relying Party&#x27;s terms.
   * @return tosUri
  **/
  @Schema(example = "https://client.example.org/page", description = "specifies an URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms.")
  public String getTosUri() {
    return tosUri;
  }

  public void setTosUri(String tosUri) {
    this.tosUri = tosUri;
  }

  public UpdateSiteParams jwks(String jwks) {
    this.jwks = jwks;
    return this;
  }

   /**
   * Client&#x27;s JSON Web Key Set (JWK) document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it must not use jwks. One significant downside of jwks is that it does not enable key rotation. The jwks_uri and jwks parameters must not be used together.
   * @return jwks
  **/
  @Schema(example = "{\"key1\": \"value1\", \"key2\": \"value2\"}", description = "Client's JSON Web Key Set (JWK) document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it must not use jwks. One significant downside of jwks is that it does not enable key rotation. The jwks_uri and jwks parameters must not be used together.")
  public String getJwks() {
    return jwks;
  }

  public void setJwks(String jwks) {
    this.jwks = jwks;
  }

  public UpdateSiteParams idTokenBindingCnf(String idTokenBindingCnf) {
    this.idTokenBindingCnf = idTokenBindingCnf;
    return this;
  }

   /**
   * Get idTokenBindingCnf
   * @return idTokenBindingCnf
  **/
  @Schema(example = "4NRB1-0XZABZI9E6-5SM3R", description = "")
  public String getIdTokenBindingCnf() {
    return idTokenBindingCnf;
  }

  public void setIdTokenBindingCnf(String idTokenBindingCnf) {
    this.idTokenBindingCnf = idTokenBindingCnf;
  }

  public UpdateSiteParams tlsClientAuthSubjectDn(String tlsClientAuthSubjectDn) {
    this.tlsClientAuthSubjectDn = tlsClientAuthSubjectDn;
    return this;
  }

   /**
   * Get tlsClientAuthSubjectDn
   * @return tlsClientAuthSubjectDn
  **/
  @Schema(example = "www.test.com", description = "")
  public String getTlsClientAuthSubjectDn() {
    return tlsClientAuthSubjectDn;
  }

  public void setTlsClientAuthSubjectDn(String tlsClientAuthSubjectDn) {
    this.tlsClientAuthSubjectDn = tlsClientAuthSubjectDn;
  }

  public UpdateSiteParams runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims(Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) {
    this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
    return this;
  }

   /**
   * choose to run introspection script before access_token_as_jwt creation and include claims.
   * @return runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims
  **/
  @Schema(example = "true", description = "choose to run introspection script before access_token_as_jwt creation and include claims.")
  public Boolean isRunIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims() {
    return runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
  }

  public void setRunIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims(Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) {
    this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
  }

  public UpdateSiteParams idTokenSignedResponseAlg(String idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
    return this;
  }

   /**
   * choose the JWS alg algorithm (JWA) required for the ID Token issued to this client_id. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return idTokenSignedResponseAlg
  **/
  @Schema(description = "choose the JWS alg algorithm (JWA) required for the ID Token issued to this client_id. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getIdTokenSignedResponseAlg() {
    return idTokenSignedResponseAlg;
  }

  public void setIdTokenSignedResponseAlg(String idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
  }

  public UpdateSiteParams idTokenEncryptedResponseAlg(String idTokenEncryptedResponseAlg) {
    this.idTokenEncryptedResponseAlg = idTokenEncryptedResponseAlg;
    return this;
  }

   /**
   * choose the JWE alg algorithm (JWA) required for encrypting the ID Token issued to this client_id. Valid values are RSA1_5, RSA-OAEP, A128KW, A256KW
   * @return idTokenEncryptedResponseAlg
  **/
  @Schema(description = "choose the JWE alg algorithm (JWA) required for encrypting the ID Token issued to this client_id. Valid values are RSA1_5, RSA-OAEP, A128KW, A256KW")
  public String getIdTokenEncryptedResponseAlg() {
    return idTokenEncryptedResponseAlg;
  }

  public void setIdTokenEncryptedResponseAlg(String idTokenEncryptedResponseAlg) {
    this.idTokenEncryptedResponseAlg = idTokenEncryptedResponseAlg;
  }

  public UpdateSiteParams idTokenEncryptedResponseEnc(String idTokenEncryptedResponseEnc) {
    this.idTokenEncryptedResponseEnc = idTokenEncryptedResponseEnc;
    return this;
  }

   /**
   * choose the JWE enc algorithm (JWA) required for symmetric encryption of the ID Token issued to this client_id. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return idTokenEncryptedResponseEnc
  **/
  @Schema(description = "choose the JWE enc algorithm (JWA) required for symmetric encryption of the ID Token issued to this client_id. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getIdTokenEncryptedResponseEnc() {
    return idTokenEncryptedResponseEnc;
  }

  public void setIdTokenEncryptedResponseEnc(String idTokenEncryptedResponseEnc) {
    this.idTokenEncryptedResponseEnc = idTokenEncryptedResponseEnc;
  }

  public UpdateSiteParams userInfoSignedResponseAlg(String userInfoSignedResponseAlg) {
    this.userInfoSignedResponseAlg = userInfoSignedResponseAlg;
    return this;
  }

   /**
   * choose the JWS alg algorithm (JWA) required for UserInfo responses. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return userInfoSignedResponseAlg
  **/
  @Schema(description = "choose the JWS alg algorithm (JWA) required for UserInfo responses. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getUserInfoSignedResponseAlg() {
    return userInfoSignedResponseAlg;
  }

  public void setUserInfoSignedResponseAlg(String userInfoSignedResponseAlg) {
    this.userInfoSignedResponseAlg = userInfoSignedResponseAlg;
  }

  public UpdateSiteParams userInfoEncryptedResponseAlg(String userInfoEncryptedResponseAlg) {
    this.userInfoEncryptedResponseAlg = userInfoEncryptedResponseAlg;
    return this;
  }

   /**
   * choose the JWE alg algorithm (JWA) required for encrypting UserInfo responses. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW
   * @return userInfoEncryptedResponseAlg
  **/
  @Schema(description = "choose the JWE alg algorithm (JWA) required for encrypting UserInfo responses. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW")
  public String getUserInfoEncryptedResponseAlg() {
    return userInfoEncryptedResponseAlg;
  }

  public void setUserInfoEncryptedResponseAlg(String userInfoEncryptedResponseAlg) {
    this.userInfoEncryptedResponseAlg = userInfoEncryptedResponseAlg;
  }

  public UpdateSiteParams userInfoEncryptedResponseEnc(String userInfoEncryptedResponseEnc) {
    this.userInfoEncryptedResponseEnc = userInfoEncryptedResponseEnc;
    return this;
  }

   /**
   * choose the JWE enc algorithm (JWA) required for symmetric encryption of UserInfo responses. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return userInfoEncryptedResponseEnc
  **/
  @Schema(description = "choose the JWE enc algorithm (JWA) required for symmetric encryption of UserInfo responses. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getUserInfoEncryptedResponseEnc() {
    return userInfoEncryptedResponseEnc;
  }

  public void setUserInfoEncryptedResponseEnc(String userInfoEncryptedResponseEnc) {
    this.userInfoEncryptedResponseEnc = userInfoEncryptedResponseEnc;
  }

  public UpdateSiteParams requestObjectSigningAlg(String requestObjectSigningAlg) {
    this.requestObjectSigningAlg = requestObjectSigningAlg;
    return this;
  }

   /**
   * choose the JWS alg algorithm (JWA) that must be required by the Authorization Server. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return requestObjectSigningAlg
  **/
  @Schema(description = "choose the JWS alg algorithm (JWA) that must be required by the Authorization Server. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getRequestObjectSigningAlg() {
    return requestObjectSigningAlg;
  }

  public void setRequestObjectSigningAlg(String requestObjectSigningAlg) {
    this.requestObjectSigningAlg = requestObjectSigningAlg;
  }

  public UpdateSiteParams requestObjectEncryptionAlg(String requestObjectEncryptionAlg) {
    this.requestObjectEncryptionAlg = requestObjectEncryptionAlg;
    return this;
  }

   /**
   * choose the JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW
   * @return requestObjectEncryptionAlg
  **/
  @Schema(description = "choose the JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW")
  public String getRequestObjectEncryptionAlg() {
    return requestObjectEncryptionAlg;
  }

  public void setRequestObjectEncryptionAlg(String requestObjectEncryptionAlg) {
    this.requestObjectEncryptionAlg = requestObjectEncryptionAlg;
  }

  public UpdateSiteParams requestObjectEncryptionEnc(String requestObjectEncryptionEnc) {
    this.requestObjectEncryptionEnc = requestObjectEncryptionEnc;
    return this;
  }

   /**
   * choose the JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return requestObjectEncryptionEnc
  **/
  @Schema(description = "choose the JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getRequestObjectEncryptionEnc() {
    return requestObjectEncryptionEnc;
  }

  public void setRequestObjectEncryptionEnc(String requestObjectEncryptionEnc) {
    this.requestObjectEncryptionEnc = requestObjectEncryptionEnc;
  }

  public UpdateSiteParams defaultMaxAge(Integer defaultMaxAge) {
    this.defaultMaxAge = defaultMaxAge;
    return this;
  }

   /**
   * specifies the Default Maximum Authentication Age.
   * @return defaultMaxAge
  **/
  @Schema(example = "1000000", description = "specifies the Default Maximum Authentication Age.")
  public Integer getDefaultMaxAge() {
    return defaultMaxAge;
  }

  public void setDefaultMaxAge(Integer defaultMaxAge) {
    this.defaultMaxAge = defaultMaxAge;
  }

  public UpdateSiteParams requireAuthTime(Boolean requireAuthTime) {
    this.requireAuthTime = requireAuthTime;
    return this;
  }

   /**
   * specifies the Boolean value specifying whether the auth_time claim in the id_token is required. It is required when the value is true. The auth_time claim request in the request object overrides this setting.
   * @return requireAuthTime
  **/
  @Schema(example = "true", description = "specifies the Boolean value specifying whether the auth_time claim in the id_token is required. It is required when the value is true. The auth_time claim request in the request object overrides this setting.")
  public Boolean isRequireAuthTime() {
    return requireAuthTime;
  }

  public void setRequireAuthTime(Boolean requireAuthTime) {
    this.requireAuthTime = requireAuthTime;
  }

  public UpdateSiteParams initiateLoginUri(String initiateLoginUri) {
    this.initiateLoginUri = initiateLoginUri;
    return this;
  }

   /**
   * specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
   * @return initiateLoginUri
  **/
  @Schema(example = "https://client.example.org/authorization/page", description = "specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.")
  public String getInitiateLoginUri() {
    return initiateLoginUri;
  }

  public void setInitiateLoginUri(String initiateLoginUri) {
    this.initiateLoginUri = initiateLoginUri;
  }

  public UpdateSiteParams authorizedOrigins(List<String> authorizedOrigins) {
    this.authorizedOrigins = authorizedOrigins;
    return this;
  }

  public UpdateSiteParams addAuthorizedOriginsItem(String authorizedOriginsItem) {
    if (this.authorizedOrigins == null) {
      this.authorizedOrigins = new ArrayList<String>();
    }
    this.authorizedOrigins.add(authorizedOriginsItem);
    return this;
  }

   /**
   * specifies authorized JavaScript origins.
   * @return authorizedOrigins
  **/
  @Schema(description = "specifies authorized JavaScript origins.")
  public List<String> getAuthorizedOrigins() {
    return authorizedOrigins;
  }

  public void setAuthorizedOrigins(List<String> authorizedOrigins) {
    this.authorizedOrigins = authorizedOrigins;
  }

  public UpdateSiteParams accessTokenLifetime(Integer accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
    return this;
  }

   /**
   * specifies the Client-specific access token expiration.
   * @return accessTokenLifetime
  **/
  @Schema(example = "100000000", description = "specifies the Client-specific access token expiration.")
  public Integer getAccessTokenLifetime() {
    return accessTokenLifetime;
  }

  public void setAccessTokenLifetime(Integer accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
  }

  public UpdateSiteParams softwareId(String softwareId) {
    this.softwareId = softwareId;
    return this;
  }

   /**
   * specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
   * @return softwareId
  **/
  @Schema(example = "4NRB1-0XZABZI9E6-5SM3R", description = "specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.")
  public String getSoftwareId() {
    return softwareId;
  }

  public void setSoftwareId(String softwareId) {
    this.softwareId = softwareId;
  }

  public UpdateSiteParams softwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

   /**
   * specifies a version identifier string for the client software identified by &#x27;software_id&#x27;. The value of the &#x27;software_version&#x27; should change on any update to the client software identified by the same &#x27;software_id&#x27;.
   * @return softwareVersion
  **/
  @Schema(example = "2.1", description = "specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.")
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }

  public UpdateSiteParams softwareStatement(String softwareStatement) {
    this.softwareStatement = softwareStatement;
    return this;
  }

   /**
   * specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
   * @return softwareStatement
  **/
  @Schema(description = "specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.")
  public String getSoftwareStatement() {
    return softwareStatement;
  }

  public void setSoftwareStatement(String softwareStatement) {
    this.softwareStatement = softwareStatement;
  }

  public UpdateSiteParams customAttributes(Map<String, String> customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  public UpdateSiteParams putCustomAttributesItem(String key, String customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new HashMap<String, String>();
    }
    this.customAttributes.put(key, customAttributesItem);
    return this;
  }

   /**
   * specifies custom attribute map copy.
   * @return customAttributes
  **/
  @Schema(description = "specifies custom attribute map copy.")
  public Map<String, String> getCustomAttributes() {
    return customAttributes;
  }

  public void setCustomAttributes(Map<String, String> customAttributes) {
    this.customAttributes = customAttributes;
  }

  public UpdateSiteParams syncClientFromOp(Boolean syncClientFromOp) {
    this.syncClientFromOp = syncClientFromOp;
    return this;
  }

   /**
   * specifies whether to sync client from OP. Default value is false.
   * @return syncClientFromOp
  **/
  @Schema(example = "false", description = "specifies whether to sync client from OP. Default value is false.")
  public Boolean isSyncClientFromOp() {
    return syncClientFromOp;
  }

  public void setSyncClientFromOp(Boolean syncClientFromOp) {
    this.syncClientFromOp = syncClientFromOp;
  }

  public UpdateSiteParams syncClientPeriodInSeconds(Integer syncClientPeriodInSeconds) {
    this.syncClientPeriodInSeconds = syncClientPeriodInSeconds;
    return this;
  }

   /**
   * specifies period after which client can sync again with OP. Default value is 86400 (in seconds).
   * @return syncClientPeriodInSeconds
  **/
  @Schema(example = "86400", description = "specifies period after which client can sync again with OP. Default value is 86400 (in seconds).")
  public Integer getSyncClientPeriodInSeconds() {
    return syncClientPeriodInSeconds;
  }

  public void setSyncClientPeriodInSeconds(Integer syncClientPeriodInSeconds) {
    this.syncClientPeriodInSeconds = syncClientPeriodInSeconds;
  }

  public UpdateSiteParams allowSpontaneousScopes(Boolean allowSpontaneousScopes) {
    this.allowSpontaneousScopes = allowSpontaneousScopes;
    return this;
  }

   /**
   * specifies whether to allow spontaneous scopes for client. The default value is false
   * @return allowSpontaneousScopes
  **/
  @Schema(example = "false", description = "specifies whether to allow spontaneous scopes for client. The default value is false")
  public Boolean isAllowSpontaneousScopes() {
    return allowSpontaneousScopes;
  }

  public void setAllowSpontaneousScopes(Boolean allowSpontaneousScopes) {
    this.allowSpontaneousScopes = allowSpontaneousScopes;
  }

  public UpdateSiteParams spontaneousScopes(List<String> spontaneousScopes) {
    this.spontaneousScopes = spontaneousScopes;
    return this;
  }

  public UpdateSiteParams addSpontaneousScopesItem(String spontaneousScopesItem) {
    if (this.spontaneousScopes == null) {
      this.spontaneousScopes = new ArrayList<String>();
    }
    this.spontaneousScopes.add(spontaneousScopesItem);
    return this;
  }

   /**
   * list of spontaneous scopes (regexp against which validation is performed).
   * @return spontaneousScopes
  **/
  @Schema(description = "list of spontaneous scopes (regexp against which validation is performed).")
  public List<String> getSpontaneousScopes() {
    return spontaneousScopes;
  }

  public void setSpontaneousScopes(List<String> spontaneousScopes) {
    this.spontaneousScopes = spontaneousScopes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSiteParams updateSiteParams = (UpdateSiteParams) o;
    return Objects.equals(this.rpId, updateSiteParams.rpId) &&
        Objects.equals(this.redirectUris, updateSiteParams.redirectUris) &&
        Objects.equals(this.postLogoutRedirectUris, updateSiteParams.postLogoutRedirectUris) &&
        Objects.equals(this.responseTypes, updateSiteParams.responseTypes) &&
        Objects.equals(this.grantTypes, updateSiteParams.grantTypes) &&
        Objects.equals(this.scope, updateSiteParams.scope) &&
        Objects.equals(this.acrValues, updateSiteParams.acrValues) &&
        Objects.equals(this.clientJwksUri, updateSiteParams.clientJwksUri) &&
        Objects.equals(this.clientTokenEndpointAuthMethod, updateSiteParams.clientTokenEndpointAuthMethod) &&
        Objects.equals(this.clientRequestUris, updateSiteParams.clientRequestUris) &&
        Objects.equals(this.clientSectorIdentifierUri, updateSiteParams.clientSectorIdentifierUri) &&
        Objects.equals(this.contacts, updateSiteParams.contacts) &&
        Objects.equals(this.uiLocales, updateSiteParams.uiLocales) &&
        Objects.equals(this.claimsLocales, updateSiteParams.claimsLocales) &&
        Objects.equals(this.accessTokenAsJwt, updateSiteParams.accessTokenAsJwt) &&
        Objects.equals(this.accessTokenSigningAlg, updateSiteParams.accessTokenSigningAlg) &&
        Objects.equals(this.rptAsJwt, updateSiteParams.rptAsJwt) &&
        Objects.equals(this.claimsRedirectUri, updateSiteParams.claimsRedirectUri) &&
        Objects.equals(this.clientTokenEndpointAuthSigningAlg, updateSiteParams.clientTokenEndpointAuthSigningAlg) &&
        Objects.equals(this.clientName, updateSiteParams.clientName) &&
        Objects.equals(this.logoUri, updateSiteParams.logoUri) &&
        Objects.equals(this.clientUri, updateSiteParams.clientUri) &&
        Objects.equals(this.policyUri, updateSiteParams.policyUri) &&
        Objects.equals(this.frontChannelLogoutSessionRequired, updateSiteParams.frontChannelLogoutSessionRequired) &&
        Objects.equals(this.tosUri, updateSiteParams.tosUri) &&
        Objects.equals(this.jwks, updateSiteParams.jwks) &&
        Objects.equals(this.idTokenBindingCnf, updateSiteParams.idTokenBindingCnf) &&
        Objects.equals(this.tlsClientAuthSubjectDn, updateSiteParams.tlsClientAuthSubjectDn) &&
        Objects.equals(this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims, updateSiteParams.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) &&
        Objects.equals(this.idTokenSignedResponseAlg, updateSiteParams.idTokenSignedResponseAlg) &&
        Objects.equals(this.idTokenEncryptedResponseAlg, updateSiteParams.idTokenEncryptedResponseAlg) &&
        Objects.equals(this.idTokenEncryptedResponseEnc, updateSiteParams.idTokenEncryptedResponseEnc) &&
        Objects.equals(this.userInfoSignedResponseAlg, updateSiteParams.userInfoSignedResponseAlg) &&
        Objects.equals(this.userInfoEncryptedResponseAlg, updateSiteParams.userInfoEncryptedResponseAlg) &&
        Objects.equals(this.userInfoEncryptedResponseEnc, updateSiteParams.userInfoEncryptedResponseEnc) &&
        Objects.equals(this.requestObjectSigningAlg, updateSiteParams.requestObjectSigningAlg) &&
        Objects.equals(this.requestObjectEncryptionAlg, updateSiteParams.requestObjectEncryptionAlg) &&
        Objects.equals(this.requestObjectEncryptionEnc, updateSiteParams.requestObjectEncryptionEnc) &&
        Objects.equals(this.defaultMaxAge, updateSiteParams.defaultMaxAge) &&
        Objects.equals(this.requireAuthTime, updateSiteParams.requireAuthTime) &&
        Objects.equals(this.initiateLoginUri, updateSiteParams.initiateLoginUri) &&
        Objects.equals(this.authorizedOrigins, updateSiteParams.authorizedOrigins) &&
        Objects.equals(this.accessTokenLifetime, updateSiteParams.accessTokenLifetime) &&
        Objects.equals(this.softwareId, updateSiteParams.softwareId) &&
        Objects.equals(this.softwareVersion, updateSiteParams.softwareVersion) &&
        Objects.equals(this.softwareStatement, updateSiteParams.softwareStatement) &&
        Objects.equals(this.customAttributes, updateSiteParams.customAttributes) &&
        Objects.equals(this.syncClientFromOp, updateSiteParams.syncClientFromOp) &&
        Objects.equals(this.syncClientPeriodInSeconds, updateSiteParams.syncClientPeriodInSeconds) &&
        Objects.equals(this.allowSpontaneousScopes, updateSiteParams.allowSpontaneousScopes) &&
        Objects.equals(this.spontaneousScopes, updateSiteParams.spontaneousScopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rpId, redirectUris, postLogoutRedirectUris, responseTypes, grantTypes, scope, acrValues, clientJwksUri, clientTokenEndpointAuthMethod, clientRequestUris, clientSectorIdentifierUri, contacts, uiLocales, claimsLocales, accessTokenAsJwt, accessTokenSigningAlg, rptAsJwt, claimsRedirectUri, clientTokenEndpointAuthSigningAlg, clientName, logoUri, clientUri, policyUri, frontChannelLogoutSessionRequired, tosUri, jwks, idTokenBindingCnf, tlsClientAuthSubjectDn, runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims, idTokenSignedResponseAlg, idTokenEncryptedResponseAlg, idTokenEncryptedResponseEnc, userInfoSignedResponseAlg, userInfoEncryptedResponseAlg, userInfoEncryptedResponseEnc, requestObjectSigningAlg, requestObjectEncryptionAlg, requestObjectEncryptionEnc, defaultMaxAge, requireAuthTime, initiateLoginUri, authorizedOrigins, accessTokenLifetime, softwareId, softwareVersion, softwareStatement, customAttributes, syncClientFromOp, syncClientPeriodInSeconds, allowSpontaneousScopes, spontaneousScopes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSiteParams {\n");
    
    sb.append("    rpId: ").append(toIndentedString(rpId)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    postLogoutRedirectUris: ").append(toIndentedString(postLogoutRedirectUris)).append("\n");
    sb.append("    responseTypes: ").append(toIndentedString(responseTypes)).append("\n");
    sb.append("    grantTypes: ").append(toIndentedString(grantTypes)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    acrValues: ").append(toIndentedString(acrValues)).append("\n");
    sb.append("    clientJwksUri: ").append(toIndentedString(clientJwksUri)).append("\n");
    sb.append("    clientTokenEndpointAuthMethod: ").append(toIndentedString(clientTokenEndpointAuthMethod)).append("\n");
    sb.append("    clientRequestUris: ").append(toIndentedString(clientRequestUris)).append("\n");
    sb.append("    clientSectorIdentifierUri: ").append(toIndentedString(clientSectorIdentifierUri)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    uiLocales: ").append(toIndentedString(uiLocales)).append("\n");
    sb.append("    claimsLocales: ").append(toIndentedString(claimsLocales)).append("\n");
    sb.append("    accessTokenAsJwt: ").append(toIndentedString(accessTokenAsJwt)).append("\n");
    sb.append("    accessTokenSigningAlg: ").append(toIndentedString(accessTokenSigningAlg)).append("\n");
    sb.append("    rptAsJwt: ").append(toIndentedString(rptAsJwt)).append("\n");
    sb.append("    claimsRedirectUri: ").append(toIndentedString(claimsRedirectUri)).append("\n");
    sb.append("    clientTokenEndpointAuthSigningAlg: ").append(toIndentedString(clientTokenEndpointAuthSigningAlg)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    logoUri: ").append(toIndentedString(logoUri)).append("\n");
    sb.append("    clientUri: ").append(toIndentedString(clientUri)).append("\n");
    sb.append("    policyUri: ").append(toIndentedString(policyUri)).append("\n");
    sb.append("    frontChannelLogoutSessionRequired: ").append(toIndentedString(frontChannelLogoutSessionRequired)).append("\n");
    sb.append("    tosUri: ").append(toIndentedString(tosUri)).append("\n");
    sb.append("    jwks: ").append(toIndentedString(jwks)).append("\n");
    sb.append("    idTokenBindingCnf: ").append(toIndentedString(idTokenBindingCnf)).append("\n");
    sb.append("    tlsClientAuthSubjectDn: ").append(toIndentedString(tlsClientAuthSubjectDn)).append("\n");
    sb.append("    runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims: ").append(toIndentedString(runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims)).append("\n");
    sb.append("    idTokenSignedResponseAlg: ").append(toIndentedString(idTokenSignedResponseAlg)).append("\n");
    sb.append("    idTokenEncryptedResponseAlg: ").append(toIndentedString(idTokenEncryptedResponseAlg)).append("\n");
    sb.append("    idTokenEncryptedResponseEnc: ").append(toIndentedString(idTokenEncryptedResponseEnc)).append("\n");
    sb.append("    userInfoSignedResponseAlg: ").append(toIndentedString(userInfoSignedResponseAlg)).append("\n");
    sb.append("    userInfoEncryptedResponseAlg: ").append(toIndentedString(userInfoEncryptedResponseAlg)).append("\n");
    sb.append("    userInfoEncryptedResponseEnc: ").append(toIndentedString(userInfoEncryptedResponseEnc)).append("\n");
    sb.append("    requestObjectSigningAlg: ").append(toIndentedString(requestObjectSigningAlg)).append("\n");
    sb.append("    requestObjectEncryptionAlg: ").append(toIndentedString(requestObjectEncryptionAlg)).append("\n");
    sb.append("    requestObjectEncryptionEnc: ").append(toIndentedString(requestObjectEncryptionEnc)).append("\n");
    sb.append("    defaultMaxAge: ").append(toIndentedString(defaultMaxAge)).append("\n");
    sb.append("    requireAuthTime: ").append(toIndentedString(requireAuthTime)).append("\n");
    sb.append("    initiateLoginUri: ").append(toIndentedString(initiateLoginUri)).append("\n");
    sb.append("    authorizedOrigins: ").append(toIndentedString(authorizedOrigins)).append("\n");
    sb.append("    accessTokenLifetime: ").append(toIndentedString(accessTokenLifetime)).append("\n");
    sb.append("    softwareId: ").append(toIndentedString(softwareId)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    softwareStatement: ").append(toIndentedString(softwareStatement)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    syncClientFromOp: ").append(toIndentedString(syncClientFromOp)).append("\n");
    sb.append("    syncClientPeriodInSeconds: ").append(toIndentedString(syncClientPeriodInSeconds)).append("\n");
    sb.append("    allowSpontaneousScopes: ").append(toIndentedString(allowSpontaneousScopes)).append("\n");
    sb.append("    spontaneousScopes: ").append(toIndentedString(spontaneousScopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
