{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Janssen Project Documentation # User Installation Guides How To implement use-cases Implementing Authentication with Apache reverse proxy Developer Community Charter Contributing Code of Conduct Triage Process Testing Copyright Notice Code Technical","title":"Janssen Project Documentation"},{"location":"#janssen-project-documentation","text":"User Installation Guides How To implement use-cases Implementing Authentication with Apache reverse proxy Developer Community Charter Contributing Code of Conduct Triage Process Testing Copyright Notice Code Technical","title":"Janssen Project Documentation"},{"location":"CHANGELOG/","text":"Changelog # 1.0.0 (2022-05-20) # Features # add script for Google login ( #1141 ) ( bac9144 ) jans-core: remove UPDATE_USER and USER_REGISTRATION scripts #1289 ( c34e75d ) Bug Fixes # add issue guidelines to TOC ( #1188 ) ( 192165b ) broken links ( 86d0232 ) hyperlinks ( #1209 ) ( d1e1ed6 ) typo in jans-cli interactive mode ( 25f5971 ) Miscellaneous Chores # release 1.0.0 ( b2895f2 ) release 1.0.0-beta.16 ( a083ad6 ) release 1.0.0-beta.16 ( 90e4bb2 ) release 1.0.0-beta.16 ( eec2073 ) release 1.0.0-beta.16 ( cd92ead ) release 1.0.0-beta.16 ( 7f0a91b ) release 1.0.0-beta.16 ( c2ad604 ) release 1.0.0-beta.16 ( a641486 ) release 1.0.0-beta.16 ( 94d5791 ) release 1.0.0-beta.16 ( 16de429 ) release 1.0.0-beta.16 ( 72915c0 ) release 1.0.0-beta.16 ( 3ea2b37 ) release 1.0.0-beta.16 ( 78a6d39 ) release 1.0.0-beta.16 ( 11bfa93 ) release 1.0.0-beta.16 ( 22b180b ) release 1.0.0-beta.16 ( b9acd0b ) release 1.0.0-beta.16 ( 328cd30 ) release 1.0.0-beta.16 ( 5a84602 ) release 1.0.0-beta.16 ( 4923277 ) release 1.0.0-beta.16 ( 258ba96 ) release 1.0.0-beta.16 ( 77c4423 ) 1.0.0-beta.16 (2022-03-14) # Features # add support to import custom ldif ( #1002 ) ( 0b6334a ) Miscellaneous Chores # release 1.0.0-beta.16 ( a083ad6 ) release 1.0.0-beta.16 ( 90e4bb2 ) release 1.0.0-beta.16 ( eec2073 ) release 1.0.0-beta.16 ( cd92ead ) release 1.0.0-beta.16 ( 7f0a91b ) release 1.0.0-beta.16 ( c2ad604 ) release 1.0.0-beta.16 ( a641486 ) release 1.0.0-beta.16 ( 94d5791 ) release 1.0.0-beta.16 ( 16de429 ) release 1.0.0-beta.16 ( 72915c0 ) release 1.0.0-beta.16 ( 3ea2b37 ) release 1.0.0-beta.16 ( 78a6d39 ) release 1.0.0-beta.16 ( 11bfa93 ) release 1.0.0-beta.16 ( 22b180b ) release 1.0.0-beta.16 ( b9acd0b ) release 1.0.0-beta.16 ( 328cd30 ) release 1.0.0-beta.16 ( 5a84602 ) release 1.0.0-beta.16 ( 4923277 ) release 1.0.0-beta.16 ( 258ba96 ) release 1.0.0-beta.16 ( 77c4423 ) release 1.0.0-beta.16 ( 688b324 ) release 1.0.0-beta.16 ( 4e86f15 ) release 1.0.0-beta.16 ( 8d514ee ) release 1.0.0-beta.16 ( 0899898 ) 1.0.0-beta.15 (2022-03-02) # Features # add POST /rolePermissionsMapping for adding new rolePermissionsMapping entry #144 ( 7bcad3b ) add POST /rolePermissionsMapping for adding new rolePermissionsMapping entry #144 ( 932a45b ) protecting Admin-UI Plugin Apis #142 ( 52e8846 ) protecting Admin-UI Plugin Apis #142 ( a1a0d54 ) Miscellaneous Chores # release 1.0.0-beta.15 ( ee5b719 ) release 1.0.0-beta.15 ( ca6d1c9 ) release 1.0.0-beta.15 ( b65bab2 )","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"CHANGELOG/#100-2022-05-20","text":"","title":"1.0.0 (2022-05-20)"},{"location":"CHANGELOG/#features","text":"add script for Google login ( #1141 ) ( bac9144 ) jans-core: remove UPDATE_USER and USER_REGISTRATION scripts #1289 ( c34e75d )","title":"Features"},{"location":"CHANGELOG/#bug-fixes","text":"add issue guidelines to TOC ( #1188 ) ( 192165b ) broken links ( 86d0232 ) hyperlinks ( #1209 ) ( d1e1ed6 ) typo in jans-cli interactive mode ( 25f5971 )","title":"Bug Fixes"},{"location":"CHANGELOG/#miscellaneous-chores","text":"release 1.0.0 ( b2895f2 ) release 1.0.0-beta.16 ( a083ad6 ) release 1.0.0-beta.16 ( 90e4bb2 ) release 1.0.0-beta.16 ( eec2073 ) release 1.0.0-beta.16 ( cd92ead ) release 1.0.0-beta.16 ( 7f0a91b ) release 1.0.0-beta.16 ( c2ad604 ) release 1.0.0-beta.16 ( a641486 ) release 1.0.0-beta.16 ( 94d5791 ) release 1.0.0-beta.16 ( 16de429 ) release 1.0.0-beta.16 ( 72915c0 ) release 1.0.0-beta.16 ( 3ea2b37 ) release 1.0.0-beta.16 ( 78a6d39 ) release 1.0.0-beta.16 ( 11bfa93 ) release 1.0.0-beta.16 ( 22b180b ) release 1.0.0-beta.16 ( b9acd0b ) release 1.0.0-beta.16 ( 328cd30 ) release 1.0.0-beta.16 ( 5a84602 ) release 1.0.0-beta.16 ( 4923277 ) release 1.0.0-beta.16 ( 258ba96 ) release 1.0.0-beta.16 ( 77c4423 )","title":"Miscellaneous Chores"},{"location":"CHANGELOG/#100-beta16-2022-03-14","text":"","title":"1.0.0-beta.16 (2022-03-14)"},{"location":"CHANGELOG/#features_1","text":"add support to import custom ldif ( #1002 ) ( 0b6334a )","title":"Features"},{"location":"CHANGELOG/#miscellaneous-chores_1","text":"release 1.0.0-beta.16 ( a083ad6 ) release 1.0.0-beta.16 ( 90e4bb2 ) release 1.0.0-beta.16 ( eec2073 ) release 1.0.0-beta.16 ( cd92ead ) release 1.0.0-beta.16 ( 7f0a91b ) release 1.0.0-beta.16 ( c2ad604 ) release 1.0.0-beta.16 ( a641486 ) release 1.0.0-beta.16 ( 94d5791 ) release 1.0.0-beta.16 ( 16de429 ) release 1.0.0-beta.16 ( 72915c0 ) release 1.0.0-beta.16 ( 3ea2b37 ) release 1.0.0-beta.16 ( 78a6d39 ) release 1.0.0-beta.16 ( 11bfa93 ) release 1.0.0-beta.16 ( 22b180b ) release 1.0.0-beta.16 ( b9acd0b ) release 1.0.0-beta.16 ( 328cd30 ) release 1.0.0-beta.16 ( 5a84602 ) release 1.0.0-beta.16 ( 4923277 ) release 1.0.0-beta.16 ( 258ba96 ) release 1.0.0-beta.16 ( 77c4423 ) release 1.0.0-beta.16 ( 688b324 ) release 1.0.0-beta.16 ( 4e86f15 ) release 1.0.0-beta.16 ( 8d514ee ) release 1.0.0-beta.16 ( 0899898 )","title":"Miscellaneous Chores"},{"location":"CHANGELOG/#100-beta15-2022-03-02","text":"","title":"1.0.0-beta.15 (2022-03-02)"},{"location":"CHANGELOG/#features_2","text":"add POST /rolePermissionsMapping for adding new rolePermissionsMapping entry #144 ( 7bcad3b ) add POST /rolePermissionsMapping for adding new rolePermissionsMapping entry #144 ( 932a45b ) protecting Admin-UI Plugin Apis #142 ( 52e8846 ) protecting Admin-UI Plugin Apis #142 ( a1a0d54 )","title":"Features"},{"location":"CHANGELOG/#miscellaneous-chores_2","text":"release 1.0.0-beta.15 ( ee5b719 ) release 1.0.0-beta.15 ( ca6d1c9 ) release 1.0.0-beta.15 ( b65bab2 )","title":"Miscellaneous Chores"},{"location":"CODE_OF_CONDUCT/","text":"Janssen Code of Conduct v1.0 # Our Pledge # In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards # Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others\u2019 private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities # Janssen Project members, project participants and contributors (collectively, \"participants\") are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. The Technical Steering Committee (\"TSC\") of the Janssen Project has the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any participant for other behaviors that they deem inappropriate, threatening, offensive, or harmful. All participants have determined that The Linux Foundation is the most optimal organization to shepherd the development of this project. Participants acknowledge and agree to The Linux Foundation's exclusive right to use \"Janssen Project\" and any other names and trademarks associated with the open source project and Janssen Project and to authorize others\u2019 use of the marks, establish guidelines for such use, and to delegate these responsibilities. Participants agree not to take any action inconsistent with such rights and to cooperate in any action which The Linux Foundation deems necessary or desirable to prevent confusion or establish or preserve these rights. Participants will not independently adopt, use, or attempt to register any trademarks or trade names that are confusingly similar to these names. Scope # This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement # Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the Executive Director, or, if the complaint involves the Executive Director, a member of the steering committee. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Participants who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by the steering committee. Attribution # This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html . For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of Conduct"},{"location":"CODE_OF_CONDUCT/#janssen-code-of-conduct-v10","text":"","title":"Janssen Code of Conduct v1.0"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others\u2019 private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Janssen Project members, project participants and contributors (collectively, \"participants\") are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. The Technical Steering Committee (\"TSC\") of the Janssen Project has the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any participant for other behaviors that they deem inappropriate, threatening, offensive, or harmful. All participants have determined that The Linux Foundation is the most optimal organization to shepherd the development of this project. Participants acknowledge and agree to The Linux Foundation's exclusive right to use \"Janssen Project\" and any other names and trademarks associated with the open source project and Janssen Project and to authorize others\u2019 use of the marks, establish guidelines for such use, and to delegate these responsibilities. Participants agree not to take any action inconsistent with such rights and to cooperate in any action which The Linux Foundation deems necessary or desirable to prevent confusion or establish or preserve these rights. Participants will not independently adopt, use, or attempt to register any trademarks or trade names that are confusingly similar to these names.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the Executive Director, or, if the complaint involves the Executive Director, a member of the steering committee. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Participants who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by the steering committee.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html . For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"CONTRIBUTING/","text":"Contributing to Janssen Project # Purpose of this guide is to provide necessary information and resources to community in order to make successful contribution to the Janssen Project. There are many ways you can contribute. Of course you can contribute code. But we also need people to write documentation and guides, to help us with testing, to answer questions on the forums and chat, to review PR's, to help us with devops and CI/CD, to provide feedback on usability, and to promote the project through outreach. Also, by sharing metrics with us, we can gain valuable insights into how the software performs in the wild. Join the Community First Time Contributors Contribution Guidelines Code of Conduct About Issues Triaging Code Conventions and Guidelines Commits Branches PRs Issues Contribution Workflow Find Something To Work On Start a Discussion Implement the Change Document Raise a PR Follow Through Join the Community # Repo : Watch and Star Janssen repository on Github Discussions : Join interesting discussions at Github Discussions Chat : We have an active community chat on Gitter . You can register for free their with your Github identity. Tweet : Janssen is on Twitter too. Follow us there to stay up to date on release announcements and news around Janssen. First Time Contributors # In case you are first-time contributor, then you can start with our good first issues list These are issues where you can easily contribute and community members will guide and support your contribution as always. If you need Janssen installation to test out your fix, here are the steps . Contribution Guidelines # We are really glad you are reading this, because we need volunteer developers to help this project come to fruition. Code of Conduct Issues Triaging Coding Conventions Code of Conduct # Janssen project has a Code of Conduct to which all contributors must adhere, please read it before interacting with the repository or the community in any way. About Issues # There are four kinds of issues you can open: Bug report : you believe you found a problem in a project and you want to discuss and get it fixed, creating an issue with the bug report template is the best way to do so. Feature Request : any kind of new feature need to be discussed in this kind of issue, do you want a new rule or a new feature? This is the kind of issue you want to open. Be very good at explaining your intent, it's always important that others can understand what you mean in order to discuss, be open and collaborative in letting others help you getting this done! Security Vulnerability : If you identify a security problem, please report it immediately, providing details about the nature, and if applicable, how to reproduce it. If you want to report an issue privately, you can email security@gluu.org Failing tests : you noticed a flaky test or a problem with a build? This is the kind of issue to triage that! The best way to get involved in the project is through issues, you can help in many ways: Issues triaging: participating in the discussion and adding details to open issues is always a good thing, sometimes issues need to be verified, you could be the one writing a test case to fix a bug! Fix an issue: you can help in getting issue fixed in many ways. More often by opening a pull request. In case you are first-time contributor, then you can start with our good first issues list These are issues where you can easily contribute and community members will guide and support your contribution as always. Triaging # Triage is a process of evaluating issues and PRs in order to determine their characteristics and take quick actions if possible. When you triage an issue, you: assess whether it has merit or not quickly close it by correctly answering a question point the reporter to a resource or documentation answering the issue tag it via labels, projects, or milestones take ownership submitting a PR for it, in case you want \ud83d\ude07 Here is how we continously triage new issues and PRs so that contributors can contribute faster and better. Code Conventions and Guidelines # Commits # Janssen Project mandates all commits to follow guidelines as below. Commit messages As commit convention, we adopt Conventional Commits v1.0.0 , we have an history of commits that do not adopt the convention but any new commit must follow it to be eligible for merge. Add GPG signature to your commit To ensure that contribution is coming for a trusted source, all commits should be signed using GPG key and verified by Github. If you have GPG key setup already then just use -S switch with you commit to sign it. If you need to setup your GPG key and verification, then you can find detailed instructions here Add DCO sign-off The Developer Certificate of Origin (DCO) is a lightweight way for contributors to certify that they wrote or otherwise have the right to submit the code they are contributing to the project. Contributors to the Janssen project sign-off that they adhere to these requirements by adding a Signed-off-by line to commit messages. This is a commit message Signed-off-by: Foo Bar <foobar@spam.org> Git even has a -s command line option to append this automatically to your commit message: $ git commit -s -m 'This is my commit message' In all, if you have your GPG verification setup, your commit command should look like git commit -S -s -m 'message that follows conventional commit style' Branches # Branch name should have component name as prefix, eg jans-core-mybranch PRs # PR titles should also follow Conventional Commits v1.0.0 . This will help in keeping merge commit messages inline with commit message standards Squash commits into small number of cohesive commits before raising a PR PR should be rebased on main branch so that there are minimal or no conflicts at the time of merge PR should only have changes related to target feature or issue. Create a separate PR for formatting or other quick bug fixes PR should include relevent documentaton changes PR should include unit and integration tests Issues # Issue titles should follow Conventional Commits v1.0.0 Contribution Workflow # Find something to work on # Best place to find something to work on is to look at currently open issues . If you are a first time contributor then starting with list of good first issues is best. Start a discussion # Start a Github Discussion about what you are planning to contribute. Explain the feature or issue that you are planning to contribute and what your solution or implementation approach. Janssen is a community driven project and it'll be helpful to get community's view about it. Create an issue # Take your time to write a proper issue including a good summary and description. Outcome of Github discussion about your contribution can help you create good content for the issue. As a first step when creating a new issue, an issue template has to be selected. Select appropriate issue template and it'll help you create an issue with right content. Remember that issue may be the first thing a reviewer of your PR will look at to get an idea of what you are proposing. It will also be used by the community in the future to find about what new features and enhancements are included in new releases. Implement the change # All contributions to Janssen Project should be made via Github pull requests(PR). New to PR workflow?? Learn and practice it at first-contributions Create a Fork # Fork Janssen repository . And create a clone. Implement the Change # Start working on changes as required. Make sure the code conventions are being followed. Use static code analysis and linting tools to make sure the code is high-quality. Write tests first and then code. Ensure that integration tests that cover your code are appropriately updated and reviewed. Create PR early and push often. Janssen uses Github actions to run automated checks on PR changes. Ensure that these checks are passing with every push. Engage PR reviewers at the start so that they can continue to reivew code as it is developed and in small chunks. For a change that is non-trivial(an enhancement or a new feature), design should be reviewed. This should be done via PR by adding appropriate code owners. Document # PR should include changes in relevent documentation along with code changes. Raise a PR # Make sure that PR title follows these guidelines Janssen uses Github PR template. Template provides helpful instructions to ensure new PRs are complete in details and easy to review. Github will populate new PR's description with these instructions. You can edit PR description as per your requirements. When PR is raised, Github will automatically assign reviewer to the PR based changed files and CODEOWNERS list. Once PR is raised, ensure that PR passes all the mandatory Github actions checks available on Github PR page. Github will not allow PR to be merged if any of the mandatory check is failing. Follow Through # Once the PR is raised, wait for reviewers to start review. Reviewers will start review at the first opportunity available. If you want to draw attention, give a gentle reminder in PR comments. But please be patient. Follow activities on your PR closely till the time PR is merged. PR reviewer may want to suggest a change or may need to ask a question to get more clarity. Make sure you are actively collaborating. Once Reviewer has completed the review and approved the changes, the PR will be merged. Thats it!! Congratulations on successful contribution. \ud83e\udd73 \ud83e\udd1f","title":"Contribution Guidelines"},{"location":"CONTRIBUTING/#contributing-to-janssen-project","text":"Purpose of this guide is to provide necessary information and resources to community in order to make successful contribution to the Janssen Project. There are many ways you can contribute. Of course you can contribute code. But we also need people to write documentation and guides, to help us with testing, to answer questions on the forums and chat, to review PR's, to help us with devops and CI/CD, to provide feedback on usability, and to promote the project through outreach. Also, by sharing metrics with us, we can gain valuable insights into how the software performs in the wild. Join the Community First Time Contributors Contribution Guidelines Code of Conduct About Issues Triaging Code Conventions and Guidelines Commits Branches PRs Issues Contribution Workflow Find Something To Work On Start a Discussion Implement the Change Document Raise a PR Follow Through","title":"Contributing to Janssen Project"},{"location":"CONTRIBUTING/#join-the-community","text":"Repo : Watch and Star Janssen repository on Github Discussions : Join interesting discussions at Github Discussions Chat : We have an active community chat on Gitter . You can register for free their with your Github identity. Tweet : Janssen is on Twitter too. Follow us there to stay up to date on release announcements and news around Janssen.","title":"Join the Community"},{"location":"CONTRIBUTING/#first-time-contributors","text":"In case you are first-time contributor, then you can start with our good first issues list These are issues where you can easily contribute and community members will guide and support your contribution as always. If you need Janssen installation to test out your fix, here are the steps .","title":"First Time Contributors"},{"location":"CONTRIBUTING/#contribution-guidelines","text":"We are really glad you are reading this, because we need volunteer developers to help this project come to fruition. Code of Conduct Issues Triaging Coding Conventions","title":"Contribution Guidelines"},{"location":"CONTRIBUTING/#code-of-conduct","text":"Janssen project has a Code of Conduct to which all contributors must adhere, please read it before interacting with the repository or the community in any way.","title":"Code of Conduct"},{"location":"CONTRIBUTING/#about-issues","text":"There are four kinds of issues you can open: Bug report : you believe you found a problem in a project and you want to discuss and get it fixed, creating an issue with the bug report template is the best way to do so. Feature Request : any kind of new feature need to be discussed in this kind of issue, do you want a new rule or a new feature? This is the kind of issue you want to open. Be very good at explaining your intent, it's always important that others can understand what you mean in order to discuss, be open and collaborative in letting others help you getting this done! Security Vulnerability : If you identify a security problem, please report it immediately, providing details about the nature, and if applicable, how to reproduce it. If you want to report an issue privately, you can email security@gluu.org Failing tests : you noticed a flaky test or a problem with a build? This is the kind of issue to triage that! The best way to get involved in the project is through issues, you can help in many ways: Issues triaging: participating in the discussion and adding details to open issues is always a good thing, sometimes issues need to be verified, you could be the one writing a test case to fix a bug! Fix an issue: you can help in getting issue fixed in many ways. More often by opening a pull request. In case you are first-time contributor, then you can start with our good first issues list These are issues where you can easily contribute and community members will guide and support your contribution as always.","title":"About Issues"},{"location":"CONTRIBUTING/#triaging","text":"Triage is a process of evaluating issues and PRs in order to determine their characteristics and take quick actions if possible. When you triage an issue, you: assess whether it has merit or not quickly close it by correctly answering a question point the reporter to a resource or documentation answering the issue tag it via labels, projects, or milestones take ownership submitting a PR for it, in case you want \ud83d\ude07 Here is how we continously triage new issues and PRs so that contributors can contribute faster and better.","title":"Triaging"},{"location":"CONTRIBUTING/#code-conventions-and-guidelines","text":"","title":"Code Conventions and Guidelines"},{"location":"CONTRIBUTING/#commits","text":"Janssen Project mandates all commits to follow guidelines as below. Commit messages As commit convention, we adopt Conventional Commits v1.0.0 , we have an history of commits that do not adopt the convention but any new commit must follow it to be eligible for merge. Add GPG signature to your commit To ensure that contribution is coming for a trusted source, all commits should be signed using GPG key and verified by Github. If you have GPG key setup already then just use -S switch with you commit to sign it. If you need to setup your GPG key and verification, then you can find detailed instructions here Add DCO sign-off The Developer Certificate of Origin (DCO) is a lightweight way for contributors to certify that they wrote or otherwise have the right to submit the code they are contributing to the project. Contributors to the Janssen project sign-off that they adhere to these requirements by adding a Signed-off-by line to commit messages. This is a commit message Signed-off-by: Foo Bar <foobar@spam.org> Git even has a -s command line option to append this automatically to your commit message: $ git commit -s -m 'This is my commit message' In all, if you have your GPG verification setup, your commit command should look like git commit -S -s -m 'message that follows conventional commit style'","title":"Commits"},{"location":"CONTRIBUTING/#branches","text":"Branch name should have component name as prefix, eg jans-core-mybranch","title":"Branches"},{"location":"CONTRIBUTING/#prs","text":"PR titles should also follow Conventional Commits v1.0.0 . This will help in keeping merge commit messages inline with commit message standards Squash commits into small number of cohesive commits before raising a PR PR should be rebased on main branch so that there are minimal or no conflicts at the time of merge PR should only have changes related to target feature or issue. Create a separate PR for formatting or other quick bug fixes PR should include relevent documentaton changes PR should include unit and integration tests","title":"PRs"},{"location":"CONTRIBUTING/#issues","text":"Issue titles should follow Conventional Commits v1.0.0","title":"Issues"},{"location":"CONTRIBUTING/#contribution-workflow","text":"","title":"Contribution Workflow"},{"location":"CONTRIBUTING/#find-something-to-work-on","text":"Best place to find something to work on is to look at currently open issues . If you are a first time contributor then starting with list of good first issues is best.","title":"Find something to work on"},{"location":"CONTRIBUTING/#start-a-discussion","text":"Start a Github Discussion about what you are planning to contribute. Explain the feature or issue that you are planning to contribute and what your solution or implementation approach. Janssen is a community driven project and it'll be helpful to get community's view about it.","title":"Start a discussion"},{"location":"CONTRIBUTING/#create-an-issue","text":"Take your time to write a proper issue including a good summary and description. Outcome of Github discussion about your contribution can help you create good content for the issue. As a first step when creating a new issue, an issue template has to be selected. Select appropriate issue template and it'll help you create an issue with right content. Remember that issue may be the first thing a reviewer of your PR will look at to get an idea of what you are proposing. It will also be used by the community in the future to find about what new features and enhancements are included in new releases.","title":"Create an issue"},{"location":"CONTRIBUTING/#implement-the-change","text":"All contributions to Janssen Project should be made via Github pull requests(PR). New to PR workflow?? Learn and practice it at first-contributions","title":"Implement the change"},{"location":"CONTRIBUTING/#create-a-fork","text":"Fork Janssen repository . And create a clone.","title":"Create a Fork"},{"location":"CONTRIBUTING/#implement-the-change_1","text":"Start working on changes as required. Make sure the code conventions are being followed. Use static code analysis and linting tools to make sure the code is high-quality. Write tests first and then code. Ensure that integration tests that cover your code are appropriately updated and reviewed. Create PR early and push often. Janssen uses Github actions to run automated checks on PR changes. Ensure that these checks are passing with every push. Engage PR reviewers at the start so that they can continue to reivew code as it is developed and in small chunks. For a change that is non-trivial(an enhancement or a new feature), design should be reviewed. This should be done via PR by adding appropriate code owners.","title":"Implement the Change"},{"location":"CONTRIBUTING/#document","text":"PR should include changes in relevent documentation along with code changes.","title":"Document"},{"location":"CONTRIBUTING/#raise-a-pr","text":"Make sure that PR title follows these guidelines Janssen uses Github PR template. Template provides helpful instructions to ensure new PRs are complete in details and easy to review. Github will populate new PR's description with these instructions. You can edit PR description as per your requirements. When PR is raised, Github will automatically assign reviewer to the PR based changed files and CODEOWNERS list. Once PR is raised, ensure that PR passes all the mandatory Github actions checks available on Github PR page. Github will not allow PR to be merged if any of the mandatory check is failing.","title":"Raise a PR"},{"location":"CONTRIBUTING/#follow-through","text":"Once the PR is raised, wait for reviewers to start review. Reviewers will start review at the first opportunity available. If you want to draw attention, give a gentle reminder in PR comments. But please be patient. Follow activities on your PR closely till the time PR is merged. PR reviewer may want to suggest a change or may need to ask a question to get more clarity. Make sure you are actively collaborating. Once Reviewer has completed the review and approved the changes, the PR will be merged. Thats it!! Congratulations on successful contribution. \ud83e\udd73 \ud83e\udd1f","title":"Follow Through"},{"location":"assets/","text":"Use the assets directory to store digital assets like images and diagrams that are used to support documentation for all modules. Directory Structure # Directory structure under this directory should closely follow directory structure under docs directory. For example, documents located under docs/user/howto should place their supporting images\\diagrams under docs/assets/user/howto . Images and Diagrams # Keep images and diagrams in separate directories as below. - images : to hold screenshots and other images (Max size 1MB each, preferrably .png ) - diagrams : to hold interaction diagrams, class diagrams, sequence diagram. (Preferrably as PDF) For instance, images that support technical documentation for jans-core module should be located in jans/docs/assets/technical/jans-core/images File Naming Conventions # Image/diagram file names should follow the pattern: image/diagram - 3 tag words - mmddyyyy . type . For example, - A screenshot of IDE settings for developer workspace setup can be named image-eclipse-ide-setting-04052022.png - A sequence diagram for user registration flow can be named diagram-user-registration-sequence-03062022.pdf","title":"Index"},{"location":"assets/#directory-structure","text":"Directory structure under this directory should closely follow directory structure under docs directory. For example, documents located under docs/user/howto should place their supporting images\\diagrams under docs/assets/user/howto .","title":"Directory Structure"},{"location":"assets/#images-and-diagrams","text":"Keep images and diagrams in separate directories as below. - images : to hold screenshots and other images (Max size 1MB each, preferrably .png ) - diagrams : to hold interaction diagrams, class diagrams, sequence diagram. (Preferrably as PDF) For instance, images that support technical documentation for jans-core module should be located in jans/docs/assets/technical/jans-core/images","title":"Images and Diagrams"},{"location":"assets/#file-naming-conventions","text":"Image/diagram file names should follow the pattern: image/diagram - 3 tag words - mmddyyyy . type . For example, - A screenshot of IDE settings for developer workspace setup can be named image-eclipse-ide-setting-04052022.png - A sequence diagram for user registration flow can be named diagram-user-registration-sequence-03062022.pdf","title":"File Naming Conventions"},{"location":"code/","text":"Code documentation from Janssen modules # Contains documentation that helps understanding existing code. For example, JavaDocs.","title":"Code documentation from Janssen modules"},{"location":"code/#code-documentation-from-janssen-modules","text":"Contains documentation that helps understanding existing code. For example, JavaDocs.","title":"Code documentation from Janssen modules"},{"location":"community/","text":"Community Guides # Documents that guide community members participate and contribute to Janssen project.","title":"Community Guides"},{"location":"community/#community-guides","text":"Documents that guide community members participate and contribute to Janssen project.","title":"Community Guides"},{"location":"community/charter/","text":"Technical Charter (the \u201cCharter\u201d) for Janssen Project a Series of LF Projects, LLC # Adopted December 8, 2020 This Charter sets forth the responsibilities and procedures for technical contribution to, and oversight of, the Janssen open source project, which has been established as Janssen Project a Series of LF Projects, LLC (the \u201cProject\u201d). LF Projects, LLC (\u201cLF Projects\u201d) is a Delaware series limited liability company. All contributors (including committers, maintainers, and other technical positions) and other participants in the Project (collectively, \u201cCollaborators\u201d) must comply with the terms of this Charter. Mission and Scope of the Project The mission of the Project is to develop and maintain a cloud native identity and authorization platform that comprehensively implements OAuth, OpenID Connect and the User Managed Access protocol, while maintaining flexibility and horizontal scalability. The scope of the Project includes collaborative development under the Project License (as defined herein) supporting the mission, including documentation, testing, integration and the creation of other artifacts that aid the development, deployment, operation or adoption of the open source project. Technical Steering Committee The Technical Steering Committee (the \u201cTSC\u201d) will be responsible for all technical oversight of the open source Project. The TSC voting members are initially the Project\u2019s Committers. At the inception of the project, the Committers of the Project will be as set forth within the \u201cCONTRIBUTING\u201d file within the Project\u2019s code repository. The TSC may choose an alternative approach for determining the voting members of the TSC, and any such alternative approach will be documented in the CONTRIBUTING file. Any meetings of the Technical Steering Committee are intended to be open to the public, and can be conducted electronically, via teleconference, or in person. TSC projects generally will involve Contributors and Committers. The TSC may adopt or modify roles so long as the roles are documented in the CONTRIBUTING file. Unless otherwise documented: Contributors include anyone in the technical community that contributes code, documentation, or other technical artifacts to the Project; Committers are Contributors who have earned the ability to modify (\u201ccommit\u201d) source code, documentation or other technical artifacts in a project\u2019s repository; and A Contributor may become a Committer by a majority approval of the existing Committers. A Committer may be removed by a majority approval of the other existing Committers. Participation in the Project through becoming a Contributor and Committer is open to anyone so long as they abide by the terms of this Charter. The TSC may (1) establish work flow procedures for the submission, approval, and closure/archiving of projects, (2) set requirements for the promotion of Contributors to Committer status, as applicable, and (3) amend, adjust, refine and/or eliminate the roles of Contributors, and Committers, and create new roles, and publicly document any TSC roles, as it sees fit. The TSC may elect a TSC Chair, who will preside over meetings of the TSC and will serve until their resignation or replacement by the TSC. Responsibilities: The TSC will be responsible for all aspects of oversight relating to the Project, which may include: coordinating the technical direction of the Project; approving project or system proposals (including, but not limited to, incubation, deprecation, and changes to a sub-project\u2019s scope); organizing sub-projects and removing sub-projects; creating sub-committees or working groups to focus on cross-project technical issues and requirements; appointing representatives to work with other open source or open standards communities; establishing community norms, workflows, issuing releases, and security issue reporting policies; approving and implementing policies and processes for contributing (to be published in the CONTRIBUTING file) and coordinating with the series manager of the Project (as provided for in the Series Agreement, the \u201cSeries Manager\u201d) to resolve matters or concerns that may arise as set forth in Section 7 of this Charter; discussions, seeking consensus, and where necessary, voting on technical matters relating to the code base that affect multiple projects; and coordinating any marketing, events, or communications regarding the Project. TSC Voting While the Project aims to operate as a consensus-based community, if any TSC decision requires a vote to move the Project forward, the voting members of the TSC will vote on a one vote per voting member basis. Quorum for TSC meetings requires at least fifty percent of all voting members of the TSC to be present. The TSC may continue to meet if quorum is not met but will be prevented from making any decisions at the meeting. Except as provided in Section 7.iii. and 8.i, decisions by vote at a meeting require a majority vote of those in attendance, provided quorum is met. Decisions made by electronic vote without a meeting require a majority vote of all voting members of the TSC. In the event a vote cannot be resolved by the TSC, any voting member of the TSC may refer the matter to the Series Manager for assistance in reaching a resolution. Compliance with Policies This Charter is subject to the Series Agreement for the Project and the Operating Agreement of LF Projects. Contributors will comply with the policies of LF Projects as may be adopted and amended by LF Projects, including, without limitation the policies listed at https://lfprojects.org/policies/. The TSC may adopt a code of conduct (\u201cCoC\u201d) for the Project, which is subject to approval by the Series Manager. In the event that a Project-specific CoC has not been approved, the LF Projects Code of Conduct listed at https://lfprojects.org/policies will apply for all Collaborators in the Project. When amending or adopting any policy applicable to the Project, LF Projects will publish such policy, as to be amended or adopted, on its web site at least 30 days prior to such policy taking effect; provided, however, that in the case of any amendment of the Trademark Policy or Terms of Use of LF Projects, any such amendment is effective upon publication on LF Project\u2019s web site. All Collaborators must allow open participation from any individual or organization meeting the requirements for contributing under this Charter and any policies adopted for all Collaborators by the TSC, regardless of competitive interests. Put another way, the Project community must not seek to exclude any participant based on any criteria, requirement, or reason other than those that are reasonable and applied on a non-discriminatory basis to all Collaborators in the Project community. The Project will operate in a transparent, open, collaborative, and ethical manner at all times. The output of all Project discussions, proposals, timelines, decisions, and status should be made open and easily visible to all. Any potential violations of this requirement should be reported immediately to the Series Manager. Community Assets LF Projects will hold title to all trade or service marks used by the Project (\u201cProject Trademarks\u201d), whether based on common law or registered rights. Project Trademarks will be transferred and assigned to LF Projects to hold on behalf of the Project. Any use of any Project Trademarks by Collaborators in the Project will be in accordance with the license from LF Projects and inure to the benefit of LF Projects. The Project will, as permitted and in accordance with such license from LF Projects, develop and own all Project GitHub and social media accounts, and domain name registrations created by the Project community. Under no circumstances will LF Projects be expected or required to undertake any action on behalf of the Project that is inconsistent with the tax-exempt status or purpose, as applicable, of LFP, Inc. or LF Projects, LLC. General Rules and Operations. The Project will: engage in the work of the Project in a professional manner consistent with maintaining a cohesive community, while also maintaining the goodwill and esteem of LF Projects, LFP, Inc. and other partner organizations in the open source community; and respect the rights of all trademark owners, including any branding and trademark usage guidelines. Intellectual Property Policy Collaborators acknowledge that the copyright in all new contributions will be retained by the copyright holder as independent works of authorship and that no contributor or copyright holder will be required to assign copyrights to the Project. Except as described in Section 7.iii., all contributions to the Project are subject to the following: All new inbound code contributions to the Project must be made using the Apache License, Version 2.0, available at https://www.apache.org/licenses/LICENSE-2.0 (the \u201cProject License\u201d). All new inbound code contributions must also be accompanied by a Developer Certificate of Origin ( http://developercertificate.org ) sign-off in the source code system that is submitted through a TSC-approved contribution process which will bind the authorized contributor and, if not self-employed, their employer to the applicable license; All outbound code will be made available under the Project License. Documentation will be received and made available by the Project under the Creative Commons Attribution 4.0 International License (available at http://creativecommons.org/licenses/by/4.0/ ). The Project may seek to integrate and contribute back to other open source projects (\u201cUpstream Projects\u201d). In such cases, the Project will conform to all license requirements of the Upstream Projects, including dependencies, leveraged by the Project. Upstream Project code contributions not stored within the Project\u2019s main code repository will comply with the contribution process and license terms for the applicable Upstream Project. The TSC may approve the use of an alternative license or licenses for inbound or outbound contributions on an exception basis. To request an exception, please describe the contribution, the alternative open source license(s), and the justification for using an alternative open source license for the Project. License exceptions must be approved by a two-thirds vote of the entire TSC. Contributed files should contain license information, such as SPDX short form identifiers, indicating the open source license or licenses pertaining to the file. Amendments This charter may be amended by a two-thirds vote of the entire TSC and is subject to approval by LF Projects.","title":"Technical Charter (the \u201cCharter\u201d) for Janssen Project a Series of LF Projects, LLC"},{"location":"community/charter/#technical-charter-the-charter-for-janssen-project-a-series-of-lf-projects-llc","text":"Adopted December 8, 2020 This Charter sets forth the responsibilities and procedures for technical contribution to, and oversight of, the Janssen open source project, which has been established as Janssen Project a Series of LF Projects, LLC (the \u201cProject\u201d). LF Projects, LLC (\u201cLF Projects\u201d) is a Delaware series limited liability company. All contributors (including committers, maintainers, and other technical positions) and other participants in the Project (collectively, \u201cCollaborators\u201d) must comply with the terms of this Charter. Mission and Scope of the Project The mission of the Project is to develop and maintain a cloud native identity and authorization platform that comprehensively implements OAuth, OpenID Connect and the User Managed Access protocol, while maintaining flexibility and horizontal scalability. The scope of the Project includes collaborative development under the Project License (as defined herein) supporting the mission, including documentation, testing, integration and the creation of other artifacts that aid the development, deployment, operation or adoption of the open source project. Technical Steering Committee The Technical Steering Committee (the \u201cTSC\u201d) will be responsible for all technical oversight of the open source Project. The TSC voting members are initially the Project\u2019s Committers. At the inception of the project, the Committers of the Project will be as set forth within the \u201cCONTRIBUTING\u201d file within the Project\u2019s code repository. The TSC may choose an alternative approach for determining the voting members of the TSC, and any such alternative approach will be documented in the CONTRIBUTING file. Any meetings of the Technical Steering Committee are intended to be open to the public, and can be conducted electronically, via teleconference, or in person. TSC projects generally will involve Contributors and Committers. The TSC may adopt or modify roles so long as the roles are documented in the CONTRIBUTING file. Unless otherwise documented: Contributors include anyone in the technical community that contributes code, documentation, or other technical artifacts to the Project; Committers are Contributors who have earned the ability to modify (\u201ccommit\u201d) source code, documentation or other technical artifacts in a project\u2019s repository; and A Contributor may become a Committer by a majority approval of the existing Committers. A Committer may be removed by a majority approval of the other existing Committers. Participation in the Project through becoming a Contributor and Committer is open to anyone so long as they abide by the terms of this Charter. The TSC may (1) establish work flow procedures for the submission, approval, and closure/archiving of projects, (2) set requirements for the promotion of Contributors to Committer status, as applicable, and (3) amend, adjust, refine and/or eliminate the roles of Contributors, and Committers, and create new roles, and publicly document any TSC roles, as it sees fit. The TSC may elect a TSC Chair, who will preside over meetings of the TSC and will serve until their resignation or replacement by the TSC. Responsibilities: The TSC will be responsible for all aspects of oversight relating to the Project, which may include: coordinating the technical direction of the Project; approving project or system proposals (including, but not limited to, incubation, deprecation, and changes to a sub-project\u2019s scope); organizing sub-projects and removing sub-projects; creating sub-committees or working groups to focus on cross-project technical issues and requirements; appointing representatives to work with other open source or open standards communities; establishing community norms, workflows, issuing releases, and security issue reporting policies; approving and implementing policies and processes for contributing (to be published in the CONTRIBUTING file) and coordinating with the series manager of the Project (as provided for in the Series Agreement, the \u201cSeries Manager\u201d) to resolve matters or concerns that may arise as set forth in Section 7 of this Charter; discussions, seeking consensus, and where necessary, voting on technical matters relating to the code base that affect multiple projects; and coordinating any marketing, events, or communications regarding the Project. TSC Voting While the Project aims to operate as a consensus-based community, if any TSC decision requires a vote to move the Project forward, the voting members of the TSC will vote on a one vote per voting member basis. Quorum for TSC meetings requires at least fifty percent of all voting members of the TSC to be present. The TSC may continue to meet if quorum is not met but will be prevented from making any decisions at the meeting. Except as provided in Section 7.iii. and 8.i, decisions by vote at a meeting require a majority vote of those in attendance, provided quorum is met. Decisions made by electronic vote without a meeting require a majority vote of all voting members of the TSC. In the event a vote cannot be resolved by the TSC, any voting member of the TSC may refer the matter to the Series Manager for assistance in reaching a resolution. Compliance with Policies This Charter is subject to the Series Agreement for the Project and the Operating Agreement of LF Projects. Contributors will comply with the policies of LF Projects as may be adopted and amended by LF Projects, including, without limitation the policies listed at https://lfprojects.org/policies/. The TSC may adopt a code of conduct (\u201cCoC\u201d) for the Project, which is subject to approval by the Series Manager. In the event that a Project-specific CoC has not been approved, the LF Projects Code of Conduct listed at https://lfprojects.org/policies will apply for all Collaborators in the Project. When amending or adopting any policy applicable to the Project, LF Projects will publish such policy, as to be amended or adopted, on its web site at least 30 days prior to such policy taking effect; provided, however, that in the case of any amendment of the Trademark Policy or Terms of Use of LF Projects, any such amendment is effective upon publication on LF Project\u2019s web site. All Collaborators must allow open participation from any individual or organization meeting the requirements for contributing under this Charter and any policies adopted for all Collaborators by the TSC, regardless of competitive interests. Put another way, the Project community must not seek to exclude any participant based on any criteria, requirement, or reason other than those that are reasonable and applied on a non-discriminatory basis to all Collaborators in the Project community. The Project will operate in a transparent, open, collaborative, and ethical manner at all times. The output of all Project discussions, proposals, timelines, decisions, and status should be made open and easily visible to all. Any potential violations of this requirement should be reported immediately to the Series Manager. Community Assets LF Projects will hold title to all trade or service marks used by the Project (\u201cProject Trademarks\u201d), whether based on common law or registered rights. Project Trademarks will be transferred and assigned to LF Projects to hold on behalf of the Project. Any use of any Project Trademarks by Collaborators in the Project will be in accordance with the license from LF Projects and inure to the benefit of LF Projects. The Project will, as permitted and in accordance with such license from LF Projects, develop and own all Project GitHub and social media accounts, and domain name registrations created by the Project community. Under no circumstances will LF Projects be expected or required to undertake any action on behalf of the Project that is inconsistent with the tax-exempt status or purpose, as applicable, of LFP, Inc. or LF Projects, LLC. General Rules and Operations. The Project will: engage in the work of the Project in a professional manner consistent with maintaining a cohesive community, while also maintaining the goodwill and esteem of LF Projects, LFP, Inc. and other partner organizations in the open source community; and respect the rights of all trademark owners, including any branding and trademark usage guidelines. Intellectual Property Policy Collaborators acknowledge that the copyright in all new contributions will be retained by the copyright holder as independent works of authorship and that no contributor or copyright holder will be required to assign copyrights to the Project. Except as described in Section 7.iii., all contributions to the Project are subject to the following: All new inbound code contributions to the Project must be made using the Apache License, Version 2.0, available at https://www.apache.org/licenses/LICENSE-2.0 (the \u201cProject License\u201d). All new inbound code contributions must also be accompanied by a Developer Certificate of Origin ( http://developercertificate.org ) sign-off in the source code system that is submitted through a TSC-approved contribution process which will bind the authorized contributor and, if not self-employed, their employer to the applicable license; All outbound code will be made available under the Project License. Documentation will be received and made available by the Project under the Creative Commons Attribution 4.0 International License (available at http://creativecommons.org/licenses/by/4.0/ ). The Project may seek to integrate and contribute back to other open source projects (\u201cUpstream Projects\u201d). In such cases, the Project will conform to all license requirements of the Upstream Projects, including dependencies, leveraged by the Project. Upstream Project code contributions not stored within the Project\u2019s main code repository will comply with the contribution process and license terms for the applicable Upstream Project. The TSC may approve the use of an alternative license or licenses for inbound or outbound contributions on an exception basis. To request an exception, please describe the contribution, the alternative open source license(s), and the justification for using an alternative open source license for the Project. License exceptions must be approved by a two-thirds vote of the entire TSC. Contributed files should contain license information, such as SPDX short form identifiers, indicating the open source license or licenses pertaining to the file. Amendments This charter may be amended by a two-thirds vote of the entire TSC and is subject to approval by LF Projects.","title":"Technical Charter (the \u201cCharter\u201d) for Janssen Project a Series of LF Projects, LLC"},{"location":"community/copyright-notices/","text":"Ownership of Copyrights in Janssen Project Contributions # When source code, documentation and other content is contributed to the Janssen Project, the copyrights in those contributions remain owned by the original copyright holders. The copyrights are not assigned to the Janssen Project. Instead, they are licensed for distribution as part of the project. Whether a project uses a DCO or a CLA, the original copyright holders retain their copyrights. Copyright Notices # The Janssen Project does not require or recommend that every contributor include their copyright notice in contributed files. See below for more details on why not. Instead, we recommend using a more general statement in a form similar to the following: Copyright The Janssen Project Authors. Copyright The Janssen Project Contributors. Copyright Contributors to the Janssen Project. These statements are intended to communicate the following: - the work is copyrighted; - the contributors of the code licensed it, but retain ownership of their copyrights; and - it was licensed for distribution as part of the named project. By using a common format, the project avoids having to deal with names of copyright holders, years or ranges of years, and variations on the (c) symbol. This aims to minimize the burden on developers and maintainers as well as redistributors of the code. What if I want my copyright notice included? # Please note that it is not wrong , and it is acceptable, if a contributor wishes to keep their own copyright notices on their contributions. The above is a recommended format for ease of use, but is not mandated by the Janssen Project. If you are contributing on behalf of your employer, you may wish to discuss with your legal department about whether they will require you to include a copyright notice identifying them as the copyright holder in contributions. What about Third Party Code? # If a file only contains code that originates from a third party source who didn't contribute it themselves, then you would not want to add the notices above. (In a similar vein, you wouldn't add a notice identifying you as the copyright holder either, if you didn't own it.) Just preserve the existing copyright and license notices as they are. If, however, you add copyrightable content to a pre-existing file from another project, then at that point you could add a copyright notice similar to the one above. Don't Change Someone Else's Notice without their Permission # You should not change or remove someone else's copyright notice unless they have expressly permitted you to do so. This includes third parties' notices in pre-existing code. Why not list every copyright holder? # There are several reasons why the Janssen Project doesn't require or recommend trying to list every copyright holder for contributions to every file: Copyright notices are not mandatory in order for the contributor to retain ownership of their copyright. Copyright notices are rarely kept up to date as a file evolves, resulting in inaccurate statements. Trying to keep notices up to date, or to correct notices that have become inaccurate, increases the burden on developers without tangible benefit. Developers and maintainers often do not want to have to worry about e.g. whether a minor contribution (such as a typo fix) means that a new copyright notice should be added. Adding many different copyright notices may increase the burden on downstream distributors, if their license compliance processes involve reproducing notices. The specific individual or legal entity that owns the copyright might not be known to the contributor; it could be you, your employer, or some other entity.","title":"Copyright notices"},{"location":"community/copyright-notices/#ownership-of-copyrights-in-janssen-project-contributions","text":"When source code, documentation and other content is contributed to the Janssen Project, the copyrights in those contributions remain owned by the original copyright holders. The copyrights are not assigned to the Janssen Project. Instead, they are licensed for distribution as part of the project. Whether a project uses a DCO or a CLA, the original copyright holders retain their copyrights.","title":"Ownership of Copyrights in Janssen Project Contributions"},{"location":"community/copyright-notices/#copyright-notices","text":"The Janssen Project does not require or recommend that every contributor include their copyright notice in contributed files. See below for more details on why not. Instead, we recommend using a more general statement in a form similar to the following: Copyright The Janssen Project Authors. Copyright The Janssen Project Contributors. Copyright Contributors to the Janssen Project. These statements are intended to communicate the following: - the work is copyrighted; - the contributors of the code licensed it, but retain ownership of their copyrights; and - it was licensed for distribution as part of the named project. By using a common format, the project avoids having to deal with names of copyright holders, years or ranges of years, and variations on the (c) symbol. This aims to minimize the burden on developers and maintainers as well as redistributors of the code.","title":"Copyright Notices"},{"location":"community/copyright-notices/#what-if-i-want-my-copyright-notice-included","text":"Please note that it is not wrong , and it is acceptable, if a contributor wishes to keep their own copyright notices on their contributions. The above is a recommended format for ease of use, but is not mandated by the Janssen Project. If you are contributing on behalf of your employer, you may wish to discuss with your legal department about whether they will require you to include a copyright notice identifying them as the copyright holder in contributions.","title":"What if I want my copyright notice included?"},{"location":"community/copyright-notices/#what-about-third-party-code","text":"If a file only contains code that originates from a third party source who didn't contribute it themselves, then you would not want to add the notices above. (In a similar vein, you wouldn't add a notice identifying you as the copyright holder either, if you didn't own it.) Just preserve the existing copyright and license notices as they are. If, however, you add copyrightable content to a pre-existing file from another project, then at that point you could add a copyright notice similar to the one above.","title":"What about Third Party Code?"},{"location":"community/copyright-notices/#dont-change-someone-elses-notice-without-their-permission","text":"You should not change or remove someone else's copyright notice unless they have expressly permitted you to do so. This includes third parties' notices in pre-existing code.","title":"Don't Change Someone Else's Notice without their Permission"},{"location":"community/copyright-notices/#why-not-list-every-copyright-holder","text":"There are several reasons why the Janssen Project doesn't require or recommend trying to list every copyright holder for contributions to every file: Copyright notices are not mandatory in order for the contributor to retain ownership of their copyright. Copyright notices are rarely kept up to date as a file evolves, resulting in inaccurate statements. Trying to keep notices up to date, or to correct notices that have become inaccurate, increases the burden on developers without tangible benefit. Developers and maintainers often do not want to have to worry about e.g. whether a minor contribution (such as a typo fix) means that a new copyright notice should be added. Adding many different copyright notices may increase the burden on downstream distributors, if their license compliance processes involve reproducing notices. The specific individual or legal entity that owns the copyright might not be known to the contributor; it could be you, your employer, or some other entity.","title":"Why not list every copyright holder?"},{"location":"community/testing/","text":"Test Driven development # The Janssen Project is a large, complex project with tons of inter-dependency. If we aren't test-driven, anarchy will ensue. Unit testing # Do not submit any code without a corresponding unit test. Also, any bug fixes should increment unit test coverage. All unit tests are executed with any subsequent Jenkins build. Component testing # Component testing uses real world use cases to exercise a portion of the software, using typical data inputs. Developers should document component stories and submit them to the component test library for the respective repository. A tester should be able to run component tests manually. Component tests should run automatically with each Jenkins build. The OpenID Foundation certification tests supplement the component testing library, and should be run for each major release of the software for which they are available. Performance testing # Performance tests are critical to optimization of the persistence and caching implementation. All major releases of the software should be tested for performance with all supported database and cache configurations using the Cloud Native distribution. The VM distribution will not be performance tested, as the main goal for this distribution is development and small deployments. The JMeter test tool should be used to generate the load. These tests are published so community members can run their own bench-marking analysis. HA Tests # HA tests should be run against the Cloud Native distribution, which by design is active-active with no single point of failure. The HA testing should simulate taking down various pieces of infrastructure, to see if authentications can still proceed. Also, what happens to transactions that were in progress during the crash? Penetration tests # Penetration testing is highly deployment specific. Depending on different implementations of the Janssen Project software, you may achieve different levels of risk mitigation. Thus it is important that organizations that operate their own IAM platform based on Janssen perform their own penetration testing. Dependency Vulnerabilities # Dependency vulnerabilities are monitored by Gihub. In addition we plan to use the Linux Foundation Community Bridge vulnerability detection platform.","title":"Test Driven development"},{"location":"community/testing/#test-driven-development","text":"The Janssen Project is a large, complex project with tons of inter-dependency. If we aren't test-driven, anarchy will ensue.","title":"Test Driven development"},{"location":"community/testing/#unit-testing","text":"Do not submit any code without a corresponding unit test. Also, any bug fixes should increment unit test coverage. All unit tests are executed with any subsequent Jenkins build.","title":"Unit testing"},{"location":"community/testing/#component-testing","text":"Component testing uses real world use cases to exercise a portion of the software, using typical data inputs. Developers should document component stories and submit them to the component test library for the respective repository. A tester should be able to run component tests manually. Component tests should run automatically with each Jenkins build. The OpenID Foundation certification tests supplement the component testing library, and should be run for each major release of the software for which they are available.","title":"Component testing"},{"location":"community/testing/#performance-testing","text":"Performance tests are critical to optimization of the persistence and caching implementation. All major releases of the software should be tested for performance with all supported database and cache configurations using the Cloud Native distribution. The VM distribution will not be performance tested, as the main goal for this distribution is development and small deployments. The JMeter test tool should be used to generate the load. These tests are published so community members can run their own bench-marking analysis.","title":"Performance testing"},{"location":"community/testing/#ha-tests","text":"HA tests should be run against the Cloud Native distribution, which by design is active-active with no single point of failure. The HA testing should simulate taking down various pieces of infrastructure, to see if authentications can still proceed. Also, what happens to transactions that were in progress during the crash?","title":"HA Tests"},{"location":"community/testing/#penetration-tests","text":"Penetration testing is highly deployment specific. Depending on different implementations of the Janssen Project software, you may achieve different levels of risk mitigation. Thus it is important that organizations that operate their own IAM platform based on Janssen perform their own penetration testing.","title":"Penetration tests"},{"location":"community/testing/#dependency-vulnerabilities","text":"Dependency vulnerabilities are monitored by Gihub. In addition we plan to use the Linux Foundation Community Bridge vulnerability detection platform.","title":"Dependency Vulnerabilities"},{"location":"community/triage/","text":"Janssen Triage Process and labels # Triage process is used to quickly screen and categorise new issues and PRs. Aim is to determine characteristics of new PRs/issues and take quick actions if possible. Triage process is a contineous process. As new issues/PRs come in, the community initiates discussions, add labels, ask for more details. This process does not wait for triage call or a meeting to be called. Community holds triage calls at a regular cadence. Triage calls are mainly utilised to discuss issue/PR where concensus is not yet reached and to pick up anything which is not yet triaged. It is encouraged to complete triage outside of triage call to improve velocity. Stages in triage process: # Name Description Needs triage When a new issue or PR is created, it is automatically labeled as needs-triage Ready for triage For all issues/PRs with needs-triage label, Maintainers/committers will assign a suitable active community member as owner to start evaluating issue/PR . Owner and community will evaluate merit and characteristics of issue/PR asynchronously and assign approapriate labels . When owner believes that sufficient details have been added and there is concensus, the owner would remove needs-triage label and apply label ready-for-triage . Triaged All issues/PRs with label ready-for-triage will be reviewed by core members of the community who have permission to add triaged label. Reviewer reviews issue/PR to check if the issue/PR is fully triaged and can be added to backlog without discussion on triage call. At this point, label triaged is added and label ready-for-triage is removed. We expect most of the isseus and PRs will be able to follow above path and quickly move out of triage process without waiting for triage call. Issues/PRs which still doesn't have triaged label, or has needs-discussion label, will be discussed during triage call. Labels # Github labels help us annotate issues/PRs with additional data. Janssen community uses labels, as detailed below, to communicate information and help making decisions about issues/PRs. Communication labels # These labels communicate status of current triage process for an issue/PR or indicate where community contribution is required. Most of communication labels would be replaced by other labels as triage process progresses and issue enters active development. For example, help wanted label would be removed once issue gets under active development and a community members takes ownership of the issue. Below is the list of labels which fall under this category: Label Indicates That needs-triage issue/PR needs triaging ready-for-triage that sufficient details has been added to the issue/PR in form of labels and is ready for triage review triaged Issue/PR is fully triaged needs-information Indicates that creator needs to add more information to issue/PR in order to be meaningfully triaged. When adding this label, also comment on the issue about what information is needed needs-discussion Indicates that issue needs discussion during triage meeting. When adding this label, also comment on the issue about what is it that demands discussion on this issue good first issue Indicates to the community that this issue suitable for first time contributor help wanted Indicates to the community that this issue has complexity which is suitable for contribution from any external contributor Metadata labels # These labels enrich issue/PR with metadata that will help during triage process and active development. These labels may not be removed from issue/PR, though value of labels may change as development progresses. For example, effort label may change from effort-3 to effort-8 as we understand issue in more detail. Below is the list of labels in this category: Label Indicates That Details comp-<module> Major Janssen components needing change in order to fix this issue/PR. For example, if this issue/PR would require change in files under fido2 module (under jans/fido2) , then apply comp-jans-fido2 label e.g comp-jans-auth-server , comp-jans-fido2 , area-<concern> Cross-cutting concerns involved in fixing this issue/PR. For example, if changes introduced by this issue/PR will need changes in documentation and need to be mentioned in release notes as well, then apply area-documentation , area-release-notes . area-CI should be applied when changes are required in artifacts relevent to automation, CI build infrastructure or release management process. An example of such artifact would be Github workflow scripts located under .github/workflows Labels available: area-documentation , area-release-notes , area-CI kind-bug Issue/PR is a bug in existing functionality kind-enhancement Issue/PR is an enhancement to an existing functionality kind-feature Issue/PR is new feature request kind-question Issue/PR is a question that can be addressed via pointers to documentation or user education kind-duplicate Issue/PR is a duplicate of existing issue/PR. Original issue should be mentioned in the comments using Duplicate of reply kind-dependencies Fix for Issue/PR pertains to external dependencies effort-1 Relative effort required for completion effort-2 Relative effort required for completion effort-3 Relative effort required for completion effort-5 Relative effort required for completion effort-8 Relative effort required for completion effort-13 Relative effort required for completion effort-21 Relative effort required for completion priority-0 An issue that causes a full outage, breakage, or major function unavailability for everyone, without any known workaround. The issue must be fixed immediately, taking precedence over all other work. Should receive updates at least once per day. priority-1 An issue that significantly impacts a large percentage of users; if there is a workaround it is partial or overly painful. The issue should be resolved before the next release. priority-2 The issue is important to a large percentage of users, with a workaround. Issues that are significantly ugly or painful (especially first-use or install-time issues). Issues with workarounds that would otherwise be P0 or P1. priority-3 An issue that is relevant to core functions, but does not impede progress. Important, but not urgent. priority-4 A relatively minor issue that is not relevant to core functions, or relates only to the attractiveness or pleasantness of use of the system. Good to have but not necessary changes/fixes. priority-5 The team acknowledges the request but (due to any number of reasons) does not plan to work on or accept contributions for this request. The issue remains open for discussion. Bot labeling methodology # The following labels are automatically assigned to Issues and PRs in GitHub following the schema provided in this file . | Label | Method | |---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | comp-<module> | The bot will detect from the title the component between the parentheses. feat(jans-auth-server): detect will result in the label comp-jans-auth-server added to the issue or PR. In a PR these labels are also detected by modified files path | | area-<concern> | The bot will detect from the title the area appropriate. ci: adding something new to our ci will result in the label area-CI added to the issue or PR. In a PR these labels are also detected by modified files path. | | kind-bug | The bot will detect this from the conventional commit written title | | kind-enhancement | The bot will detect this from the conventional commit written title | | kind-feature | The bot will detect this from the conventional commit written title | | kind-question | Issue/PR is a question that can be addressed via pointers to documentation or user education | | kind-dependencies | The bot will detect this from the conventional commit written title |","title":"Janssen Triage Process and labels"},{"location":"community/triage/#janssen-triage-process-and-labels","text":"Triage process is used to quickly screen and categorise new issues and PRs. Aim is to determine characteristics of new PRs/issues and take quick actions if possible. Triage process is a contineous process. As new issues/PRs come in, the community initiates discussions, add labels, ask for more details. This process does not wait for triage call or a meeting to be called. Community holds triage calls at a regular cadence. Triage calls are mainly utilised to discuss issue/PR where concensus is not yet reached and to pick up anything which is not yet triaged. It is encouraged to complete triage outside of triage call to improve velocity.","title":"Janssen Triage Process and labels"},{"location":"community/triage/#stages-in-triage-process","text":"Name Description Needs triage When a new issue or PR is created, it is automatically labeled as needs-triage Ready for triage For all issues/PRs with needs-triage label, Maintainers/committers will assign a suitable active community member as owner to start evaluating issue/PR . Owner and community will evaluate merit and characteristics of issue/PR asynchronously and assign approapriate labels . When owner believes that sufficient details have been added and there is concensus, the owner would remove needs-triage label and apply label ready-for-triage . Triaged All issues/PRs with label ready-for-triage will be reviewed by core members of the community who have permission to add triaged label. Reviewer reviews issue/PR to check if the issue/PR is fully triaged and can be added to backlog without discussion on triage call. At this point, label triaged is added and label ready-for-triage is removed. We expect most of the isseus and PRs will be able to follow above path and quickly move out of triage process without waiting for triage call. Issues/PRs which still doesn't have triaged label, or has needs-discussion label, will be discussed during triage call.","title":"Stages in triage process:"},{"location":"community/triage/#labels","text":"Github labels help us annotate issues/PRs with additional data. Janssen community uses labels, as detailed below, to communicate information and help making decisions about issues/PRs.","title":"Labels"},{"location":"community/triage/#communication-labels","text":"These labels communicate status of current triage process for an issue/PR or indicate where community contribution is required. Most of communication labels would be replaced by other labels as triage process progresses and issue enters active development. For example, help wanted label would be removed once issue gets under active development and a community members takes ownership of the issue. Below is the list of labels which fall under this category: Label Indicates That needs-triage issue/PR needs triaging ready-for-triage that sufficient details has been added to the issue/PR in form of labels and is ready for triage review triaged Issue/PR is fully triaged needs-information Indicates that creator needs to add more information to issue/PR in order to be meaningfully triaged. When adding this label, also comment on the issue about what information is needed needs-discussion Indicates that issue needs discussion during triage meeting. When adding this label, also comment on the issue about what is it that demands discussion on this issue good first issue Indicates to the community that this issue suitable for first time contributor help wanted Indicates to the community that this issue has complexity which is suitable for contribution from any external contributor","title":"Communication labels"},{"location":"community/triage/#metadata-labels","text":"These labels enrich issue/PR with metadata that will help during triage process and active development. These labels may not be removed from issue/PR, though value of labels may change as development progresses. For example, effort label may change from effort-3 to effort-8 as we understand issue in more detail. Below is the list of labels in this category: Label Indicates That Details comp-<module> Major Janssen components needing change in order to fix this issue/PR. For example, if this issue/PR would require change in files under fido2 module (under jans/fido2) , then apply comp-jans-fido2 label e.g comp-jans-auth-server , comp-jans-fido2 , area-<concern> Cross-cutting concerns involved in fixing this issue/PR. For example, if changes introduced by this issue/PR will need changes in documentation and need to be mentioned in release notes as well, then apply area-documentation , area-release-notes . area-CI should be applied when changes are required in artifacts relevent to automation, CI build infrastructure or release management process. An example of such artifact would be Github workflow scripts located under .github/workflows Labels available: area-documentation , area-release-notes , area-CI kind-bug Issue/PR is a bug in existing functionality kind-enhancement Issue/PR is an enhancement to an existing functionality kind-feature Issue/PR is new feature request kind-question Issue/PR is a question that can be addressed via pointers to documentation or user education kind-duplicate Issue/PR is a duplicate of existing issue/PR. Original issue should be mentioned in the comments using Duplicate of reply kind-dependencies Fix for Issue/PR pertains to external dependencies effort-1 Relative effort required for completion effort-2 Relative effort required for completion effort-3 Relative effort required for completion effort-5 Relative effort required for completion effort-8 Relative effort required for completion effort-13 Relative effort required for completion effort-21 Relative effort required for completion priority-0 An issue that causes a full outage, breakage, or major function unavailability for everyone, without any known workaround. The issue must be fixed immediately, taking precedence over all other work. Should receive updates at least once per day. priority-1 An issue that significantly impacts a large percentage of users; if there is a workaround it is partial or overly painful. The issue should be resolved before the next release. priority-2 The issue is important to a large percentage of users, with a workaround. Issues that are significantly ugly or painful (especially first-use or install-time issues). Issues with workarounds that would otherwise be P0 or P1. priority-3 An issue that is relevant to core functions, but does not impede progress. Important, but not urgent. priority-4 A relatively minor issue that is not relevant to core functions, or relates only to the attractiveness or pleasantness of use of the system. Good to have but not necessary changes/fixes. priority-5 The team acknowledges the request but (due to any number of reasons) does not plan to work on or accept contributions for this request. The issue remains open for discussion.","title":"Metadata labels"},{"location":"community/triage/#bot-labeling-methodology","text":"The following labels are automatically assigned to Issues and PRs in GitHub following the schema provided in this file . | Label | Method | |---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | comp-<module> | The bot will detect from the title the component between the parentheses. feat(jans-auth-server): detect will result in the label comp-jans-auth-server added to the issue or PR. In a PR these labels are also detected by modified files path | | area-<concern> | The bot will detect from the title the area appropriate. ci: adding something new to our ci will result in the label area-CI added to the issue or PR. In a PR these labels are also detected by modified files path. | | kind-bug | The bot will detect this from the conventional commit written title | | kind-enhancement | The bot will detect this from the conventional commit written title | | kind-feature | The bot will detect this from the conventional commit written title | | kind-question | Issue/PR is a question that can be addressed via pointers to documentation or user education | | kind-dependencies | The bot will detect this from the conventional commit written title |","title":"Bot labeling methodology"},{"location":"developer/","text":"Developer Guides # Documents that help developers in writing code for Janssen server. Code Guidelines Code styles Workspace setup guides","title":"Developer Guides"},{"location":"developer/#developer-guides","text":"Documents that help developers in writing code for Janssen server. Code Guidelines Code styles Workspace setup guides","title":"Developer Guides"},{"location":"img/template/","text":"This file is a placeholder.","title":"Template"},{"location":"interception-script-debug/","text":"Setup # For development the kubernetes setup must be local and accessible to the debug server address. The following steps will walk you trough a setup using Minikube with docker driver, and ksync for syncing the files between local, and the container. The following instructions assume a fresh ubuntu 20.04, however the setup can be done on a different operating systems such as macOS or Windows. System Requirements # The minimum system requirement for running all jans services are 8GB RAM , 4 CPU , and 50GB disk . This can be dropped to 4GB RAM , 4CPU and 20GB disk space if operating with required services auth-server, and LDAP. Setup Minikube # Install Docker 18.09 or higher. For other operating systems follow the appropriate docs . Install minikube , but do not start it yet. Install kubectl . Once Minikube is installed start it with the docker driver. minikube start --driver = docker If not automatically set configure kubectl to use the cluster: kubectl config use-context minikube Enable ingress on minikube minikube addons enable ingress Install Janssen # Install Helm3 Install Janssen helm repo add jans https://janssenproject.github.io/jans-cloud-native/charts kubectl create ns jans helm install jans-auth jans/jans -n jans --set global.lbIp = \" $( minikube ip ) \" --set global.provisioner = \"k8s.io/minikube-hostpath\" --devel Install Ksync # Once Janssen is fully running we want to create an active sync between a local folder, and the folder that will hold the interception scripts inside the auth server container. Create a folder that will hold the interception script inside the auth server container. Place the namespace where jans is installed in the env JANS_NAMESPACE and execute: JANS_NAMESPACE = <jans-namespace> for pod in $( kubectl get pods -n $JANS_NAMESPACE --selector = APP_NAME = auth-server --output = jsonpath ={ .items..metadata.name } ) ; do kubectl exec -ti $pod -n $JANS_NAMESPACE -- mkdir -p /deploy/interception-scripts-ksync done Install ksync curl https://ksync.github.io/gimme-that/gimme.sh | bash Initialize ksync ksync init -n <jans-namespace> Start ksync. ksync watch -n <jans-namespace> & Open a new terminal and create a folder called interception-scripts-ksync mkdir -p $( pwd ) /interception-scripts-ksync Create a spec to start syncing folders between the local system and auth server container. ksync create --selector = APP_NAME = auth-server $( pwd ) /interception-scripts-ksync /deploy/interception-scripts-ksync -n <jans-namespace> Check the status. Also check the terminal where the watch command is running. ksync get 1. Move the interception script to the local folder $(pwd)/interception-scripts-ksync . In the below example we copied the following script as basic.py : # oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text. # Copyright (c) 2016, Janssen # # Author: Yuriy Movchan # from io.jans.service.cdi.util import CdiUtil from io.jans.as.server.security import Identity from io.jans.model.custom.script.type.auth import PersonAuthenticationType from io.jans.as.server.service import AuthenticationService from io.jans.util import StringHelper import java class PersonAuthentication ( PersonAuthenticationType ): def __init__ ( self , currentTimeMillis ): self . currentTimeMillis = currentTimeMillis def init ( self , customScript , configurationAttributes ): print \"Basic. Initialization\" print \"Basic. Initialized successfully\" return True def destroy ( self , configurationAttributes ): print \"Basic. Destroy\" print \"Basic. Destroyed successfully\" return True def getAuthenticationMethodClaims ( self , requestParameters ): return None def getApiVersion ( self ): return 11 def isValidAuthenticationMethod ( self , usageType , configurationAttributes ): return True def getAlternativeAuthenticationMethod ( self , usageType , configurationAttributes ): return None def authenticate ( self , configurationAttributes , requestParameters , step ): authenticationService = CdiUtil . bean ( AuthenticationService ) if ( step == 1 ): print \"Basic. Authenticate for step 1\" identity = CdiUtil . bean ( Identity ) credentials = identity . getCredentials () user_name = credentials . getUsername () user_password = credentials . getPassword () logged_in = False if ( StringHelper . isNotEmptyString ( user_name ) and StringHelper . isNotEmptyString ( user_password )): logged_in = authenticationService . authenticate ( user_name , user_password ) if ( not logged_in ): return False return True else : return False def prepareForStep ( self , configurationAttributes , requestParameters , step ): if ( step == 1 ): print \"Basic. Prepare for Step 1\" return True else : return False def getExtraParametersForStep ( self , configurationAttributes , step ): return None def getCountAuthenticationSteps ( self , configurationAttributes ): return 1 def getPageForStep ( self , configurationAttributes , step ): return \"\" def getNextStep ( self , configurationAttributes , requestParameters , step ): return - 1 def getLogoutExternalUrl ( self , configurationAttributes , requestParameters ): print \"Get external logout URL call\" return None def logout ( self , configurationAttributes , requestParameters ): return True Install an IDE # The IDE can be of choice but must contain PyDev. We chose Liclipse for this demonstration. Once complete, start the PyDev debug server: Open Liclipse Install the jython jar for the interpreter. wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar From the menu: go to File -> Open File and choose the interception script that will be debugged in $(pwd)/interception-scripts-ksync . When opening the Python file for the first time, we need to instruct Liclipse to use a specific interpreter. Follow these steps: Press the \"Manual Config\" button in the dialog box after opening the Python file Open \"PyDev->Interpreters->Jython Interpreters\" Click the \"New...\" button in the right panel. Name it \"Jython\" and specify the interpreter executable that was downloaded previously \"jython-standalone-2.7.2.jar\" Click \"OK\", then confirm the settings by clicking \"OK\" again, then \"Apply and Close\" In the final dialog, confirm the settings by clicking \"OK\" From the menu: go to Window -> Perspective -> Open Perspective -> Other.. -> Debug From the menu: go to Pydev > Start Debug Server . Now the server should have started at port 5678 . Take a note of the ip of the computer running Liclipse and save it for later use. Remember that the auth server pod must be able to communicate with this ip. If you have followed the instructions above and installed minikube on your local computer which is the same computer Liclipse is operating on you should be able to reach it from within the pods. Development & Debugging # Now we are ready to perform script development and debugging. Here is a quick overview: Instruct the auth server to load the script from the file system instead of LDAP. Follow the example scenario below to learn how to do this. Add debug instructions to the script, as specified in the next section Execute the script Enable Remote Debug in Custom Script # After the import section, add: REMOTE_DEBUG = True if REMOTE_DEBUG: try: import sys import pydevd except ImportError as ex: print \"Failed to import pydevd: %s\" % ex raise Add the following lines wherever breakpoints are needed: if REMOTE_DEBUG: pydevd.settrace('localhost', port=5678, stdoutToServer=True, stderrToServer=True) Sample Scenario # Copy the below script to $(pwd)/interception-scripts-ksync/basic.py # oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text. # Copyright (c) 2016, Janssen # # Author: Yuriy Movchan # from io.jans.service.cdi.util import CdiUtil from io.jans.as.server.security import Identity from io.jans.model.custom.script.type.auth import PersonAuthenticationType from io.jans.as.server.service import AuthenticationService from io.jans.util import StringHelper import java class PersonAuthentication ( PersonAuthenticationType ): def __init__ ( self , currentTimeMillis ): self . currentTimeMillis = currentTimeMillis def init ( self , customScript , configurationAttributes ): print \"Basic. Initialization\" print \"Basic. Initialized successfully\" return True def destroy ( self , configurationAttributes ): print \"Basic. Destroy\" print \"Basic. Destroyed successfully\" return True def getAuthenticationMethodClaims ( self , requestParameters ): return None def getApiVersion ( self ): return 11 def isValidAuthenticationMethod ( self , usageType , configurationAttributes ): return True def getAlternativeAuthenticationMethod ( self , usageType , configurationAttributes ): return None def authenticate ( self , configurationAttributes , requestParameters , step ): authenticationService = CdiUtil . bean ( AuthenticationService ) if ( step == 1 ): print \"Basic. Authenticate for step 1\" identity = CdiUtil . bean ( Identity ) credentials = identity . getCredentials () user_name = credentials . getUsername () user_password = credentials . getPassword () logged_in = False if ( StringHelper . isNotEmptyString ( user_name ) and StringHelper . isNotEmptyString ( user_password )): logged_in = authenticationService . authenticate ( user_name , user_password ) if ( not logged_in ): return False return True else : return False def prepareForStep ( self , configurationAttributes , requestParameters , step ): if ( step == 1 ): print \"Basic. Prepare for Step 1\" return True else : return False def getExtraParametersForStep ( self , configurationAttributes , step ): return None def getCountAuthenticationSteps ( self , configurationAttributes ): return 1 def getPageForStep ( self , configurationAttributes , step ): return \"\" def getNextStep ( self , configurationAttributes , requestParameters , step ): return - 1 def getLogoutExternalUrl ( self , configurationAttributes , requestParameters ): print \"Get external logout URL call\" return None def logout ( self , configurationAttributes , requestParameters ): return True Make sure to have an LDAP browser available. We recommend Apache Directory Studio . Port forward the opendj pod. kubectl port-forward jans-opendj-0 -n <jans-namespace> 1636 :1636 --address 0 .0.0.0 1. Create a connection to the ldap browser. The default password will be Test1234# if not changed in the helm install command. Inside the browser navigate to o=jans, ou=scripts . Right click on ou=scripts and click on Quick Search . Inside the pop up box that appears fill Returning Attributes with displayName , and press Apply and Close In the results that appear click on the Dn that has a displayName of basic . Choose to load the script from file instead of ldap. Inside the browser change jansModuleProperty with value {\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"} to {\"value1\":\"location_type\",\"value2\":\"file\",\"description\":\"\"} Specify the Script Path location to the location of the folder inside auth server pods: /deploy/interception-scripts-ksync/basic.py . Right click the upper jansModuleProperty and click New Value . A new entry for jansModuleProperty will be created. Insert the following for the value: {\"value1\":\"location_path\",\"value2\":\"/deploy/interception-scripts-ksync/basic.py\",\"description\":\"\"} Enable the script by settings jansEnabled to true . The following is an example of how the basic script entry should look. Check the following log inside the the auth-server container to verify that auth server loaded the script properly: /opt/jans/jetty/jans-auth/logs/jans-auth_script.log . It should look like this: kubectl exec -ti <auth-server-pod-name> -n <jans-namespace> -- tail -f /opt/jans/jetty/jans-auth/logs/jans-auth_script.log You should find the following in the log: ... (PythonService.java:239) - Basic. Initialization ... (PythonService.java:239) - Basic. Initialized successfully Download the jython jar for the interpreter. wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar From the IDE (Liclipse) menu: navigate to File -> Open File and choose the interception script that will be debugged in $(pwd)/interception-scripts-ksync/basic.py When opening the Python file for the first time, we need to instruct Liclipse to use a specific interpreter. Follow these steps: Press the \"Manual Config\" button in the dialog box after opening the Python file Open \"PyDev->Interpreters->Jython Interpreters\" Click the \"New...\" button in the right panel. Name it \"Jython\" and specify the interpreter executable that was downloaded previously \"jython-standalone-2.7.2.jar\" Click \"OK\", then confirm the settings by clicking \"OK\" again, then \"Apply and Close\" In the final dialog, confirm the settings by clicking \"OK\" Open basic.py in a file editor. After the import section, add the following lines to load the PyDev libraries: REMOTE_DEBUG = True if REMOTE_DEBUG: try: import sys import pydevd except ImportError as ex: print \"Failed to import pydevd: %s\" % ex raise Add this break condition to the first line in the authenticate method. Place the ip of the maching running the ide , here liclipse i.e 192.168.140.2 . if REMOTE_DEBUG: pydevd.settrace ( '<ip-of-machine-running-ide>' , port = 5678 , stdoutToServer = True, stderrToServer = True ) Save basic.py Within one minute, the auth server should load the changed file. Check the following log file again to make sure there are no load errors: /opt/jans/jetty/jans-auth/logs/jans-auth_script.log To check if the script works, update the default authentication method to Basic Authentication. Preform this in the LDAP browser. Navigate to o=jans,ou=configuration . Change the jansAuthMode to basic instead of simple_password_auth . After executing pydevd.settrace the script will transfer execution control to the PyDev server in Liclipse. You can use any debug commands. For example: Step Over (F6), Resume (F8), etc After debugging is finished, resume script execution to transfer execution control back to the auth server.","title":"Index"},{"location":"interception-script-debug/#setup","text":"For development the kubernetes setup must be local and accessible to the debug server address. The following steps will walk you trough a setup using Minikube with docker driver, and ksync for syncing the files between local, and the container. The following instructions assume a fresh ubuntu 20.04, however the setup can be done on a different operating systems such as macOS or Windows.","title":"Setup"},{"location":"interception-script-debug/#system-requirements","text":"The minimum system requirement for running all jans services are 8GB RAM , 4 CPU , and 50GB disk . This can be dropped to 4GB RAM , 4CPU and 20GB disk space if operating with required services auth-server, and LDAP.","title":"System Requirements"},{"location":"interception-script-debug/#setup-minikube","text":"Install Docker 18.09 or higher. For other operating systems follow the appropriate docs . Install minikube , but do not start it yet. Install kubectl . Once Minikube is installed start it with the docker driver. minikube start --driver = docker If not automatically set configure kubectl to use the cluster: kubectl config use-context minikube Enable ingress on minikube minikube addons enable ingress","title":"Setup Minikube"},{"location":"interception-script-debug/#install-janssen","text":"Install Helm3 Install Janssen helm repo add jans https://janssenproject.github.io/jans-cloud-native/charts kubectl create ns jans helm install jans-auth jans/jans -n jans --set global.lbIp = \" $( minikube ip ) \" --set global.provisioner = \"k8s.io/minikube-hostpath\" --devel","title":"Install Janssen"},{"location":"interception-script-debug/#install-ksync","text":"Once Janssen is fully running we want to create an active sync between a local folder, and the folder that will hold the interception scripts inside the auth server container. Create a folder that will hold the interception script inside the auth server container. Place the namespace where jans is installed in the env JANS_NAMESPACE and execute: JANS_NAMESPACE = <jans-namespace> for pod in $( kubectl get pods -n $JANS_NAMESPACE --selector = APP_NAME = auth-server --output = jsonpath ={ .items..metadata.name } ) ; do kubectl exec -ti $pod -n $JANS_NAMESPACE -- mkdir -p /deploy/interception-scripts-ksync done Install ksync curl https://ksync.github.io/gimme-that/gimme.sh | bash Initialize ksync ksync init -n <jans-namespace> Start ksync. ksync watch -n <jans-namespace> & Open a new terminal and create a folder called interception-scripts-ksync mkdir -p $( pwd ) /interception-scripts-ksync Create a spec to start syncing folders between the local system and auth server container. ksync create --selector = APP_NAME = auth-server $( pwd ) /interception-scripts-ksync /deploy/interception-scripts-ksync -n <jans-namespace> Check the status. Also check the terminal where the watch command is running. ksync get 1. Move the interception script to the local folder $(pwd)/interception-scripts-ksync . In the below example we copied the following script as basic.py : # oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text. # Copyright (c) 2016, Janssen # # Author: Yuriy Movchan # from io.jans.service.cdi.util import CdiUtil from io.jans.as.server.security import Identity from io.jans.model.custom.script.type.auth import PersonAuthenticationType from io.jans.as.server.service import AuthenticationService from io.jans.util import StringHelper import java class PersonAuthentication ( PersonAuthenticationType ): def __init__ ( self , currentTimeMillis ): self . currentTimeMillis = currentTimeMillis def init ( self , customScript , configurationAttributes ): print \"Basic. Initialization\" print \"Basic. Initialized successfully\" return True def destroy ( self , configurationAttributes ): print \"Basic. Destroy\" print \"Basic. Destroyed successfully\" return True def getAuthenticationMethodClaims ( self , requestParameters ): return None def getApiVersion ( self ): return 11 def isValidAuthenticationMethod ( self , usageType , configurationAttributes ): return True def getAlternativeAuthenticationMethod ( self , usageType , configurationAttributes ): return None def authenticate ( self , configurationAttributes , requestParameters , step ): authenticationService = CdiUtil . bean ( AuthenticationService ) if ( step == 1 ): print \"Basic. Authenticate for step 1\" identity = CdiUtil . bean ( Identity ) credentials = identity . getCredentials () user_name = credentials . getUsername () user_password = credentials . getPassword () logged_in = False if ( StringHelper . isNotEmptyString ( user_name ) and StringHelper . isNotEmptyString ( user_password )): logged_in = authenticationService . authenticate ( user_name , user_password ) if ( not logged_in ): return False return True else : return False def prepareForStep ( self , configurationAttributes , requestParameters , step ): if ( step == 1 ): print \"Basic. Prepare for Step 1\" return True else : return False def getExtraParametersForStep ( self , configurationAttributes , step ): return None def getCountAuthenticationSteps ( self , configurationAttributes ): return 1 def getPageForStep ( self , configurationAttributes , step ): return \"\" def getNextStep ( self , configurationAttributes , requestParameters , step ): return - 1 def getLogoutExternalUrl ( self , configurationAttributes , requestParameters ): print \"Get external logout URL call\" return None def logout ( self , configurationAttributes , requestParameters ): return True","title":"Install Ksync"},{"location":"interception-script-debug/#install-an-ide","text":"The IDE can be of choice but must contain PyDev. We chose Liclipse for this demonstration. Once complete, start the PyDev debug server: Open Liclipse Install the jython jar for the interpreter. wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar From the menu: go to File -> Open File and choose the interception script that will be debugged in $(pwd)/interception-scripts-ksync . When opening the Python file for the first time, we need to instruct Liclipse to use a specific interpreter. Follow these steps: Press the \"Manual Config\" button in the dialog box after opening the Python file Open \"PyDev->Interpreters->Jython Interpreters\" Click the \"New...\" button in the right panel. Name it \"Jython\" and specify the interpreter executable that was downloaded previously \"jython-standalone-2.7.2.jar\" Click \"OK\", then confirm the settings by clicking \"OK\" again, then \"Apply and Close\" In the final dialog, confirm the settings by clicking \"OK\" From the menu: go to Window -> Perspective -> Open Perspective -> Other.. -> Debug From the menu: go to Pydev > Start Debug Server . Now the server should have started at port 5678 . Take a note of the ip of the computer running Liclipse and save it for later use. Remember that the auth server pod must be able to communicate with this ip. If you have followed the instructions above and installed minikube on your local computer which is the same computer Liclipse is operating on you should be able to reach it from within the pods.","title":"Install an IDE"},{"location":"interception-script-debug/#development-debugging","text":"Now we are ready to perform script development and debugging. Here is a quick overview: Instruct the auth server to load the script from the file system instead of LDAP. Follow the example scenario below to learn how to do this. Add debug instructions to the script, as specified in the next section Execute the script","title":"Development &amp; Debugging"},{"location":"interception-script-debug/#enable-remote-debug-in-custom-script","text":"After the import section, add: REMOTE_DEBUG = True if REMOTE_DEBUG: try: import sys import pydevd except ImportError as ex: print \"Failed to import pydevd: %s\" % ex raise Add the following lines wherever breakpoints are needed: if REMOTE_DEBUG: pydevd.settrace('localhost', port=5678, stdoutToServer=True, stderrToServer=True)","title":"Enable Remote Debug in Custom Script"},{"location":"interception-script-debug/#sample-scenario","text":"Copy the below script to $(pwd)/interception-scripts-ksync/basic.py # oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text. # Copyright (c) 2016, Janssen # # Author: Yuriy Movchan # from io.jans.service.cdi.util import CdiUtil from io.jans.as.server.security import Identity from io.jans.model.custom.script.type.auth import PersonAuthenticationType from io.jans.as.server.service import AuthenticationService from io.jans.util import StringHelper import java class PersonAuthentication ( PersonAuthenticationType ): def __init__ ( self , currentTimeMillis ): self . currentTimeMillis = currentTimeMillis def init ( self , customScript , configurationAttributes ): print \"Basic. Initialization\" print \"Basic. Initialized successfully\" return True def destroy ( self , configurationAttributes ): print \"Basic. Destroy\" print \"Basic. Destroyed successfully\" return True def getAuthenticationMethodClaims ( self , requestParameters ): return None def getApiVersion ( self ): return 11 def isValidAuthenticationMethod ( self , usageType , configurationAttributes ): return True def getAlternativeAuthenticationMethod ( self , usageType , configurationAttributes ): return None def authenticate ( self , configurationAttributes , requestParameters , step ): authenticationService = CdiUtil . bean ( AuthenticationService ) if ( step == 1 ): print \"Basic. Authenticate for step 1\" identity = CdiUtil . bean ( Identity ) credentials = identity . getCredentials () user_name = credentials . getUsername () user_password = credentials . getPassword () logged_in = False if ( StringHelper . isNotEmptyString ( user_name ) and StringHelper . isNotEmptyString ( user_password )): logged_in = authenticationService . authenticate ( user_name , user_password ) if ( not logged_in ): return False return True else : return False def prepareForStep ( self , configurationAttributes , requestParameters , step ): if ( step == 1 ): print \"Basic. Prepare for Step 1\" return True else : return False def getExtraParametersForStep ( self , configurationAttributes , step ): return None def getCountAuthenticationSteps ( self , configurationAttributes ): return 1 def getPageForStep ( self , configurationAttributes , step ): return \"\" def getNextStep ( self , configurationAttributes , requestParameters , step ): return - 1 def getLogoutExternalUrl ( self , configurationAttributes , requestParameters ): print \"Get external logout URL call\" return None def logout ( self , configurationAttributes , requestParameters ): return True Make sure to have an LDAP browser available. We recommend Apache Directory Studio . Port forward the opendj pod. kubectl port-forward jans-opendj-0 -n <jans-namespace> 1636 :1636 --address 0 .0.0.0 1. Create a connection to the ldap browser. The default password will be Test1234# if not changed in the helm install command. Inside the browser navigate to o=jans, ou=scripts . Right click on ou=scripts and click on Quick Search . Inside the pop up box that appears fill Returning Attributes with displayName , and press Apply and Close In the results that appear click on the Dn that has a displayName of basic . Choose to load the script from file instead of ldap. Inside the browser change jansModuleProperty with value {\"value1\":\"location_type\",\"value2\":\"ldap\",\"description\":\"\"} to {\"value1\":\"location_type\",\"value2\":\"file\",\"description\":\"\"} Specify the Script Path location to the location of the folder inside auth server pods: /deploy/interception-scripts-ksync/basic.py . Right click the upper jansModuleProperty and click New Value . A new entry for jansModuleProperty will be created. Insert the following for the value: {\"value1\":\"location_path\",\"value2\":\"/deploy/interception-scripts-ksync/basic.py\",\"description\":\"\"} Enable the script by settings jansEnabled to true . The following is an example of how the basic script entry should look. Check the following log inside the the auth-server container to verify that auth server loaded the script properly: /opt/jans/jetty/jans-auth/logs/jans-auth_script.log . It should look like this: kubectl exec -ti <auth-server-pod-name> -n <jans-namespace> -- tail -f /opt/jans/jetty/jans-auth/logs/jans-auth_script.log You should find the following in the log: ... (PythonService.java:239) - Basic. Initialization ... (PythonService.java:239) - Basic. Initialized successfully Download the jython jar for the interpreter. wget https://repo1.maven.org/maven2/org/python/jython-standalone/2.7.2/jython-standalone-2.7.2.jar From the IDE (Liclipse) menu: navigate to File -> Open File and choose the interception script that will be debugged in $(pwd)/interception-scripts-ksync/basic.py When opening the Python file for the first time, we need to instruct Liclipse to use a specific interpreter. Follow these steps: Press the \"Manual Config\" button in the dialog box after opening the Python file Open \"PyDev->Interpreters->Jython Interpreters\" Click the \"New...\" button in the right panel. Name it \"Jython\" and specify the interpreter executable that was downloaded previously \"jython-standalone-2.7.2.jar\" Click \"OK\", then confirm the settings by clicking \"OK\" again, then \"Apply and Close\" In the final dialog, confirm the settings by clicking \"OK\" Open basic.py in a file editor. After the import section, add the following lines to load the PyDev libraries: REMOTE_DEBUG = True if REMOTE_DEBUG: try: import sys import pydevd except ImportError as ex: print \"Failed to import pydevd: %s\" % ex raise Add this break condition to the first line in the authenticate method. Place the ip of the maching running the ide , here liclipse i.e 192.168.140.2 . if REMOTE_DEBUG: pydevd.settrace ( '<ip-of-machine-running-ide>' , port = 5678 , stdoutToServer = True, stderrToServer = True ) Save basic.py Within one minute, the auth server should load the changed file. Check the following log file again to make sure there are no load errors: /opt/jans/jetty/jans-auth/logs/jans-auth_script.log To check if the script works, update the default authentication method to Basic Authentication. Preform this in the LDAP browser. Navigate to o=jans,ou=configuration . Change the jansAuthMode to basic instead of simple_password_auth . After executing pydevd.settrace the script will transfer execution control to the PyDev server in Liclipse. You can use any debug commands. For example: Step Over (F6), Resume (F8), etc After debugging is finished, resume script execution to transfer execution control back to the auth server.","title":"Sample Scenario"},{"location":"technical/","text":"Technical Documentation # This documentation explains technical design, architecture and interactions of various Janssen modules. Contents: # API Reference Design Consideration and Guidelines REST API Design Caching Testing Deployment Security Scalability and Cloud Infrastructure Technical Documentation Guidelines API Reference # Service REST API Java API Jans Auth Server Swagger Javadoc Jans Client API Swagger Javadoc Jans Config API Swagger Jans Core Javadoc Jans FIDO 2 Swagger Jans SCIM API Swagger Javadoc Design Consideration and Guidelines # This section outlines high-level design principles, styles and design choices that Janssen project follow. REST API Design # Caching # Testing # Deployment # Security # Scalability and Cloud Infrastructure # Technical Documentation Guidelines # Detailed technical documentation for each module should be placed under directory with module's name. For example, technical documentation for jans-mod should be placed under directory docs/technical/jans-mod Each module directory should have a README file that follows Technical Overview Template . Create directories if required under module directory to further arrange documentation Place all the digital assets to support your documentation under assets following these guidelines","title":"Technical Documentation"},{"location":"technical/#technical-documentation","text":"This documentation explains technical design, architecture and interactions of various Janssen modules.","title":"Technical Documentation"},{"location":"technical/#contents","text":"API Reference Design Consideration and Guidelines REST API Design Caching Testing Deployment Security Scalability and Cloud Infrastructure Technical Documentation Guidelines","title":"Contents:"},{"location":"technical/#api-reference","text":"Service REST API Java API Jans Auth Server Swagger Javadoc Jans Client API Swagger Javadoc Jans Config API Swagger Jans Core Javadoc Jans FIDO 2 Swagger Jans SCIM API Swagger Javadoc","title":"API Reference"},{"location":"technical/#design-consideration-and-guidelines","text":"This section outlines high-level design principles, styles and design choices that Janssen project follow.","title":"Design Consideration and Guidelines"},{"location":"technical/#rest-api-design","text":"","title":"REST API Design"},{"location":"technical/#caching","text":"","title":"Caching"},{"location":"technical/#testing","text":"","title":"Testing"},{"location":"technical/#deployment","text":"","title":"Deployment"},{"location":"technical/#security","text":"","title":"Security"},{"location":"technical/#scalability-and-cloud-infrastructure","text":"","title":"Scalability and Cloud Infrastructure"},{"location":"technical/#technical-documentation-guidelines","text":"Detailed technical documentation for each module should be placed under directory with module's name. For example, technical documentation for jans-mod should be placed under directory docs/technical/jans-mod Each module directory should have a README file that follows Technical Overview Template . Create directories if required under module directory to further arrange documentation Place all the digital assets to support your documentation under assets following these guidelines","title":"Technical Documentation Guidelines"},{"location":"technical/technical-overview-template/","text":"# Contents: - Functional Overview - Design Overview - API and Code Reference - Deployment - Data Reference - How to Run Tests - Logging - Security Considerations Functional Overview # Design Overview # API and Code Reference # API Reference Code Reference Deployment # Data Reference # How to Run Tests # Logging # Security Considerations #","title":"<module name>"},{"location":"technical/technical-overview-template/#_1","text":"Contents: - Functional Overview - Design Overview - API and Code Reference - Deployment - Data Reference - How to Run Tests - Logging - Security Considerations","title":""},{"location":"technical/technical-overview-template/#functional-overview","text":"","title":"Functional Overview"},{"location":"technical/technical-overview-template/#design-overview","text":"","title":"Design Overview"},{"location":"technical/technical-overview-template/#api-and-code-reference","text":"API Reference Code Reference","title":"API and Code Reference"},{"location":"technical/technical-overview-template/#deployment","text":"","title":"Deployment"},{"location":"technical/technical-overview-template/#data-reference","text":"","title":"Data Reference"},{"location":"technical/technical-overview-template/#how-to-run-tests","text":"","title":"How to Run Tests"},{"location":"technical/technical-overview-template/#logging","text":"","title":"Logging"},{"location":"technical/technical-overview-template/#security-considerations","text":"","title":"Security Considerations"},{"location":"user/","text":"User Documentation # Documents that help users in implementation, configuring, troubleshooting Janssen server. Use cases guides # How to articles are step-by-step guide to implement various authentication and authorization use cases. - Authentication: Enable authentication using mod-auth-openidc and Apache reverse-proxy","title":"User Documentation"},{"location":"user/#user-documentation","text":"Documents that help users in implementation, configuring, troubleshooting Janssen server.","title":"User Documentation"},{"location":"user/#use-cases-guides","text":"How to articles are step-by-step guide to implement various authentication and authorization use cases. - Authentication: Enable authentication using mod-auth-openidc and Apache reverse-proxy","title":"Use cases guides"},{"location":"user/client-api/","text":"Client API # Overview # OAuth Features # UMA Features # SIOP Features # Swagger # Configuration # Logs # Monitoring # Key Management # SDKs # Java #","title":"Client API"},{"location":"user/client-api/#client-api","text":"","title":"Client API"},{"location":"user/client-api/#overview","text":"","title":"Overview"},{"location":"user/client-api/#oauth-features","text":"","title":"OAuth Features"},{"location":"user/client-api/#uma-features","text":"","title":"UMA Features"},{"location":"user/client-api/#siop-features","text":"","title":"SIOP Features"},{"location":"user/client-api/#swagger","text":"","title":"Swagger"},{"location":"user/client-api/#configuration","text":"","title":"Configuration"},{"location":"user/client-api/#logs","text":"","title":"Logs"},{"location":"user/client-api/#monitoring","text":"","title":"Monitoring"},{"location":"user/client-api/#key-management","text":"","title":"Key Management"},{"location":"user/client-api/#sdks","text":"","title":"SDKs"},{"location":"user/client-api/#java","text":"","title":"Java"},{"location":"user/config-api/","text":"Config API # Overview # Swagger # Configuration # Security # Logs # Monitoring # Calling the Config API with CURL # Calling the Config API with the CLI #","title":"Config API"},{"location":"user/config-api/#config-api","text":"","title":"Config API"},{"location":"user/config-api/#overview","text":"","title":"Overview"},{"location":"user/config-api/#swagger","text":"","title":"Swagger"},{"location":"user/config-api/#configuration","text":"","title":"Configuration"},{"location":"user/config-api/#security","text":"","title":"Security"},{"location":"user/config-api/#logs","text":"","title":"Logs"},{"location":"user/config-api/#monitoring","text":"","title":"Monitoring"},{"location":"user/config-api/#calling-the-config-api-with-curl","text":"","title":"Calling the Config API with CURL"},{"location":"user/config-api/#calling-the-config-api-with-the-cli","text":"","title":"Calling the Config API with the CLI"},{"location":"user/deployment/","text":"Deployment and Planning Guide # Overview # Platform Goal # Use Cases # Components # Kubernetes # VM Cluster # Persistence # Caching # Security Best Practices # Load Balancers # Certificates and Keys # DNS # Multi-Tenancy # Benchmarking # Application Portal # Discovery # Customization / Localization # Timeout Management # Identity Management # Self-Service Password / MFA Portal # Identity Access Governance # Role Based Access Management # Authentication Service Integration # Stepped-Up Authentication / Adaptive Authentication # Delegated User Administration # Passwordless Authentication # Machine-to-Machine Authentication # FAQ #","title":"Deployment and Planning Guide"},{"location":"user/deployment/#deployment-and-planning-guide","text":"","title":"Deployment and Planning Guide"},{"location":"user/deployment/#overview","text":"","title":"Overview"},{"location":"user/deployment/#platform-goal","text":"","title":"Platform Goal"},{"location":"user/deployment/#use-cases","text":"","title":"Use Cases"},{"location":"user/deployment/#components","text":"","title":"Components"},{"location":"user/deployment/#kubernetes","text":"","title":"Kubernetes"},{"location":"user/deployment/#vm-cluster","text":"","title":"VM Cluster"},{"location":"user/deployment/#persistence","text":"","title":"Persistence"},{"location":"user/deployment/#caching","text":"","title":"Caching"},{"location":"user/deployment/#security-best-practices","text":"","title":"Security Best Practices"},{"location":"user/deployment/#load-balancers","text":"","title":"Load Balancers"},{"location":"user/deployment/#certificates-and-keys","text":"","title":"Certificates and Keys"},{"location":"user/deployment/#dns","text":"","title":"DNS"},{"location":"user/deployment/#multi-tenancy","text":"","title":"Multi-Tenancy"},{"location":"user/deployment/#benchmarking","text":"","title":"Benchmarking"},{"location":"user/deployment/#application-portal","text":"","title":"Application Portal"},{"location":"user/deployment/#discovery","text":"","title":"Discovery"},{"location":"user/deployment/#customization-localization","text":"","title":"Customization / Localization"},{"location":"user/deployment/#timeout-management","text":"","title":"Timeout Management"},{"location":"user/deployment/#identity-management","text":"","title":"Identity Management"},{"location":"user/deployment/#self-service-password-mfa-portal","text":"","title":"Self-Service Password / MFA Portal"},{"location":"user/deployment/#identity-access-governance","text":"","title":"Identity Access Governance"},{"location":"user/deployment/#role-based-access-management","text":"","title":"Role Based Access Management"},{"location":"user/deployment/#authentication-service-integration","text":"","title":"Authentication Service Integration"},{"location":"user/deployment/#stepped-up-authentication-adaptive-authentication","text":"","title":"Stepped-Up Authentication / Adaptive Authentication"},{"location":"user/deployment/#delegated-user-administration","text":"","title":"Delegated User Administration"},{"location":"user/deployment/#passwordless-authentication","text":"","title":"Passwordless Authentication"},{"location":"user/deployment/#machine-to-machine-authentication","text":"","title":"Machine-to-Machine Authentication"},{"location":"user/deployment/#faq","text":"","title":"FAQ"},{"location":"user/fido/","text":"FIDO # Overview # Swagger # Configuration # Vendor Metadata Management # Key Management and Rotation # Logs # Monitoring # Support for USB Authenticators # Support for Platform Authenticators # Support for Bluetooth Authenticators # SCIM Extension to Add/Delete Device #","title":"FIDO"},{"location":"user/fido/#fido","text":"","title":"FIDO"},{"location":"user/fido/#overview","text":"","title":"Overview"},{"location":"user/fido/#swagger","text":"","title":"Swagger"},{"location":"user/fido/#configuration","text":"","title":"Configuration"},{"location":"user/fido/#vendor-metadata-management","text":"","title":"Vendor Metadata Management"},{"location":"user/fido/#key-management-and-rotation","text":"","title":"Key Management and Rotation"},{"location":"user/fido/#logs","text":"","title":"Logs"},{"location":"user/fido/#monitoring","text":"","title":"Monitoring"},{"location":"user/fido/#support-for-usb-authenticators","text":"","title":"Support for USB Authenticators"},{"location":"user/fido/#support-for-platform-authenticators","text":"","title":"Support for Platform Authenticators"},{"location":"user/fido/#support-for-bluetooth-authenticators","text":"","title":"Support for Bluetooth Authenticators"},{"location":"user/fido/#scim-extension-to-adddelete-device","text":"","title":"SCIM Extension to Add/Delete Device"},{"location":"user/kubernetes-ops/","text":"Kubernetes Operations Guide # Overview # Logs # Health Check # Restarting Pods # Secret Management # Managing Istio Service Mesh # FAQ #","title":"Kubernetes Operations Guide"},{"location":"user/kubernetes-ops/#kubernetes-operations-guide","text":"","title":"Kubernetes Operations Guide"},{"location":"user/kubernetes-ops/#overview","text":"","title":"Overview"},{"location":"user/kubernetes-ops/#logs","text":"","title":"Logs"},{"location":"user/kubernetes-ops/#health-check","text":"","title":"Health Check"},{"location":"user/kubernetes-ops/#restarting-pods","text":"","title":"Restarting Pods"},{"location":"user/kubernetes-ops/#secret-management","text":"","title":"Secret Management"},{"location":"user/kubernetes-ops/#managing-istio-service-mesh","text":"","title":"Managing Istio Service Mesh"},{"location":"user/kubernetes-ops/#faq","text":"","title":"FAQ"},{"location":"user/scim/","text":"SCIM # Overview # Swagger # Configuration # Logs # Monitoring # OAuth Protection # Security Considerations #","title":"SCIM"},{"location":"user/scim/#scim","text":"","title":"SCIM"},{"location":"user/scim/#overview","text":"","title":"Overview"},{"location":"user/scim/#swagger","text":"","title":"Swagger"},{"location":"user/scim/#configuration","text":"","title":"Configuration"},{"location":"user/scim/#logs","text":"","title":"Logs"},{"location":"user/scim/#monitoring","text":"","title":"Monitoring"},{"location":"user/scim/#oauth-protection","text":"","title":"OAuth Protection"},{"location":"user/scim/#security-considerations","text":"","title":"Security Considerations"},{"location":"user/vm-ops/","text":"VM Operation Guide # Overview # Running Setup # Backup # Logs # Checking Service Status # Restarting Services # Managing Key Rotation # Certificates # Web Services # FAQ #","title":"VM Operation Guide"},{"location":"user/vm-ops/#vm-operation-guide","text":"","title":"VM Operation Guide"},{"location":"user/vm-ops/#overview","text":"","title":"Overview"},{"location":"user/vm-ops/#running-setup","text":"","title":"Running Setup"},{"location":"user/vm-ops/#backup","text":"","title":"Backup"},{"location":"user/vm-ops/#logs","text":"","title":"Logs"},{"location":"user/vm-ops/#checking-service-status","text":"","title":"Checking Service Status"},{"location":"user/vm-ops/#restarting-services","text":"","title":"Restarting Services"},{"location":"user/vm-ops/#managing-key-rotation","text":"","title":"Managing Key Rotation"},{"location":"user/vm-ops/#certificates","text":"","title":"Certificates"},{"location":"user/vm-ops/#web-services","text":"","title":"Web Services"},{"location":"user/vm-ops/#faq","text":"","title":"FAQ"},{"location":"user/auth-server/api-access-control/","text":"API Access Control # Overview # Access Tokens # Client Credential Grant Flow # Using Scopes to Manage Extent of Access # Adding User Claims Into Access Tokens # Software Statements # Using OAutht with API Gateways # Using OPA and access tokens # Swagger / OpenAPI Best Practices for Security #","title":"API Access Control"},{"location":"user/auth-server/api-access-control/#api-access-control","text":"","title":"API Access Control"},{"location":"user/auth-server/api-access-control/#overview","text":"","title":"Overview"},{"location":"user/auth-server/api-access-control/#access-tokens","text":"","title":"Access Tokens"},{"location":"user/auth-server/api-access-control/#client-credential-grant-flow","text":"","title":"Client Credential Grant Flow"},{"location":"user/auth-server/api-access-control/#using-scopes-to-manage-extent-of-access","text":"","title":"Using Scopes to Manage Extent of Access"},{"location":"user/auth-server/api-access-control/#adding-user-claims-into-access-tokens","text":"","title":"Adding User Claims Into Access Tokens"},{"location":"user/auth-server/api-access-control/#software-statements","text":"","title":"Software Statements"},{"location":"user/auth-server/api-access-control/#using-oautht-with-api-gateways","text":"","title":"Using OAutht with API Gateways"},{"location":"user/auth-server/api-access-control/#using-opa-and-access-tokens","text":"","title":"Using OPA and access tokens"},{"location":"user/auth-server/api-access-control/#swagger-openapi-best-practices-for-security","text":"","title":"Swagger / OpenAPI Best Practices for Security"},{"location":"user/auth-server/auth-faq/","text":"This file is a placeholder.","title":"Auth faq"},{"location":"user/auth-server/client-management/","text":"Client Management # Overview # Client Metadata Table # Client Registration # Client Authentication # Access Tokens # Refresh Tokens # Scopes # Redirect URIs # Grant Types # Software Statements # Sector Identifier # PAR # Custom Client Claims #","title":"Client Management"},{"location":"user/auth-server/client-management/#client-management","text":"","title":"Client Management"},{"location":"user/auth-server/client-management/#overview","text":"","title":"Overview"},{"location":"user/auth-server/client-management/#client-metadata-table","text":"","title":"Client Metadata Table"},{"location":"user/auth-server/client-management/#client-registration","text":"","title":"Client Registration"},{"location":"user/auth-server/client-management/#client-authentication","text":"","title":"Client Authentication"},{"location":"user/auth-server/client-management/#access-tokens","text":"","title":"Access Tokens"},{"location":"user/auth-server/client-management/#refresh-tokens","text":"","title":"Refresh Tokens"},{"location":"user/auth-server/client-management/#scopes","text":"","title":"Scopes"},{"location":"user/auth-server/client-management/#redirect-uris","text":"","title":"Redirect URIs"},{"location":"user/auth-server/client-management/#grant-types","text":"","title":"Grant Types"},{"location":"user/auth-server/client-management/#software-statements","text":"","title":"Software Statements"},{"location":"user/auth-server/client-management/#sector-identifier","text":"","title":"Sector Identifier"},{"location":"user/auth-server/client-management/#par","text":"","title":"PAR"},{"location":"user/auth-server/client-management/#custom-client-claims","text":"","title":"Custom Client Claims"},{"location":"user/auth-server/configuration/","text":"Auth Server Configuration # Overview # JSON Properties # External Libraries # JVM Considerations #","title":"Auth Server Configuration"},{"location":"user/auth-server/configuration/#auth-server-configuration","text":"","title":"Auth Server Configuration"},{"location":"user/auth-server/configuration/#overview","text":"","title":"Overview"},{"location":"user/auth-server/configuration/#json-properties","text":"","title":"JSON Properties"},{"location":"user/auth-server/configuration/#external-libraries","text":"","title":"External Libraries"},{"location":"user/auth-server/configuration/#jvm-considerations","text":"","title":"JVM Considerations"},{"location":"user/auth-server/crypto/","text":"Auth Server Cryptography Guide # Overview # Supported Cryptographic Algorithms # Local PKCS Key Storage # Key Rotation # Jans Eleven HSM API # How To Validate JWTs #","title":"Auth Server Cryptography Guide"},{"location":"user/auth-server/crypto/#auth-server-cryptography-guide","text":"","title":"Auth Server Cryptography Guide"},{"location":"user/auth-server/crypto/#overview","text":"","title":"Overview"},{"location":"user/auth-server/crypto/#supported-cryptographic-algorithms","text":"","title":"Supported Cryptographic Algorithms"},{"location":"user/auth-server/crypto/#local-pkcs-key-storage","text":"","title":"Local PKCS Key Storage"},{"location":"user/auth-server/crypto/#key-rotation","text":"","title":"Key Rotation"},{"location":"user/auth-server/crypto/#jans-eleven-hsm-api","text":"","title":"Jans Eleven HSM API"},{"location":"user/auth-server/crypto/#how-to-validate-jwts","text":"","title":"How To Validate JWTs"},{"location":"user/auth-server/fapi/","text":"FAPI # Overview # Open Banking Requirements / Federation Operator Role # Client Registration # MTLS # FAPI Authentication Request #","title":"FAPI"},{"location":"user/auth-server/fapi/#fapi","text":"","title":"FAPI"},{"location":"user/auth-server/fapi/#overview","text":"","title":"Overview"},{"location":"user/auth-server/fapi/#open-banking-requirements-federation-operator-role","text":"","title":"Open Banking Requirements / Federation Operator Role"},{"location":"user/auth-server/fapi/#client-registration","text":"","title":"Client Registration"},{"location":"user/auth-server/fapi/#mtls","text":"","title":"MTLS"},{"location":"user/auth-server/fapi/#fapi-authentication-request","text":"","title":"FAPI Authentication Request"},{"location":"user/auth-server/health/","text":"This file is a placeholder.","title":"Health"},{"location":"user/auth-server/internationalization/","text":"Internationalization # Overview # Web Pages # Client Configuration # Scope Descriptions #","title":"Internationalization"},{"location":"user/auth-server/internationalization/#internationalization","text":"","title":"Internationalization"},{"location":"user/auth-server/internationalization/#overview","text":"","title":"Overview"},{"location":"user/auth-server/internationalization/#web-pages","text":"","title":"Web Pages"},{"location":"user/auth-server/internationalization/#client-configuration","text":"","title":"Client Configuration"},{"location":"user/auth-server/internationalization/#scope-descriptions","text":"","title":"Scope Descriptions"},{"location":"user/auth-server/logging/","text":"Logging # Overview # Standard Logs # Log Levels # Audit Logs # Custom Logs # log4j2 Configuration #","title":"Logging"},{"location":"user/auth-server/logging/#logging","text":"","title":"Logging"},{"location":"user/auth-server/logging/#overview","text":"","title":"Overview"},{"location":"user/auth-server/logging/#standard-logs","text":"","title":"Standard Logs"},{"location":"user/auth-server/logging/#log-levels","text":"","title":"Log Levels"},{"location":"user/auth-server/logging/#audit-logs","text":"","title":"Audit Logs"},{"location":"user/auth-server/logging/#custom-logs","text":"","title":"Custom Logs"},{"location":"user/auth-server/logging/#log4j2-configuration","text":"","title":"log4j2 Configuration"},{"location":"user/auth-server/logout/","text":"Logout # Overview # Front Channel # Back Channel # Customizing Logout # Forcing Logout on Browser Exit # WebCM-based Logout with Chrome #","title":"Logout"},{"location":"user/auth-server/logout/#logout","text":"","title":"Logout"},{"location":"user/auth-server/logout/#overview","text":"","title":"Overview"},{"location":"user/auth-server/logout/#front-channel","text":"","title":"Front Channel"},{"location":"user/auth-server/logout/#back-channel","text":"","title":"Back Channel"},{"location":"user/auth-server/logout/#customizing-logout","text":"","title":"Customizing Logout"},{"location":"user/auth-server/logout/#forcing-logout-on-browser-exit","text":"","title":"Forcing Logout on Browser Exit"},{"location":"user/auth-server/logout/#webcm-based-logout-with-chrome","text":"","title":"WebCM-based Logout with Chrome"},{"location":"user/auth-server/openid-metadata/","text":"This file is a placeholder.","title":"Openid metadata"},{"location":"user/auth-server/reporting/","text":"Reporting and Metrics # Overview # Monthly Active Users # Failed / Successful Authentication # Tokens Issued # Counts of Users / Clients #","title":"Reporting and Metrics"},{"location":"user/auth-server/reporting/#reporting-and-metrics","text":"","title":"Reporting and Metrics"},{"location":"user/auth-server/reporting/#overview","text":"","title":"Overview"},{"location":"user/auth-server/reporting/#monthly-active-users","text":"","title":"Monthly Active Users"},{"location":"user/auth-server/reporting/#failed-successful-authentication","text":"","title":"Failed / Successful Authentication"},{"location":"user/auth-server/reporting/#tokens-issued","text":"","title":"Tokens Issued"},{"location":"user/auth-server/reporting/#counts-of-users-clients","text":"","title":"Counts of Users / Clients"},{"location":"user/auth-server/uma/","text":"UMA # Overview # When to Use UMA # Non-browser UMA Flows # Interacting with Users via the Claims Gathering Endpoint #","title":"UMA"},{"location":"user/auth-server/uma/#uma","text":"","title":"UMA"},{"location":"user/auth-server/uma/#overview","text":"","title":"Overview"},{"location":"user/auth-server/uma/#when-to-use-uma","text":"","title":"When to Use UMA"},{"location":"user/auth-server/uma/#non-browser-uma-flows","text":"","title":"Non-browser UMA Flows"},{"location":"user/auth-server/uma/#interacting-with-users-via-the-claims-gathering-endpoint","text":"","title":"Interacting with Users via the Claims Gathering Endpoint"},{"location":"user/auth-server/user-authn/","text":"User Authentication # Overview # Pairwise / Public Subject Identifiers # id_token # ACRs # Request Objects # Prompt Parameter / Login Hint # Consent # Customize # List / Delete Consents for Person # User Info Endpoint # Passwordless # Forcing Reauthentication # Web Applications # Mobile Applications # Single Page Applications # Impersonation # Non-web Devices # Returning Group / Role User Information # Social Login # Facebook # Google # Apple # Registration # Password Expiration # Disabling or Temporarily Locking Accounts # Forgot Password # Email # SMS # Multiple Sessions in One Browser # Multiple Sessions in Multiple Browsers / Devices # Adaptive Authentication # PKCE # CIBA # JARM # DPoP # MTLS # Custom Request Parameters # SIOP #","title":"User Authentication"},{"location":"user/auth-server/user-authn/#user-authentication","text":"","title":"User Authentication"},{"location":"user/auth-server/user-authn/#overview","text":"","title":"Overview"},{"location":"user/auth-server/user-authn/#pairwise-public-subject-identifiers","text":"","title":"Pairwise / Public Subject Identifiers"},{"location":"user/auth-server/user-authn/#id_token","text":"","title":"id_token"},{"location":"user/auth-server/user-authn/#acrs","text":"","title":"ACRs"},{"location":"user/auth-server/user-authn/#request-objects","text":"","title":"Request Objects"},{"location":"user/auth-server/user-authn/#prompt-parameter-login-hint","text":"","title":"Prompt Parameter / Login Hint"},{"location":"user/auth-server/user-authn/#consent","text":"","title":"Consent"},{"location":"user/auth-server/user-authn/#customize","text":"","title":"Customize"},{"location":"user/auth-server/user-authn/#list-delete-consents-for-person","text":"","title":"List / Delete Consents for Person"},{"location":"user/auth-server/user-authn/#user-info-endpoint","text":"","title":"User Info Endpoint"},{"location":"user/auth-server/user-authn/#passwordless","text":"","title":"Passwordless"},{"location":"user/auth-server/user-authn/#forcing-reauthentication","text":"","title":"Forcing Reauthentication"},{"location":"user/auth-server/user-authn/#web-applications","text":"","title":"Web Applications"},{"location":"user/auth-server/user-authn/#mobile-applications","text":"","title":"Mobile Applications"},{"location":"user/auth-server/user-authn/#single-page-applications","text":"","title":"Single Page Applications"},{"location":"user/auth-server/user-authn/#impersonation","text":"","title":"Impersonation"},{"location":"user/auth-server/user-authn/#non-web-devices","text":"","title":"Non-web Devices"},{"location":"user/auth-server/user-authn/#returning-group-role-user-information","text":"","title":"Returning Group / Role User Information"},{"location":"user/auth-server/user-authn/#social-login","text":"","title":"Social Login"},{"location":"user/auth-server/user-authn/#facebook","text":"","title":"Facebook"},{"location":"user/auth-server/user-authn/#google","text":"","title":"Google"},{"location":"user/auth-server/user-authn/#apple","text":"","title":"Apple"},{"location":"user/auth-server/user-authn/#registration","text":"","title":"Registration"},{"location":"user/auth-server/user-authn/#password-expiration","text":"","title":"Password Expiration"},{"location":"user/auth-server/user-authn/#disabling-or-temporarily-locking-accounts","text":"","title":"Disabling or Temporarily Locking Accounts"},{"location":"user/auth-server/user-authn/#forgot-password","text":"","title":"Forgot Password"},{"location":"user/auth-server/user-authn/#email","text":"","title":"Email"},{"location":"user/auth-server/user-authn/#sms","text":"","title":"SMS"},{"location":"user/auth-server/user-authn/#multiple-sessions-in-one-browser","text":"","title":"Multiple Sessions in One Browser"},{"location":"user/auth-server/user-authn/#multiple-sessions-in-multiple-browsers-devices","text":"","title":"Multiple Sessions in Multiple Browsers / Devices"},{"location":"user/auth-server/user-authn/#adaptive-authentication","text":"","title":"Adaptive Authentication"},{"location":"user/auth-server/user-authn/#pkce","text":"","title":"PKCE"},{"location":"user/auth-server/user-authn/#ciba","text":"","title":"CIBA"},{"location":"user/auth-server/user-authn/#jarm","text":"","title":"JARM"},{"location":"user/auth-server/user-authn/#dpop","text":"","title":"DPoP"},{"location":"user/auth-server/user-authn/#mtls","text":"","title":"MTLS"},{"location":"user/auth-server/user-authn/#custom-request-parameters","text":"","title":"Custom Request Parameters"},{"location":"user/auth-server/user-authn/#siop","text":"","title":"SIOP"},{"location":"user/auth-server/user-claims/","text":"User Claims # Overview # Built-in Claims # Adding Custom Claims # Claim Uniqueness / Validation #","title":"User Claims"},{"location":"user/auth-server/user-claims/#user-claims","text":"","title":"User Claims"},{"location":"user/auth-server/user-claims/#overview","text":"","title":"Overview"},{"location":"user/auth-server/user-claims/#built-in-claims","text":"","title":"Built-in Claims"},{"location":"user/auth-server/user-claims/#adding-custom-claims","text":"","title":"Adding Custom Claims"},{"location":"user/auth-server/user-claims/#claim-uniqueness-validation","text":"","title":"Claim Uniqueness / Validation"},{"location":"user/authn-catalog/1kosmos/","text":"This file is a placeholder.","title":"1kosmos"},{"location":"user/authn-catalog/account-logout/","text":"This file is a placeholder.","title":"Account logout"},{"location":"user/authn-catalog/allowed-countries/","text":"This file is a placeholder.","title":"Allowed countries"},{"location":"user/authn-catalog/bioid/","text":"This file is a placeholder.","title":"Bioid"},{"location":"user/authn-catalog/casa/","text":"This file is a placeholder.","title":"Casa"},{"location":"user/authn-catalog/deduce/","text":"This file is a placeholder.","title":"Deduce"},{"location":"user/authn-catalog/duo/","text":"This file is a placeholder.","title":"Duo"},{"location":"user/authn-catalog/email/","text":"This file is a placeholder.","title":"Email"},{"location":"user/authn-catalog/ethereum/","text":"This file is a placeholder.","title":"Ethereum"},{"location":"user/authn-catalog/fido/","text":"This file is a placeholder.","title":"Fido"},{"location":"user/authn-catalog/forgot-password/","text":"This file is a placeholder.","title":"Forgot password"},{"location":"user/authn-catalog/iwa/","text":"This file is a placeholder.","title":"Iwa"},{"location":"user/authn-catalog/otp/","text":"This file is a placeholder.","title":"Otp"},{"location":"user/authn-catalog/pingid/","text":"This file is a placeholder.","title":"Pingid"},{"location":"user/authn-catalog/privacyidea/","text":"This file is a placeholder.","title":"Privacyidea"},{"location":"user/authn-catalog/radius/","text":"This file is a placeholder.","title":"Radius"},{"location":"user/authn-catalog/registration/","text":"This file is a placeholder.","title":"Registration"},{"location":"user/authn-catalog/scan/","text":"This file is a placeholder.","title":"Scan"},{"location":"user/authn-catalog/smpp/","text":"This file is a placeholder.","title":"Smpp"},{"location":"user/authn-catalog/stytch/","text":"This file is a placeholder.","title":"Stytch"},{"location":"user/authn-catalog/super-gluu/","text":"This file is a placeholder.","title":"Super gluu"},{"location":"user/authn-catalog/transmit/","text":"This file is a placeholder.","title":"Transmit"},{"location":"user/authn-catalog/twilio/","text":"This file is a placeholder.","title":"Twilio"},{"location":"user/authn-catalog/vericlouds/","text":"This file is a placeholder.","title":"Vericlouds"},{"location":"user/authn-catalog/whispeak/","text":"This file is a placeholder.","title":"Whispeak"},{"location":"user/authn-catalog/x509/","text":"This file is a placeholder.","title":"X509"},{"location":"user/developer/customization/","text":"Customizing Janssen # Overview # Message Files # Error Pages # Login / Consent Pages #","title":"Customizing Janssen"},{"location":"user/developer/customization/#customizing-janssen","text":"","title":"Customizing Janssen"},{"location":"user/developer/customization/#overview","text":"","title":"Overview"},{"location":"user/developer/customization/#message-files","text":"","title":"Message Files"},{"location":"user/developer/customization/#error-pages","text":"","title":"Error Pages"},{"location":"user/developer/customization/#login-consent-pages","text":"","title":"Login / Consent Pages"},{"location":"user/developer/developer-faq/","text":"This file is a placeholder.","title":"Developer faq"},{"location":"user/developer/interception-scripts/","text":"Interception Scripts # Overview # Testing and Debugging Scripts # Web Flows # Set Variables in Context #","title":"Interception Scripts"},{"location":"user/developer/interception-scripts/#interception-scripts","text":"","title":"Interception Scripts"},{"location":"user/developer/interception-scripts/#overview","text":"","title":"Overview"},{"location":"user/developer/interception-scripts/#testing-and-debugging-scripts","text":"","title":"Testing and Debugging Scripts"},{"location":"user/developer/interception-scripts/#web-flows","text":"","title":"Web Flows"},{"location":"user/developer/interception-scripts/#set-variables-in-context","text":"","title":"Set Variables in Context"},{"location":"user/developer/scripts/application-session/","text":"This file is a placeholder.","title":"Application session"},{"location":"user/developer/scripts/ciba/","text":"This file is a placeholder.","title":"Ciba"},{"location":"user/developer/scripts/client-registration/","text":"This file is a placeholder.","title":"Client registration"},{"location":"user/developer/scripts/config-api/","text":"This file is a placeholder.","title":"Config api"},{"location":"user/developer/scripts/consent-gathering/","text":"This file is a placeholder.","title":"Consent gathering"},{"location":"user/developer/scripts/dynamic-scope/","text":"This file is a placeholder.","title":"Dynamic scope"},{"location":"user/developer/scripts/end-session/","text":"This file is a placeholder.","title":"End session"},{"location":"user/developer/scripts/id-generator/","text":"This file is a placeholder.","title":"Id generator"},{"location":"user/developer/scripts/id-token/","text":"This file is a placeholder.","title":"Id token"},{"location":"user/developer/scripts/introspection/","text":"This file is a placeholder.","title":"Introspection"},{"location":"user/developer/scripts/openid-config/","text":"This file is a placeholder.","title":"Openid config"},{"location":"user/developer/scripts/persistence/","text":"This file is a placeholder.","title":"Persistence"},{"location":"user/developer/scripts/person-authentication/","text":"This file is a placeholder.","title":"Person authentication"},{"location":"user/developer/scripts/post-authentication/","text":"This file is a placeholder.","title":"Post authentication"},{"location":"user/developer/scripts/revoke-token/","text":"This file is a placeholder.","title":"Revoke token"},{"location":"user/developer/scripts/rpoc/","text":"This file is a placeholder.","title":"Rpoc"},{"location":"user/developer/scripts/scim/","text":"This file is a placeholder.","title":"Scim"},{"location":"user/developer/scripts/spontaneous-scope/","text":"This file is a placeholder.","title":"Spontaneous scope"},{"location":"user/developer/scripts/uma-claims-jwt/","text":"This file is a placeholder.","title":"Uma claims jwt"},{"location":"user/developer/scripts/uma-claims-web/","text":"This file is a placeholder.","title":"Uma claims web"},{"location":"user/developer/scripts/uma-rpt/","text":"This file is a placeholder.","title":"Uma rpt"},{"location":"user/developer/scripts/update-token/","text":"This file is a placeholder.","title":"Update token"},{"location":"user/how-to/add-custom-ldifs/","text":"Contents: # Overview Using Kubernetes? Overview # This guide describes steps to load custom work to Janssen IDP. Hardware configuration # For development and POC purposes, 4GB RAM and 10 GB HDD should be available for Janssen Server. For PROD deployments, please refer installation guide . Prerequisites # Existing Janssen server installed Kubernetes # If you are using Kubernetes please follow this section. You may create several ldif files denoting each type such as custom_attributes.ldif , custom_clients.ldif ..etc. Refer to the built-in ldifs for examples. Create your custom ldif files. These can be clients, attributes, scopes or whatever custom work you need. The example will be adding a custom attribute and we will call this file custom_attributes.ldif . dn: inum=C9B1,ou=attributes,o=jans description: Maiden name of the End-User.Note that in some cultures, people can have multiple given names;all can be present, with the names being separated by space characters. displayName: Maiden Name inum: C9B1 jansAttrEditTyp: user jansAttrEditTyp: admin jansAttrName: givenName jansAttrOrigin: jansPerson jansAttrTyp: string jansAttrViewTyp: user jansAttrViewTyp: admin jansClaimName: maiden_name jansSAML1URI: urn:mace:dir:attribute-def:maidenName jansSAML2URI: urn:oid:2.5.4.42 jansStatus: active objectClass: top objectClass: jansAttr urn: urn:mace:dir:attribute-def:maidenName Create a configmap or secret depending on the if the ldif holds and secret data such as a client secret. Here, we will be creating a configmap. kubectl create cm custom-attributes -n <namespace-of-jans> -f custom_attributes.ldif # kubectl create cm custom-attributes -n jans -f custom_attributes.ldif # using a secret # kubectl create secret generic custom-attributes -n jans -f custom_attributes.ldif Mount the created configmap or secret inside your values.yaml persistence : volumes : - name : custom-attributes configMap : name : custom-attributes #- name: custom-attributes # secret: # secretName: custom-attributes # -- Configure any additional volumesMounts that need to be attached to the containers volumeMounts : - mountPath : \"/app/custom_ldif/custom_attributes.ldif\" name : custom-attributes subPath : custom_attributes.ldif Run helm upgrade to activate the persistence job. helm upgrade <release-name> janssen/janssen -f values.yaml -n <jans-namespace> Your custom work should be loaded to your persistence. This also persists any changes going forward as you upgrade.","title":"Add custom ldifs"},{"location":"user/how-to/add-custom-ldifs/#contents","text":"Overview Using Kubernetes?","title":"Contents:"},{"location":"user/how-to/add-custom-ldifs/#overview","text":"This guide describes steps to load custom work to Janssen IDP.","title":"Overview"},{"location":"user/how-to/add-custom-ldifs/#hardware-configuration","text":"For development and POC purposes, 4GB RAM and 10 GB HDD should be available for Janssen Server. For PROD deployments, please refer installation guide .","title":"Hardware configuration"},{"location":"user/how-to/add-custom-ldifs/#prerequisites","text":"Existing Janssen server installed","title":"Prerequisites"},{"location":"user/how-to/add-custom-ldifs/#kubernetes","text":"If you are using Kubernetes please follow this section. You may create several ldif files denoting each type such as custom_attributes.ldif , custom_clients.ldif ..etc. Refer to the built-in ldifs for examples. Create your custom ldif files. These can be clients, attributes, scopes or whatever custom work you need. The example will be adding a custom attribute and we will call this file custom_attributes.ldif . dn: inum=C9B1,ou=attributes,o=jans description: Maiden name of the End-User.Note that in some cultures, people can have multiple given names;all can be present, with the names being separated by space characters. displayName: Maiden Name inum: C9B1 jansAttrEditTyp: user jansAttrEditTyp: admin jansAttrName: givenName jansAttrOrigin: jansPerson jansAttrTyp: string jansAttrViewTyp: user jansAttrViewTyp: admin jansClaimName: maiden_name jansSAML1URI: urn:mace:dir:attribute-def:maidenName jansSAML2URI: urn:oid:2.5.4.42 jansStatus: active objectClass: top objectClass: jansAttr urn: urn:mace:dir:attribute-def:maidenName Create a configmap or secret depending on the if the ldif holds and secret data such as a client secret. Here, we will be creating a configmap. kubectl create cm custom-attributes -n <namespace-of-jans> -f custom_attributes.ldif # kubectl create cm custom-attributes -n jans -f custom_attributes.ldif # using a secret # kubectl create secret generic custom-attributes -n jans -f custom_attributes.ldif Mount the created configmap or secret inside your values.yaml persistence : volumes : - name : custom-attributes configMap : name : custom-attributes #- name: custom-attributes # secret: # secretName: custom-attributes # -- Configure any additional volumesMounts that need to be attached to the containers volumeMounts : - mountPath : \"/app/custom_ldif/custom_attributes.ldif\" name : custom-attributes subPath : custom_attributes.ldif Run helm upgrade to activate the persistence job. helm upgrade <release-name> janssen/janssen -f values.yaml -n <jans-namespace> Your custom work should be loaded to your persistence. This also persists any changes going forward as you upgrade.","title":"Kubernetes"},{"location":"user/how-to/authn-with-apache-reverse-proxy/","text":"Contents: # Overview Component Setup Configure Janssen server Configure Protected Resource Configure mod-auth-openidc Test Complete Flow Overview # This guide describes steps to enable authentication for web applications using the Janssen server which is an OpenID Connect Provider (OP). In the process of setting up a working environment, we will see how to use the command-line tool jans-cli to manually register an OpenID Connect client with the Janssen server. We will also see how to configure Relying Party to communicate with the Janssen server. Hardware configuration # For development and POC purposes, 4GB RAM and 10 GB HDD should be available for Janssen Server. For PROD deployments, please refer installation guide . Prerequisites # Installed Apache reverse proxy that is SSL enabled Installed Janssen server. Refer to Janssen Installation Guide for instructions. Component Setup # In this setup, we have four important components. - Protected resource is a resource that we need to protect using authentication. A web application for example. - User workstation is from where the user will use a browser(i.e user agent) to access the protected resource - Apache reverse proxy with mod_auth_openidc is our reverse proxy server and relying party. - Reverse Proxy : In our setup protected resources will be accessible through the proxy's FQDN https://test.apache.rp.io . For simplicity, we will use a CGI script as a protected resource and host it on the Apache proxy itself. In a typical production setup, protected resources are usually hosted on a separate server. - Relying Party : We will use Apache module mod_auth_openidc to provide relying party(RP) functionality. RP implements authentication flows from OpenID Connect specification. For each incoming request, RP ensures that the request is authenticated. If the request is not pre-authenticated, then RP will coordinate with Janssen server to integrate authentication. - Janssen server is our open-id connect provider (OP). We will assume that the Janssen server is accessible at FQDN https://janssen.op.io/ Configure Janssen server # In this section, we will register a new OpenID Connect client on Janssen server. In our setup, the relying party (Apache with mod_auth-openidc) is the OIDC client. There are two ways you can register OIDC client with Janssen server. 1. Manual Client Registration 2. Dynamic Client Registration (DCR) Here we will use manual client registration. To register a new OpenID connect client on the Janssen server, we will use jans-cli tool provided by the Janssen server. jans-cli has a menu-driven interface that makes it easy to configure the Janssen server. Here we will use the menu-driven approach to register a new client. To further understand how to use menu-driven approach and get complete list of supported command-line operations, refer to jans-cli documentation . Run the command below on Janssen server to enter interactive mode. Note: jans-cli has to be authenticated and authorized with the respective Janssen server. If jans-cli is being executed for the first time or if there is no valid access token available, then running the command below will initiate device authentication and authorization flow. In that case, follow the steps for jans-cli authorization to continue running the command. /opt/jans/jans-cli/config-cli.py Running above command will bring up main menu as shown in sample below: To register a new OpenID Connect client, select OAuth OpenID Connect - Clients option ( 16 in above sample). Selecting an appropriate option will bring up related sub-menu. From sub-menu, select option for Create new OpenId connect client . Upon selecting this option, CLI will prompt for inputs required to register a new OpenID connect client. Provide inputs for the following properties: displayName: <name-of-choice> application Type: web includeClaimsInIdToken [false]: Populate optional fields? y clientSecret: <secret-of-your-choice> subjectType: public tokenEndpointAuthMethod: client_secret_basic redirectUris: https://test.apache.rp.io/callback scopes: email_,openid_,profile responseTypes: code grantTypes: authorization_code Once values for all the above properties are provided, input c at the prompt to instruct jans-cli to create schema using inputs provided till now. At this time, jans-cli will show the schema(JSON) that will be used to create a new OpenID Connect client on Janssen server. Verify that schema has captured all the provided inputs correctly. Now next step is for jans-cli to post this JSON schema to Janssen server to actually register new client. To do this, input y on the prompt. If the client is successfully registered then we will receive JSON data back. This data describes newly registered client. Some of these values from this JSON response, like inum and clientSecret , will be required when we configure mod_auth_openidc as a client. So keep this reponse JSON handy. See a sample of JSON response below: { \"dn\": \"inum=165bdf95-f15e-44f0-bdd7-cdac71fda8e0,ou=clients,o=jans\", \"inum\": \"165bdf95-f15e-44f0-bdd7-cdac71fda8e0\", \"displayName\": \"dm\", \"clientSecret\": \"a9894ba8-eb01-4a26-a69d-026f10a49272\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"dm\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": null, \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Configure protected resource # As mentioned under component setup , our protected resource will be hosted on Apache reverse proxy itself. It is a simple Python based cgi script that will print request header information and can be accessed through https://test.apache.rp.io/cgi-bin/printHeaders.py . Execute the steps below on Apache host to set up the protected resource: Create script file printHeaders.py vi /usr/lib/cgi-bin/printHeaders.py with content as below #!/usr/bin/python3 import os d = os.environ k = d.keys() print \"Content-type: text/html\\n\\n\" print \"<HTML><HEAD><TITLE>printHeaders.cgi</TITLE></Head><BODY>\" print \"<h1>Environment Variables</H1>\" for item in k: print \"<p><B>%s</B>: %s </p>\" % (item, d[item]) print \"</BODY></HTML>\" Add Apache cgi module to enable execution of CGI a2enmod cgi Change permissions for CGI script so that it can be executed by Apache chown www-data:www-data /usr/lib/cgi-bin/printHeaders.py chmod ug+x /usr/lib/cgi-bin/printHeaders.py At this point, printHeaders.py should be accessible at https://test.apache.rp.io/cgi-bin/printHeaders.py without requiring any authentication. Configure mod-auth-openidc # Install mod-auth-openidc # On Apache reverse proxy host, add mod-auth-openidc using commands below apt-get install libapache2-mod-auth-openidc a2enmod auth_openidc service apache2 restart Configure mod-auth-openidc # Open /etc/apache2/sites-available/default-ssl.conf Add mod-auth-openidc configuration parameters given below for virtual host _default_:443 . Find more configuration options for mod-auth-openidc here . This configuration will enable authentication for any resource under / context root. OIDCProviderMetadataURL https://janssen.op.io/jans-auth/.well-known/openid-configuration OIDCClientID <inum-as-received-in-client-registration-response> OIDCClientSecret <as-provided-in-client-registration-request> OIDCResponseType code OIDCProviderTokenEndpointAuth client_secret_basic OIDCSSLValidateServer Off OIDCProviderIssuer https://janssen.op.io OIDCRedirectURI https://test.apache.rp.io/callback OIDCCryptoPassphrase <crypto-passphrase-of-choice> <Location \"/\"> Require valid-user AuthType openid-connect </Location> Restart Apache service. service apache2 restart Test Complete Flow # Accessing https://test.apache.rp.io/cgi-bin/printHeaders.py should redirect to Janssen authentication screen.","title":"Authn with apache reverse proxy"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#contents","text":"Overview Component Setup Configure Janssen server Configure Protected Resource Configure mod-auth-openidc Test Complete Flow","title":"Contents:"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#overview","text":"This guide describes steps to enable authentication for web applications using the Janssen server which is an OpenID Connect Provider (OP). In the process of setting up a working environment, we will see how to use the command-line tool jans-cli to manually register an OpenID Connect client with the Janssen server. We will also see how to configure Relying Party to communicate with the Janssen server.","title":"Overview"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#hardware-configuration","text":"For development and POC purposes, 4GB RAM and 10 GB HDD should be available for Janssen Server. For PROD deployments, please refer installation guide .","title":"Hardware configuration"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#prerequisites","text":"Installed Apache reverse proxy that is SSL enabled Installed Janssen server. Refer to Janssen Installation Guide for instructions.","title":"Prerequisites"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#component-setup","text":"In this setup, we have four important components. - Protected resource is a resource that we need to protect using authentication. A web application for example. - User workstation is from where the user will use a browser(i.e user agent) to access the protected resource - Apache reverse proxy with mod_auth_openidc is our reverse proxy server and relying party. - Reverse Proxy : In our setup protected resources will be accessible through the proxy's FQDN https://test.apache.rp.io . For simplicity, we will use a CGI script as a protected resource and host it on the Apache proxy itself. In a typical production setup, protected resources are usually hosted on a separate server. - Relying Party : We will use Apache module mod_auth_openidc to provide relying party(RP) functionality. RP implements authentication flows from OpenID Connect specification. For each incoming request, RP ensures that the request is authenticated. If the request is not pre-authenticated, then RP will coordinate with Janssen server to integrate authentication. - Janssen server is our open-id connect provider (OP). We will assume that the Janssen server is accessible at FQDN https://janssen.op.io/","title":"Component Setup"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#configure-janssen-server","text":"In this section, we will register a new OpenID Connect client on Janssen server. In our setup, the relying party (Apache with mod_auth-openidc) is the OIDC client. There are two ways you can register OIDC client with Janssen server. 1. Manual Client Registration 2. Dynamic Client Registration (DCR) Here we will use manual client registration. To register a new OpenID connect client on the Janssen server, we will use jans-cli tool provided by the Janssen server. jans-cli has a menu-driven interface that makes it easy to configure the Janssen server. Here we will use the menu-driven approach to register a new client. To further understand how to use menu-driven approach and get complete list of supported command-line operations, refer to jans-cli documentation . Run the command below on Janssen server to enter interactive mode. Note: jans-cli has to be authenticated and authorized with the respective Janssen server. If jans-cli is being executed for the first time or if there is no valid access token available, then running the command below will initiate device authentication and authorization flow. In that case, follow the steps for jans-cli authorization to continue running the command. /opt/jans/jans-cli/config-cli.py Running above command will bring up main menu as shown in sample below: To register a new OpenID Connect client, select OAuth OpenID Connect - Clients option ( 16 in above sample). Selecting an appropriate option will bring up related sub-menu. From sub-menu, select option for Create new OpenId connect client . Upon selecting this option, CLI will prompt for inputs required to register a new OpenID connect client. Provide inputs for the following properties: displayName: <name-of-choice> application Type: web includeClaimsInIdToken [false]: Populate optional fields? y clientSecret: <secret-of-your-choice> subjectType: public tokenEndpointAuthMethod: client_secret_basic redirectUris: https://test.apache.rp.io/callback scopes: email_,openid_,profile responseTypes: code grantTypes: authorization_code Once values for all the above properties are provided, input c at the prompt to instruct jans-cli to create schema using inputs provided till now. At this time, jans-cli will show the schema(JSON) that will be used to create a new OpenID Connect client on Janssen server. Verify that schema has captured all the provided inputs correctly. Now next step is for jans-cli to post this JSON schema to Janssen server to actually register new client. To do this, input y on the prompt. If the client is successfully registered then we will receive JSON data back. This data describes newly registered client. Some of these values from this JSON response, like inum and clientSecret , will be required when we configure mod_auth_openidc as a client. So keep this reponse JSON handy. See a sample of JSON response below: { \"dn\": \"inum=165bdf95-f15e-44f0-bdd7-cdac71fda8e0,ou=clients,o=jans\", \"inum\": \"165bdf95-f15e-44f0-bdd7-cdac71fda8e0\", \"displayName\": \"dm\", \"clientSecret\": \"a9894ba8-eb01-4a26-a69d-026f10a49272\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"dm\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": null, \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }","title":"Configure Janssen server"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#configure-protected-resource","text":"As mentioned under component setup , our protected resource will be hosted on Apache reverse proxy itself. It is a simple Python based cgi script that will print request header information and can be accessed through https://test.apache.rp.io/cgi-bin/printHeaders.py . Execute the steps below on Apache host to set up the protected resource: Create script file printHeaders.py vi /usr/lib/cgi-bin/printHeaders.py with content as below #!/usr/bin/python3 import os d = os.environ k = d.keys() print \"Content-type: text/html\\n\\n\" print \"<HTML><HEAD><TITLE>printHeaders.cgi</TITLE></Head><BODY>\" print \"<h1>Environment Variables</H1>\" for item in k: print \"<p><B>%s</B>: %s </p>\" % (item, d[item]) print \"</BODY></HTML>\" Add Apache cgi module to enable execution of CGI a2enmod cgi Change permissions for CGI script so that it can be executed by Apache chown www-data:www-data /usr/lib/cgi-bin/printHeaders.py chmod ug+x /usr/lib/cgi-bin/printHeaders.py At this point, printHeaders.py should be accessible at https://test.apache.rp.io/cgi-bin/printHeaders.py without requiring any authentication.","title":"Configure protected resource"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#configure-mod-auth-openidc","text":"","title":"Configure mod-auth-openidc"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#install-mod-auth-openidc","text":"On Apache reverse proxy host, add mod-auth-openidc using commands below apt-get install libapache2-mod-auth-openidc a2enmod auth_openidc service apache2 restart","title":"Install mod-auth-openidc"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#configure-mod-auth-openidc_1","text":"Open /etc/apache2/sites-available/default-ssl.conf Add mod-auth-openidc configuration parameters given below for virtual host _default_:443 . Find more configuration options for mod-auth-openidc here . This configuration will enable authentication for any resource under / context root. OIDCProviderMetadataURL https://janssen.op.io/jans-auth/.well-known/openid-configuration OIDCClientID <inum-as-received-in-client-registration-response> OIDCClientSecret <as-provided-in-client-registration-request> OIDCResponseType code OIDCProviderTokenEndpointAuth client_secret_basic OIDCSSLValidateServer Off OIDCProviderIssuer https://janssen.op.io OIDCRedirectURI https://test.apache.rp.io/callback OIDCCryptoPassphrase <crypto-passphrase-of-choice> <Location \"/\"> Require valid-user AuthType openid-connect </Location> Restart Apache service. service apache2 restart","title":"Configure mod-auth-openidc"},{"location":"user/how-to/authn-with-apache-reverse-proxy/#test-complete-flow","text":"Accessing https://test.apache.rp.io/cgi-bin/printHeaders.py should redirect to Janssen authentication screen.","title":"Test Complete Flow"},{"location":"user/install/cors/","text":"This file is a placeholder.","title":"Cors"},{"location":"user/install/install-faq/","text":"This file is a placeholder.","title":"Install faq"},{"location":"user/install/setup/","text":"This file is a placeholder.","title":"Setup"},{"location":"user/install/kubernetes-install/k8/","text":"This file is a placeholder.","title":"K8"},{"location":"user/install/kubernetes-install/rancher/","text":"This file is a placeholder.","title":"Rancher"},{"location":"user/install/vm-install/dynamic-download/","text":"This file is a placeholder.","title":"Dynamic download"},{"location":"user/install/vm-install/fips/","text":"This file is a placeholder.","title":"Fips"},{"location":"user/install/vm-install/rhel/","text":"This file is a placeholder.","title":"Rhel"},{"location":"user/install/vm-install/suse/","text":"This file is a placeholder.","title":"Suse"},{"location":"user/install/vm-install/ubuntu/","text":"This file is a placeholder.","title":"Ubuntu"},{"location":"user/integration/casa/","text":"This file is a placeholder.","title":"Casa"},{"location":"user/integration/custom-web/","text":"Custom Web Development # Protecting a Website with mod_aut_openidc # AppAuth IOS # AppAuth Android # AppAuth JS # Node # React # React Native # Angular # Spring Boot # Django # Flask # ASP .Net #","title":"Custom Web Development"},{"location":"user/integration/custom-web/#custom-web-development","text":"","title":"Custom Web Development"},{"location":"user/integration/custom-web/#protecting-a-website-with-mod_aut_openidc","text":"","title":"Protecting a Website with mod_aut_openidc"},{"location":"user/integration/custom-web/#appauth-ios","text":"","title":"AppAuth IOS"},{"location":"user/integration/custom-web/#appauth-android","text":"","title":"AppAuth Android"},{"location":"user/integration/custom-web/#appauth-js","text":"","title":"AppAuth JS"},{"location":"user/integration/custom-web/#node","text":"","title":"Node"},{"location":"user/integration/custom-web/#react","text":"","title":"React"},{"location":"user/integration/custom-web/#react-native","text":"","title":"React Native"},{"location":"user/integration/custom-web/#angular","text":"","title":"Angular"},{"location":"user/integration/custom-web/#spring-boot","text":"","title":"Spring Boot"},{"location":"user/integration/custom-web/#django","text":"","title":"Django"},{"location":"user/integration/custom-web/#flask","text":"","title":"Flask"},{"location":"user/integration/custom-web/#asp-net","text":"","title":"ASP .Net"},{"location":"user/integration/integration-faq/","text":"This file is a placeholder.","title":"Integration faq"},{"location":"user/integration/passport-js/","text":"This file is a placeholder.","title":"Passport js"},{"location":"user/integration/saml/","text":"This file is a placeholder.","title":"Saml"},{"location":"user/integration/apps/drupal/","text":"This file is a placeholder.","title":"Drupal"},{"location":"user/integration/apps/magento/","text":"This file is a placeholder.","title":"Magento"},{"location":"user/integration/apps/moodle/","text":"This file is a placeholder.","title":"Moodle"},{"location":"user/integration/apps/nextcloud/","text":"This file is a placeholder.","title":"Nextcloud"},{"location":"user/integration/apps/rancher/","text":"This file is a placeholder.","title":"Rancher"},{"location":"user/integration/apps/rocket/","text":"This file is a placeholder.","title":"Rocket"},{"location":"user/integration/apps/teleport/","text":"This file is a placeholder.","title":"Teleport"},{"location":"user/integration/apps/wordpress/","text":"This file is a placeholder.","title":"Wordpress"},{"location":"user/integration/saas/aws/","text":"This file is a placeholder.","title":"Aws"},{"location":"user/integration/saas/docusign/","text":"This file is a placeholder.","title":"Docusign"},{"location":"user/integration/saas/google/","text":"This file is a placeholder.","title":"Google"},{"location":"user/integration/saas/jira/","text":"This file is a placeholder.","title":"Jira"},{"location":"user/integration/saas/office365/","text":"This file is a placeholder.","title":"Office365"},{"location":"user/integration/saas/salesforce/","text":"This file is a placeholder.","title":"Salesforce"},{"location":"user/integration/saas/webex/","text":"This file is a placeholder.","title":"Webex"},{"location":"user/integration/saas/zoom/","text":"This file is a placeholder.","title":"Zoom"},{"location":"user/reference/cli/","text":"Command Line Interface (CLI) # Overview # Interactive Mode # Script Mode # Device Flow #","title":"Command Line Interface (CLI)"},{"location":"user/reference/cli/#command-line-interface-cli","text":"","title":"Command Line Interface (CLI)"},{"location":"user/reference/cli/#overview","text":"","title":"Overview"},{"location":"user/reference/cli/#interactive-mode","text":"","title":"Interactive Mode"},{"location":"user/reference/cli/#script-mode","text":"","title":"Script Mode"},{"location":"user/reference/cli/#device-flow","text":"","title":"Device Flow"},{"location":"user/reference/json/","text":"JSON Configuration Properties # Overview # Auth Server # FIDO # SCIM #","title":"JSON Configuration Properties"},{"location":"user/reference/json/#json-configuration-properties","text":"","title":"JSON Configuration Properties"},{"location":"user/reference/json/#overview","text":"","title":"Overview"},{"location":"user/reference/json/#auth-server","text":"","title":"Auth Server"},{"location":"user/reference/json/#fido","text":"","title":"FIDO"},{"location":"user/reference/json/#scim","text":"","title":"SCIM"},{"location":"user/reference/kubernetes-reference/","text":"Kubernetes Reference Guide # Overview # Config and Secret Keys # Image Configuration Properties # Config Init # Auth Server # Config API # FIDO # SCIM # Client API # Persistence # Gluu Cert Manager # Gluu OpenDJ #","title":"Kubernetes Reference Guide"},{"location":"user/reference/kubernetes-reference/#kubernetes-reference-guide","text":"","title":"Kubernetes Reference Guide"},{"location":"user/reference/kubernetes-reference/#overview","text":"","title":"Overview"},{"location":"user/reference/kubernetes-reference/#config-and-secret-keys","text":"","title":"Config and Secret Keys"},{"location":"user/reference/kubernetes-reference/#image-configuration-properties","text":"","title":"Image Configuration Properties"},{"location":"user/reference/kubernetes-reference/#config-init","text":"","title":"Config Init"},{"location":"user/reference/kubernetes-reference/#auth-server","text":"","title":"Auth Server"},{"location":"user/reference/kubernetes-reference/#config-api","text":"","title":"Config API"},{"location":"user/reference/kubernetes-reference/#fido","text":"","title":"FIDO"},{"location":"user/reference/kubernetes-reference/#scim","text":"","title":"SCIM"},{"location":"user/reference/kubernetes-reference/#client-api","text":"","title":"Client API"},{"location":"user/reference/kubernetes-reference/#persistence","text":"","title":"Persistence"},{"location":"user/reference/kubernetes-reference/#gluu-cert-manager","text":"","title":"Gluu Cert Manager"},{"location":"user/reference/kubernetes-reference/#gluu-opendj","text":"","title":"Gluu OpenDJ"},{"location":"user/reference/openapi/","text":"This file is a placeholder.","title":"Openapi"},{"location":"user/reference/schema/couchbase-schema/","text":"This file is a placeholder.","title":"Couchbase schema"},{"location":"user/reference/schema/ldap-schema/","text":"This file is a placeholder.","title":"Ldap schema"},{"location":"user/reference/schema/mysql-schema/","text":"This file is a placeholder.","title":"Mysql schema"},{"location":"user/reference/schema/spanner-schema/","text":"This file is a placeholder.","title":"Spanner schema"},{"location":"user/upgrade/kubernetes-upgrade/","text":"Kubernetes Deployment Upgrade # Overview # Version Upgrade Paths # Backup # Rollback #","title":"Kubernetes Deployment Upgrade"},{"location":"user/upgrade/kubernetes-upgrade/#kubernetes-deployment-upgrade","text":"","title":"Kubernetes Deployment Upgrade"},{"location":"user/upgrade/kubernetes-upgrade/#overview","text":"","title":"Overview"},{"location":"user/upgrade/kubernetes-upgrade/#version-upgrade-paths","text":"","title":"Version Upgrade Paths"},{"location":"user/upgrade/kubernetes-upgrade/#backup","text":"","title":"Backup"},{"location":"user/upgrade/kubernetes-upgrade/#rollback","text":"","title":"Rollback"},{"location":"user/upgrade/upgrade-faq/","text":"This file is a placeholder.","title":"Upgrade faq"},{"location":"user/upgrade/vm-upgrade/","text":"VM Deployment Upgrade # Overview # Version Upgrade Path # Backup # Rollback #","title":"VM Deployment Upgrade"},{"location":"user/upgrade/vm-upgrade/#vm-deployment-upgrade","text":"","title":"VM Deployment Upgrade"},{"location":"user/upgrade/vm-upgrade/#overview","text":"","title":"Overview"},{"location":"user/upgrade/vm-upgrade/#version-upgrade-path","text":"","title":"Version Upgrade Path"},{"location":"user/upgrade/vm-upgrade/#backup","text":"","title":"Backup"},{"location":"user/upgrade/vm-upgrade/#rollback","text":"","title":"Rollback"},{"location":"user/using-jans-cli/","text":"Janssen CLI # jans-cli module is a command line interface for configuring the Janssen software, providing both interactive and simple single line options for configuration. This module interacts with Janssen server via RESTful configuration APIs that server exposes. Using these REST APIs, jans-cli allows configuration of authorization server and its major modules for FIDO2, SCIM, OpenID Connect etc. jans-cli offers two modes in which it can be used. Command-line and interactive mode. Command-line mode : With command-line mode you can run a single command with all the required inputs to perform the operation you want. A sample command-line may look like below: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5 Interactive mode : Interactive mode is a terminal based menu-driven mode where user can select intended action from available options and also provide input parameters required for that action. Documentation Index # Command Line Interface # Basic Information Attribute Default Authentication Cache Configuration Authorization Server Configuration FIDO2 Configuration Logging Management JSON Web Key (JWK) LDAP Configuration Couchbase Configuration OAuth Scope Management UMA Management OpenID Connect Client Configuration SMTP Configuration Custom Scripts SCIM Management User Resources Group Management Menu-Driven Interactive Mode # Basic Information Attribute Default Authentication Method Cache Configuration Authorization Server Configuration FIDO2 Configuration Logging Management JWK Configuration LDAP Configuration Couchbase Configuration OAuth Scope Management OpenID Connect Client Configuration SMTP Configuration UMA Management Custom Scripts SCIM Management User Resources Group Resources","title":"Janssen CLI"},{"location":"user/using-jans-cli/#janssen-cli","text":"jans-cli module is a command line interface for configuring the Janssen software, providing both interactive and simple single line options for configuration. This module interacts with Janssen server via RESTful configuration APIs that server exposes. Using these REST APIs, jans-cli allows configuration of authorization server and its major modules for FIDO2, SCIM, OpenID Connect etc. jans-cli offers two modes in which it can be used. Command-line and interactive mode. Command-line mode : With command-line mode you can run a single command with all the required inputs to perform the operation you want. A sample command-line may look like below: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5 Interactive mode : Interactive mode is a terminal based menu-driven mode where user can select intended action from available options and also provide input parameters required for that action.","title":"Janssen CLI"},{"location":"user/using-jans-cli/#documentation-index","text":"","title":"Documentation Index"},{"location":"user/using-jans-cli/#command-line-interface","text":"Basic Information Attribute Default Authentication Cache Configuration Authorization Server Configuration FIDO2 Configuration Logging Management JSON Web Key (JWK) LDAP Configuration Couchbase Configuration OAuth Scope Management UMA Management OpenID Connect Client Configuration SMTP Configuration Custom Scripts SCIM Management User Resources Group Management","title":"Command Line Interface"},{"location":"user/using-jans-cli/#menu-driven-interactive-mode","text":"Basic Information Attribute Default Authentication Method Cache Configuration Authorization Server Configuration FIDO2 Configuration Logging Management JWK Configuration LDAP Configuration Couchbase Configuration OAuth Scope Management OpenID Connect Client Configuration SMTP Configuration UMA Management Custom Scripts SCIM Management User Resources Group Resources","title":"Menu-Driven Interactive Mode"},{"location":"user/using-jans-cli/cli-attribute/","text":"Attribute # First thing, let's get the information for Attribute : /opt/jans/jans-cli/config-cli.py --info Attribute In return, we get a list of Operations ID as below: Operation ID: get-attributes Description: Gets all attributes. Optionally max-size of the result, attribute status and pattern can be provided. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] status: Status of the attribute [string] Operation ID: post-attributes Description: Adds a new attribute. Schema: /components/schemas/GluuAttribute Operation ID: put-attributes Description: Updates an existing attribute. Schema: /components/schemas/GluuAttribute Operation ID: get-attributes-by-inum Description: Gets an attribute based on inum. url-suffix: inum Operation ID: delete-attributes-by-inum Description: Deletes an attribute based on inum. url-suffix: inum Operation ID: patch-attributes-by-inum Description: Partially modify a GluuAttribute. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest We have discussed here about each of this operations ID with few examples to understand how these really works. Table of Contents # Attribute Get Attributes Creating an Attribute Updating an Attribute Get Attribute by inum Delete Attributes Patch Attributes Get Attributes # Prerequisite: Know how to use the Janssen CLI in command-line mode As we know, Attributes are individual pieces of user data, like uid or email , that are required by applications in order to identify a user and grant access to protect resources. The user attributes that are available in your Janssen Server can be found by using this operation-ID. If we look at the description below: Operation ID: get-attributes Description: Gets all attributes. Optionally max-size of the result, attribute status and pattern can be provided. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] status: Status of the attribute [string] To get all the attributes without any arguments, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes To get attributes with passing the arguments, let's retrieve randomly limit:5: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5 It will return any 5 attributes randomly: Getting access token for scope https://jans.io/oauth/config/attributes.readonly Calling with params limit=5 [ { \"dn\": \"inum=B4B0,ou=attributes,o=jans\", \"inum\": \"B4B0\", \"selected\": false, \"name\": \"givenName\", \"displayName\": \"First Name\", \"description\": \"Given name(s) or first name(s) of the End-User.Note that in some cultures, people can have multiple given names;all can be present, with the names being separated by space characters.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"given_name\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:givenName\", \"saml2Uri\": \"urn:oid:2.5.4.42\", \"urn\": \"urn:mace:dir:attribute-def:givenName\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=29DA,ou=attributes,o=jans\", \"inum\": \"29DA\", \"selected\": false, \"name\": \"inum\", \"displayName\": \"Inum\", \"description\": \"XRI i-number, persistent non-reassignable identifier\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": null, \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"inum\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:inum\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.117\", \"urn\": \"urn:jans:dir:attribute-def:inum\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=B52A,ou=attributes,o=jans\", \"inum\": \"B52A\", \"selected\": false, \"name\": \"jansPrefUsrName\", \"displayName\": \"Preferred Username\", \"description\": \"A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"preferred_username\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:preferredUsername\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.320\", \"urn\": \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/preferred_username\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=64A0,ou=attributes,o=jans\", \"inum\": \"64A0\", \"selected\": false, \"name\": \"profile\", \"displayName\": \"Profile URL\", \"description\": \"URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"profile\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:profile\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.321\", \"urn\": \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/profile\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=42E0,ou=attributes,o=jans\", \"inum\": \"42E0\", \"selected\": false, \"name\": \"uid\", \"displayName\": \"Username\", \"description\": \"A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"user_name\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:uid\", \"saml2Uri\": \"urn:oid:0.9.2342.19200300.100.1.1\", \"urn\": \"urn:mace:dir:attribute-def:uid\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null } ] To get attributes with pattern & status : /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5,pattern:profile,status:ACTIVE In return, we get a list of attribute that are matched with the given pattern and status : Getting access token for scope https : //jans.io/oauth/config/attributes.readonly Calling with params limit = 5&pattern=profile&status=ACTIVE [ { \"dn\" : \"inum=EC3A,ou=attributes,o=jans\", \"inum\" : \"EC3A\", \"selected\" : false, \"name\" : \"picture\", \"displayName\" : \"Picture URL\", \"description\" : \"URL of the End-User's profile picture\", \"dataType\" : \"STRING\", \"status\" : \"ACTIVE\", \"lifetime\" : null, \"sourceAttribute\" : null, \"salt\" : null, \"nameIdType\" : null, \"origin\" : \"jansPerson\", \"editType\" : [ \"USER\", \"ADMIN\" ], \"viewType\" : [ \"USER\", \"ADMIN\" ], \"usageType\" : null, \"claimName\" : \"picture\", \"seeAlso\" : null, \"saml1Uri\" : \"urn:mace:dir:attribute-def:picture\", \"saml2Uri\" : \"urn:oid:1.3.6.1.4.1.48710.1.3.322\", \"urn\" : \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/picture\", \"scimCustomAttr\" : null, \"oxMultiValuedAttribute\" : false, \"custom\" : false, \"requred\" : false, \"attributeValidation\" : null, \"tooltip\" : null }, { \"dn\" : \"inum=64A0,ou=attributes,o=jans\", \"inum\" : \"64A0\", \"selected\" : false, \"name\" : \"profile\", \"displayName\" : \"Profile URL\", \"description\" : \"URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.\", \"dataType\" : \"STRING\", \"status\" : \"ACTIVE\", \"lifetime\" : null, \"sourceAttribute\" : null, \"salt\" : null, \"nameIdType\" : null, \"origin\" : \"jansPerson\", \"editType\" : [ \"USER\", \"ADMIN\" ], \"viewType\" : [ \"USER\", \"ADMIN\" ], \"usageType\" : null, \"claimName\" : \"profile\", \"seeAlso\" : null, \"saml1Uri\" : \"urn:mace:dir:attribute-def:profile\", \"saml2Uri\" : \"urn:oid:1.3.6.1.4.1.48710.1.3.321\", \"urn\" : \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/profile\", \"scimCustomAttr\" : null, \"oxMultiValuedAttribute\" : false, \"custom\" : false, \"requred\" : false, \"attributeValidation\" : null, \"tooltip\" : null } ] Creating an Attribute # To create SSO for certain applications, you may need to add custom attributes to your Janssen Server. Custom attributes can be added by using this operation-ID. It has a schema file where it's defined: the properties it needs to be filled to create a new custom attribute. Operation ID: post-attributes Description: Adds a new attribute. Schema: /components/schemas/GluuAttribute Before adding a new attribute, let's get sample schema : /opt/jans/jans-cli/config-cli.py --schema /components/schemas/GluuAttribute > /tmp/attribute.json It will return as below: { \"dn\": null, \"inum\": null, \"selected\": true, \"name\": \"name, displayName, birthdate, email\", \"displayName\": \"string\", \"description\": \"string\", \"dataType\": \"STRING\", \"status\": \"REGISTER\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [], \"viewType\": \"array\", \"usageType\": [], \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": true, \"oxMultiValuedAttribute\": true, \"custom\": true, \"requred\": true, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } Modify it to update attribute name , display name , view type : nano /tmp/attribute.json Now, let's add this attribute using post-attributes : /opt/jans/jans-cli/config-cli.py --operation-id post-attributes --data /tmp/attribute.json It will create a new attribute into the Attribute list with updated inum & dn : Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=256135af-56eb-43f3-9583-d7e9fc75c672,ou=attributes,o=jans\", \"inum\": \"256135af-56eb-43f3-9583-d7e9fc75c672\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"test Attribute\", \"description\": \"testing post-attributes\", \"dataType\": \"CERTIFICATE\", \"status\": \"REGISTER\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": null, \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } Updating an Attribute # This operation-id can be used to update an existing attribute information. The Janssen Server administrator can make changes to attributes, such as changing their status to active/inactive by using this operation-ID. Let's look at the schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/GluuAttribute > /tmp/attrib.json You must see the similar schema while performed in post-attributes operation. To update an existing attribute, we have to ensure following properties in the schema file. In our case, I have modified the schema file as below: { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": true, \"name\": \"testAttribute\", \"display_name\": \"testAttribute\", \"description\": \"testing put-attribute\", \"data_type\": \"STRING\", \"status\": \"ACTIVE\", \"edit_type\": [\"ADMIN\", \"OWNER\"], \"view_type\": [\"ADMIN\", \"OWNER\", \"USER\"] } Now if we run the below command line: /opt/jans/jans-cli/config-cli.py --operation-id put-attributes --data /tmp/attrb.json Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"testAttribute\", \"description\": \"testing put-attribute\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"OWNER\" ], \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null } It just replace the previous value with new one. Get Attribute by inum # As we know, There are a lot of attributes available in the Janssen Server including custom attributes as well. You may want to know details information for a single attribute uniquely identified by inum . Getting an attribute information by using its inum is pretty simple. /opt/jans/jans-cli/config-cli.py --operation-id get-attributes-by-inum --url-suffix inum:b691f2ab-a7db-4725-b85b-9961575b441f It will show all details information of the selected Attribute. Getting access token for scope https://jans.io/oauth/config/attributes.readonly { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"testAttribute\", \"description\": \"testing put-attribute\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"OWNER\" ], \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null } Delete Attributes # For any reason, If it needs to delete any attribute, you can do that simply using its inum value. See below example, just change the inum value with one that you want to delete. /opt/jans/jans-cli/config-cli.py --operation-id delete-attributes-by-inum --url-suffix inum:b691f2ab-a7db-4725-b85b-9961575b441f Patch Attributes # This operation can also used for updating an existing attribute by using its inum value. Operation ID: patch-attributes-by-inum Description: Partially modify a GluuAttribute. url-suffix: inum Schema: Array of /components/schemas/PatchRequest If we look at the description, we see that there is a schema file. Let's get the schema file with below command: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch.json # cat /tmp/patch.json { \"op\": \"add\", \"path\": \"string\", \"value\": {} } Let's modify this schema file to change the status of an attribute as below: In the above image, added two tasks. To know more about how we can modify this schema file to perform a specific task, follow this link: patch-request-schema Let's update an attribute by its inum value. In our case, inum : 6EEB. Before patching the selected attribute, you can check its properties using get-attributes-by-inum operation. Before patching the attribute, its properties are: { \"dn\": \"inum=6EEB,ou=attributes,o=jans\", \"inum\": \"6EEB\", \"selected\": false, \"name\": \"l\", \"displayName\": \"City\", \"description\": \"City\", \"dataType\": \"STRING\", \"status\": \"INACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansCustomPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"locality\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:l\", \"saml2Uri\": \"urn:oid:2.5.4.7\", \"urn\": \"urn:mace:dir:attribute-def:l\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null } According to the schema file, There should be two changes, status and jansHideOnDiscovery . Let's perform the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-attributes-by-inum --url-suffix inum:6EEB --data /tmp/patch.json The updated attribute looks like: Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=6EEB,ou=attributes,o=jans\", \"inum\": \"6EEB\", \"selected\": false, \"name\": \"l\", \"displayName\": \"City\", \"description\": \"City\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansCustomPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"locality\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:l\", \"saml2Uri\": \"urn:oid:2.5.4.7\", \"urn\": \"urn:mace:dir:attribute-def:l\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": true } As you see, there are two changes.","title":"Attribute"},{"location":"user/using-jans-cli/cli-attribute/#attribute","text":"First thing, let's get the information for Attribute : /opt/jans/jans-cli/config-cli.py --info Attribute In return, we get a list of Operations ID as below: Operation ID: get-attributes Description: Gets all attributes. Optionally max-size of the result, attribute status and pattern can be provided. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] status: Status of the attribute [string] Operation ID: post-attributes Description: Adds a new attribute. Schema: /components/schemas/GluuAttribute Operation ID: put-attributes Description: Updates an existing attribute. Schema: /components/schemas/GluuAttribute Operation ID: get-attributes-by-inum Description: Gets an attribute based on inum. url-suffix: inum Operation ID: delete-attributes-by-inum Description: Deletes an attribute based on inum. url-suffix: inum Operation ID: patch-attributes-by-inum Description: Partially modify a GluuAttribute. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest We have discussed here about each of this operations ID with few examples to understand how these really works.","title":"Attribute"},{"location":"user/using-jans-cli/cli-attribute/#table-of-contents","text":"Attribute Get Attributes Creating an Attribute Updating an Attribute Get Attribute by inum Delete Attributes Patch Attributes","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-attribute/#get-attributes","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode As we know, Attributes are individual pieces of user data, like uid or email , that are required by applications in order to identify a user and grant access to protect resources. The user attributes that are available in your Janssen Server can be found by using this operation-ID. If we look at the description below: Operation ID: get-attributes Description: Gets all attributes. Optionally max-size of the result, attribute status and pattern can be provided. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] status: Status of the attribute [string] To get all the attributes without any arguments, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes To get attributes with passing the arguments, let's retrieve randomly limit:5: /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5 It will return any 5 attributes randomly: Getting access token for scope https://jans.io/oauth/config/attributes.readonly Calling with params limit=5 [ { \"dn\": \"inum=B4B0,ou=attributes,o=jans\", \"inum\": \"B4B0\", \"selected\": false, \"name\": \"givenName\", \"displayName\": \"First Name\", \"description\": \"Given name(s) or first name(s) of the End-User.Note that in some cultures, people can have multiple given names;all can be present, with the names being separated by space characters.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"given_name\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:givenName\", \"saml2Uri\": \"urn:oid:2.5.4.42\", \"urn\": \"urn:mace:dir:attribute-def:givenName\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=29DA,ou=attributes,o=jans\", \"inum\": \"29DA\", \"selected\": false, \"name\": \"inum\", \"displayName\": \"Inum\", \"description\": \"XRI i-number, persistent non-reassignable identifier\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": null, \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"inum\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:inum\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.117\", \"urn\": \"urn:jans:dir:attribute-def:inum\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=B52A,ou=attributes,o=jans\", \"inum\": \"B52A\", \"selected\": false, \"name\": \"jansPrefUsrName\", \"displayName\": \"Preferred Username\", \"description\": \"A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"preferred_username\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:preferredUsername\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.320\", \"urn\": \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/preferred_username\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=64A0,ou=attributes,o=jans\", \"inum\": \"64A0\", \"selected\": false, \"name\": \"profile\", \"displayName\": \"Profile URL\", \"description\": \"URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"profile\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:profile\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.321\", \"urn\": \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/profile\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null }, { \"dn\": \"inum=42E0,ou=attributes,o=jans\", \"inum\": \"42E0\", \"selected\": false, \"name\": \"uid\", \"displayName\": \"Username\", \"description\": \"A domain issued and managed identifier for the person.Subject - Identifier for the End-User at the Issuer.\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"user_name\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:uid\", \"saml2Uri\": \"urn:oid:0.9.2342.19200300.100.1.1\", \"urn\": \"urn:mace:dir:attribute-def:uid\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null } ] To get attributes with pattern & status : /opt/jans/jans-cli/config-cli.py --operation-id get-attributes --endpoint-args limit:5,pattern:profile,status:ACTIVE In return, we get a list of attribute that are matched with the given pattern and status : Getting access token for scope https : //jans.io/oauth/config/attributes.readonly Calling with params limit = 5&pattern=profile&status=ACTIVE [ { \"dn\" : \"inum=EC3A,ou=attributes,o=jans\", \"inum\" : \"EC3A\", \"selected\" : false, \"name\" : \"picture\", \"displayName\" : \"Picture URL\", \"description\" : \"URL of the End-User's profile picture\", \"dataType\" : \"STRING\", \"status\" : \"ACTIVE\", \"lifetime\" : null, \"sourceAttribute\" : null, \"salt\" : null, \"nameIdType\" : null, \"origin\" : \"jansPerson\", \"editType\" : [ \"USER\", \"ADMIN\" ], \"viewType\" : [ \"USER\", \"ADMIN\" ], \"usageType\" : null, \"claimName\" : \"picture\", \"seeAlso\" : null, \"saml1Uri\" : \"urn:mace:dir:attribute-def:picture\", \"saml2Uri\" : \"urn:oid:1.3.6.1.4.1.48710.1.3.322\", \"urn\" : \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/picture\", \"scimCustomAttr\" : null, \"oxMultiValuedAttribute\" : false, \"custom\" : false, \"requred\" : false, \"attributeValidation\" : null, \"tooltip\" : null }, { \"dn\" : \"inum=64A0,ou=attributes,o=jans\", \"inum\" : \"64A0\", \"selected\" : false, \"name\" : \"profile\", \"displayName\" : \"Profile URL\", \"description\" : \"URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.\", \"dataType\" : \"STRING\", \"status\" : \"ACTIVE\", \"lifetime\" : null, \"sourceAttribute\" : null, \"salt\" : null, \"nameIdType\" : null, \"origin\" : \"jansPerson\", \"editType\" : [ \"USER\", \"ADMIN\" ], \"viewType\" : [ \"USER\", \"ADMIN\" ], \"usageType\" : null, \"claimName\" : \"profile\", \"seeAlso\" : null, \"saml1Uri\" : \"urn:mace:dir:attribute-def:profile\", \"saml2Uri\" : \"urn:oid:1.3.6.1.4.1.48710.1.3.321\", \"urn\" : \"http://openid.net/specs/openid-connect-core-1_0.html/StandardClaims/profile\", \"scimCustomAttr\" : null, \"oxMultiValuedAttribute\" : false, \"custom\" : false, \"requred\" : false, \"attributeValidation\" : null, \"tooltip\" : null } ]","title":"Get Attributes"},{"location":"user/using-jans-cli/cli-attribute/#creating-an-attribute","text":"To create SSO for certain applications, you may need to add custom attributes to your Janssen Server. Custom attributes can be added by using this operation-ID. It has a schema file where it's defined: the properties it needs to be filled to create a new custom attribute. Operation ID: post-attributes Description: Adds a new attribute. Schema: /components/schemas/GluuAttribute Before adding a new attribute, let's get sample schema : /opt/jans/jans-cli/config-cli.py --schema /components/schemas/GluuAttribute > /tmp/attribute.json It will return as below: { \"dn\": null, \"inum\": null, \"selected\": true, \"name\": \"name, displayName, birthdate, email\", \"displayName\": \"string\", \"description\": \"string\", \"dataType\": \"STRING\", \"status\": \"REGISTER\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [], \"viewType\": \"array\", \"usageType\": [], \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": true, \"oxMultiValuedAttribute\": true, \"custom\": true, \"requred\": true, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } Modify it to update attribute name , display name , view type : nano /tmp/attribute.json Now, let's add this attribute using post-attributes : /opt/jans/jans-cli/config-cli.py --operation-id post-attributes --data /tmp/attribute.json It will create a new attribute into the Attribute list with updated inum & dn : Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=256135af-56eb-43f3-9583-d7e9fc75c672,ou=attributes,o=jans\", \"inum\": \"256135af-56eb-43f3-9583-d7e9fc75c672\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"test Attribute\", \"description\": \"testing post-attributes\", \"dataType\": \"CERTIFICATE\", \"status\": \"REGISTER\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": null, \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null }","title":"Creating an Attribute"},{"location":"user/using-jans-cli/cli-attribute/#updating-an-attribute","text":"This operation-id can be used to update an existing attribute information. The Janssen Server administrator can make changes to attributes, such as changing their status to active/inactive by using this operation-ID. Let's look at the schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/GluuAttribute > /tmp/attrib.json You must see the similar schema while performed in post-attributes operation. To update an existing attribute, we have to ensure following properties in the schema file. In our case, I have modified the schema file as below: { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": true, \"name\": \"testAttribute\", \"display_name\": \"testAttribute\", \"description\": \"testing put-attribute\", \"data_type\": \"STRING\", \"status\": \"ACTIVE\", \"edit_type\": [\"ADMIN\", \"OWNER\"], \"view_type\": [\"ADMIN\", \"OWNER\", \"USER\"] } Now if we run the below command line: /opt/jans/jans-cli/config-cli.py --operation-id put-attributes --data /tmp/attrb.json Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"testAttribute\", \"description\": \"testing put-attribute\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"OWNER\" ], \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null } It just replace the previous value with new one.","title":"Updating an Attribute"},{"location":"user/using-jans-cli/cli-attribute/#get-attribute-by-inum","text":"As we know, There are a lot of attributes available in the Janssen Server including custom attributes as well. You may want to know details information for a single attribute uniquely identified by inum . Getting an attribute information by using its inum is pretty simple. /opt/jans/jans-cli/config-cli.py --operation-id get-attributes-by-inum --url-suffix inum:b691f2ab-a7db-4725-b85b-9961575b441f It will show all details information of the selected Attribute. Getting access token for scope https://jans.io/oauth/config/attributes.readonly { \"dn\": \"inum=b691f2ab-a7db-4725-b85b-9961575b441f,ou=attributes,o=jans\", \"inum\": \"b691f2ab-a7db-4725-b85b-9961575b441f\", \"selected\": false, \"name\": \"testAttribute\", \"displayName\": \"testAttribute\", \"description\": \"testing put-attribute\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"OWNER\" ], \"viewType\": [ \"ADMIN\", \"OWNER\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null }","title":"Get Attribute by inum"},{"location":"user/using-jans-cli/cli-attribute/#delete-attributes","text":"For any reason, If it needs to delete any attribute, you can do that simply using its inum value. See below example, just change the inum value with one that you want to delete. /opt/jans/jans-cli/config-cli.py --operation-id delete-attributes-by-inum --url-suffix inum:b691f2ab-a7db-4725-b85b-9961575b441f","title":"Delete Attributes"},{"location":"user/using-jans-cli/cli-attribute/#patch-attributes","text":"This operation can also used for updating an existing attribute by using its inum value. Operation ID: patch-attributes-by-inum Description: Partially modify a GluuAttribute. url-suffix: inum Schema: Array of /components/schemas/PatchRequest If we look at the description, we see that there is a schema file. Let's get the schema file with below command: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch.json # cat /tmp/patch.json { \"op\": \"add\", \"path\": \"string\", \"value\": {} } Let's modify this schema file to change the status of an attribute as below: In the above image, added two tasks. To know more about how we can modify this schema file to perform a specific task, follow this link: patch-request-schema Let's update an attribute by its inum value. In our case, inum : 6EEB. Before patching the selected attribute, you can check its properties using get-attributes-by-inum operation. Before patching the attribute, its properties are: { \"dn\": \"inum=6EEB,ou=attributes,o=jans\", \"inum\": \"6EEB\", \"selected\": false, \"name\": \"l\", \"displayName\": \"City\", \"description\": \"City\", \"dataType\": \"STRING\", \"status\": \"INACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansCustomPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"locality\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:l\", \"saml2Uri\": \"urn:oid:2.5.4.7\", \"urn\": \"urn:mace:dir:attribute-def:l\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": null } According to the schema file, There should be two changes, status and jansHideOnDiscovery . Let's perform the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-attributes-by-inum --url-suffix inum:6EEB --data /tmp/patch.json The updated attribute looks like: Getting access token for scope https://jans.io/oauth/config/attributes.write Server Response: { \"dn\": \"inum=6EEB,ou=attributes,o=jans\", \"inum\": \"6EEB\", \"selected\": false, \"name\": \"l\", \"displayName\": \"City\", \"description\": \"City\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansCustomPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": \"locality\", \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:l\", \"saml2Uri\": \"urn:oid:2.5.4.7\", \"urn\": \"urn:mace:dir:attribute-def:l\", \"scimCustomAttr\": null, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": null, \"tooltip\": null, \"jansHideOnDiscovery\": true } As you see, there are two changes.","title":"Patch Attributes"},{"location":"user/using-jans-cli/cli-cache-configuration/","text":"Cache Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode Cache Configuration supports two types of operation through the Single Line command of Janssen CLI. Let's get the information for Cache Configuration. /opt/jans/jans-cli/config-cli.py --info CacheConfiguration It prints below two operations: Operation ID: get-config-cache Description: Returns cache configuration. Operation ID: patch-config-cache Description: Partially modifies cache configuration. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Table of Contents # Cache Configuration Table of Contents Get Cache Configuration Patch Cache Configuration Quick Patch Operation Get Cache Configuration # You can get the current Cache Configuration of your Janssen Server by performing this operation. /opt/jans/jans-cli/config-cli.py --operation-id get-config-cache It will show the Cache configuration with details. { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32768, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } } Patch Cache Configuration # You may need to update Cache configuration, In that case patch-config-cache can be used to modify cache configuration. Operation ID: patch-config-cache Description: Partially modifies cache configuration. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's see the sample schema of cache configuration. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-cache.json { \"op\": \"add\", \"path\": \"string\", \"value\": {} } Let, We want to replace memcachedConfiguration/bufferSize : We can edit this json as follows (remember to make it an array): nano /tmp/patch-cache.json [ { \"op\": \"replace\", \"path\": \"memcachedConfiguration/bufferSize\", \"value\": \"32788\" } ] Now, let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --data /tmp/patch-cache.json Getting access token for scope https://jans.io/oauth/config/cache.write Server Response: { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32788, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } You see bufferSize has changed. You may want to know more about patching cache configuration. Please, have a look to this link to know more about how you can modify the schema file. Quick Patch Operation # In case you need to do a quick patch operation, you can do that also. For example, let's say we would like to replace defaultPutExpiration value from nativePersistenceConfiguration . We can do that simply by the following command line: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --patch-replace nativePersistenceConfiguration/defaultPutExpiration:90 It will change the value with given one. There are few option to do such quick patch operations. Please check them out from here .","title":"Cache Configuration"},{"location":"user/using-jans-cli/cli-cache-configuration/#cache-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Cache Configuration supports two types of operation through the Single Line command of Janssen CLI. Let's get the information for Cache Configuration. /opt/jans/jans-cli/config-cli.py --info CacheConfiguration It prints below two operations: Operation ID: get-config-cache Description: Returns cache configuration. Operation ID: patch-config-cache Description: Partially modifies cache configuration. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest","title":"Cache Configuration"},{"location":"user/using-jans-cli/cli-cache-configuration/#table-of-contents","text":"Cache Configuration Table of Contents Get Cache Configuration Patch Cache Configuration Quick Patch Operation","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-cache-configuration/#get-cache-configuration","text":"You can get the current Cache Configuration of your Janssen Server by performing this operation. /opt/jans/jans-cli/config-cli.py --operation-id get-config-cache It will show the Cache configuration with details. { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32768, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } }","title":"Get Cache Configuration"},{"location":"user/using-jans-cli/cli-cache-configuration/#patch-cache-configuration","text":"You may need to update Cache configuration, In that case patch-config-cache can be used to modify cache configuration. Operation ID: patch-config-cache Description: Partially modifies cache configuration. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's see the sample schema of cache configuration. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-cache.json { \"op\": \"add\", \"path\": \"string\", \"value\": {} } Let, We want to replace memcachedConfiguration/bufferSize : We can edit this json as follows (remember to make it an array): nano /tmp/patch-cache.json [ { \"op\": \"replace\", \"path\": \"memcachedConfiguration/bufferSize\", \"value\": \"32788\" } ] Now, let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --data /tmp/patch-cache.json Getting access token for scope https://jans.io/oauth/config/cache.write Server Response: { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32788, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } You see bufferSize has changed. You may want to know more about patching cache configuration. Please, have a look to this link to know more about how you can modify the schema file.","title":"Patch Cache Configuration"},{"location":"user/using-jans-cli/cli-cache-configuration/#quick-patch-operation","text":"In case you need to do a quick patch operation, you can do that also. For example, let's say we would like to replace defaultPutExpiration value from nativePersistenceConfiguration . We can do that simply by the following command line: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --patch-replace nativePersistenceConfiguration/defaultPutExpiration:90 It will change the value with given one. There are few option to do such quick patch operations. Please check them out from here .","title":"Quick Patch Operation"},{"location":"user/using-jans-cli/cli-couchbase-configuration/","text":"Couchbase Database Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode If your janssen server backend is connected with couchbase database then you can go with these operations instead of LDAP configuration . Let's get the couchbase database configuration operations details: /opt/jans/jans-cli/config-cli.py --info DatabaseCouchbaseConfiguration Operation ID: get-config-database-couchbase Description: Gets list of existing Couchbase configurations. Operation ID: post-config-database-couchbase Description: Adds a new Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration Operation ID: put-config-database-couchbase Description: Updates Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration Operation ID: get-config-database-couchbase-by-name Description: Gets a Couchbase configurations by name. url-suffix: name Operation ID: patch-config-database-couchbase-by-name Description: Partially modify an Couchbase configuration. url-suffix: name Schema: Array of /components/schemas/PatchRequest Operation ID: delete-config-database-couchbase-by-name Description: Deletes a Couchbase configurations by name. url-suffix: name Operation ID: post-config-database-couchbase-test Description: Tests a Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CouchbaseConfiguration Get Couchbase Database Configuration details # To get the database configuration details, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-couchbase Adds new Database Configurations # To add a new couchbase database configuration into the janssen server: /opt/jans/jans-cli/config-cli.py --operation-id post-config-database-couchbase --data data.json Update/Replace old couchbase database configurations # To update or replace an couchbase database configuration: /opt/jans/jans-cli/config-cli.py --operation-id put-config-database-couchbase --data data.json Gets Couchbase Database Configuration by its name # To get the couchbase database configuration by its configId: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-couchbase-by-name --url-suffix name:configId-name Delete Couchbase Database Configuration # You can delete the couchbase database configuration by its name. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-database-couchbase-by-name --url-suffix name:configId-name","title":"Couchbase Database Configuration"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#couchbase-database-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode If your janssen server backend is connected with couchbase database then you can go with these operations instead of LDAP configuration . Let's get the couchbase database configuration operations details: /opt/jans/jans-cli/config-cli.py --info DatabaseCouchbaseConfiguration Operation ID: get-config-database-couchbase Description: Gets list of existing Couchbase configurations. Operation ID: post-config-database-couchbase Description: Adds a new Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration Operation ID: put-config-database-couchbase Description: Updates Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration Operation ID: get-config-database-couchbase-by-name Description: Gets a Couchbase configurations by name. url-suffix: name Operation ID: patch-config-database-couchbase-by-name Description: Partially modify an Couchbase configuration. url-suffix: name Schema: Array of /components/schemas/PatchRequest Operation ID: delete-config-database-couchbase-by-name Description: Deletes a Couchbase configurations by name. url-suffix: name Operation ID: post-config-database-couchbase-test Description: Tests a Couchbase configuration. Schema: /components/schemas/CouchbaseConfiguration To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CouchbaseConfiguration","title":"Couchbase Database Configuration"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#get-couchbase-database-configuration-details","text":"To get the database configuration details, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-couchbase","title":"Get Couchbase Database Configuration details"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#adds-new-database-configurations","text":"To add a new couchbase database configuration into the janssen server: /opt/jans/jans-cli/config-cli.py --operation-id post-config-database-couchbase --data data.json","title":"Adds new Database Configurations"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#updatereplace-old-couchbase-database-configurations","text":"To update or replace an couchbase database configuration: /opt/jans/jans-cli/config-cli.py --operation-id put-config-database-couchbase --data data.json","title":"Update/Replace old couchbase database configurations"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#gets-couchbase-database-configuration-by-its-name","text":"To get the couchbase database configuration by its configId: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-couchbase-by-name --url-suffix name:configId-name","title":"Gets Couchbase Database Configuration by its name"},{"location":"user/using-jans-cli/cli-couchbase-configuration/#delete-couchbase-database-configuration","text":"You can delete the couchbase database configuration by its name. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-database-couchbase-by-name --url-suffix name:configId-name","title":"Delete Couchbase Database Configuration"},{"location":"user/using-jans-cli/cli-custom-scripts/","text":"Custom Scripts # Prerequisite: Know how to use the Janssen CLI in command-line mode Interception scripts can be used to implement custom business logic for authentication, authorization, and more in a way that is upgrade-proof and doesn't require forking the Gluu Server code. Using Janssen CLI, we can manage custom scripts as well. Let's get the task information using below command: /opt/jans/jans-cli/config-cli.py --info CustomScripts In return we gets each of the sub-task details: Operation ID: get-config-scripts Description: Gets a list of custom scripts. Operation ID: post-config-scripts Description: Adds a new custom script. Schema: /components/schemas/CustomScript Operation ID: put-config-scripts Description: Updates a custom script. Schema: /components/schemas/CustomScript Operation ID: get-config-scripts-by-type Description: Gets list of scripts by type. url-suffix: type Operation ID: get-config-scripts-by-inum Description: Gets a script by Inum. url-suffix: inum Operation ID: delete-config-scripts-by-inum Description: Deletes a custom script. url-suffix: inum To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CustomScript Let's perform each of this operation. Find list of Custom scripts # get-config-scripts operation id can be used to get a list of custom scripts of the Janssen Server. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts It returns all the custom scripts of the Janssen Server. You may get nagging here as it display lots of custom scripts together, nearly 40 custom scripts on the terminal. So, I would like to prefer use IM method in this case. Adds a New Custom Script # If we look at the description of this operation we see it supports schema: Operation ID: post-config-scripts Description: Adds a new custom script. Schema: /components/schemas/CustomScript So, let's get the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CustomScript > /tmp/cs.json { \"dn\": null, \"inum\": null, \"name\": \"string\", \"aliases\": [], \"description\": null, \"script\": \"_file /root/script.py\", \"scriptType\": \"INTROSPECTION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": { \"value1\": null, \"value2\": null, \"description\": null }, \"configurationProperties\": { \"value1\": null, \"value2\": null, \"description\": null, \"hide\": true }, \"level\": \"integer\", \"revision\": 0, \"enabled\": false, \"scriptError\": { \"raisedAt\": null, \"stackTrace\": null }, \"modified\": false, \"internal\": false } We need to fill some of these properties with valid data to add this new script. { \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"_file /root/client_registration.py\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [{ \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" }], \"configurationProperties\": null, \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } We can remove dn , inum . As because these two items are auto generated with random value. Also we see aliases , moduleproperties and configurationProperties are the array type keys . So we need to put data into [] otherwise it will raise an error. We can also use null value if we need to skip any of them. For scriptType we can choose only selected type of script from the below list. Name of the type of scripts # PERSON_AUTHENTICATION, INTROSPECTION, RESOURCE_OWNER_PASSWORD_CREDENTIALS, APPLICATION_SESSION, CACHE_REFRESH, CLIENT_REGISTRATION, ID_GENERATOR, UMA_RPT_POLICY, UMA_RPT_CLAIMS, UMA_CLAIMS_GATHERING, CONSENT_GATHERING, DYNAMIC_SCOPE, SPONTANEOUS_SCOPE, END_SESSION, POST_AUTHN, SCIM, CIBA_END_USER_NOTIFICATION, PERSISTENCE_EXTENSION, IDP, UPDATE_TOKEN Programming Language # Two types of programming language available there. Those are Python and JavaScript . We can choose any of them regarding the script we need to add. Alright, let's add the script using the command line we have: /opt/jans/jans-cli/config-cli.py --operation-id post-config-scripts --data /tmp/cs.json Getting access token for scope https://jans.io/oauth/config/scripts.write Server Response: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": null, \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } Update an existing Custom Script # put-config-scripts operation-id can be used to update any existing script on the Janssen server. Operation ID: put-config-scripts Description: Updates a custom script. Schema: /components/schemas/CustomScript As we created a custom script in the above , let's update that one. So we know the dn:inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans and inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 here. In this case, I have modified as below: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"_file /root/client_registrationj.py\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [{ \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" }], \"configurationProperties\": [{ \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true }], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } You can see, I have added configurationProperties for testing purpose only. In case you need to change the script, you can do that by changing the script path as well. /opt/jans/jans-cli/config-cli.py --operation-id put-config-scripts --data /tmp/cs.json Getting access token for scope https://jans.io/oauth/config/scripts.write Server Response: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": [ { \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true } ], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } Get Custom Script by type # With this operation-id, we can find a specific type of scripts. It uses url-suffix to get the list of a single type scripts. Operation ID: get-config-scripts-by-type Description: Gets list of scripts by type. url-suffix: type The command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-type --url-suffix type:script-type-name For an example, let's find all the scripts of CLIENT_REGISTRATION type. So, the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-type --url-suffix type:CLIENT_REGISTRATION It returns all the custom scripts that are related to the CLIENT_REGISTRATION type available in the Janssen Server. You will find the name of all the types here Get Custom Scripts by it's inum # In case we need to find out details configuration of any custom script, we can search by its unique inum value. Operation ID: get-config-scripts-by-inum Description: Gets a script by Inum. url-suffix: inum command line: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-inum --url-suffix inum:inum_value For example, we can show details here that we already added in the Janssen Server and we know it's inum value is 61aef81b-b22d-42c0-89d5-b098c976a2b7 . In our case, the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-inum --url-suffix inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 It returns the configuration of the custom script matched with the given inum value. Getting access token for scope https://jans.io/oauth/config/scripts.readonly { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": [ { \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true } ], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } How to delete Custom Script? # Well, we can delete any custom script also in deed. In that case, we need to remember the inum value of the custom script we want to delete. In the above we added , updated a custom script. We know the inum value, so let's delete this one. Command line: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-scripts-by-inum --url-suffix inum:inum_value For example, in our case; the command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-scripts-by-inum --url-suffix inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 That's all for Custom Script management with CLI feature. You can check IM method from here .","title":"Custom Scripts"},{"location":"user/using-jans-cli/cli-custom-scripts/#custom-scripts","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Interception scripts can be used to implement custom business logic for authentication, authorization, and more in a way that is upgrade-proof and doesn't require forking the Gluu Server code. Using Janssen CLI, we can manage custom scripts as well. Let's get the task information using below command: /opt/jans/jans-cli/config-cli.py --info CustomScripts In return we gets each of the sub-task details: Operation ID: get-config-scripts Description: Gets a list of custom scripts. Operation ID: post-config-scripts Description: Adds a new custom script. Schema: /components/schemas/CustomScript Operation ID: put-config-scripts Description: Updates a custom script. Schema: /components/schemas/CustomScript Operation ID: get-config-scripts-by-type Description: Gets list of scripts by type. url-suffix: type Operation ID: get-config-scripts-by-inum Description: Gets a script by Inum. url-suffix: inum Operation ID: delete-config-scripts-by-inum Description: Deletes a custom script. url-suffix: inum To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CustomScript Let's perform each of this operation.","title":"Custom Scripts"},{"location":"user/using-jans-cli/cli-custom-scripts/#find-list-of-custom-scripts","text":"get-config-scripts operation id can be used to get a list of custom scripts of the Janssen Server. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts It returns all the custom scripts of the Janssen Server. You may get nagging here as it display lots of custom scripts together, nearly 40 custom scripts on the terminal. So, I would like to prefer use IM method in this case.","title":"Find list of Custom scripts"},{"location":"user/using-jans-cli/cli-custom-scripts/#adds-a-new-custom-script","text":"If we look at the description of this operation we see it supports schema: Operation ID: post-config-scripts Description: Adds a new custom script. Schema: /components/schemas/CustomScript So, let's get the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/CustomScript > /tmp/cs.json { \"dn\": null, \"inum\": null, \"name\": \"string\", \"aliases\": [], \"description\": null, \"script\": \"_file /root/script.py\", \"scriptType\": \"INTROSPECTION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": { \"value1\": null, \"value2\": null, \"description\": null }, \"configurationProperties\": { \"value1\": null, \"value2\": null, \"description\": null, \"hide\": true }, \"level\": \"integer\", \"revision\": 0, \"enabled\": false, \"scriptError\": { \"raisedAt\": null, \"stackTrace\": null }, \"modified\": false, \"internal\": false } We need to fill some of these properties with valid data to add this new script. { \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"_file /root/client_registration.py\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [{ \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" }], \"configurationProperties\": null, \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } We can remove dn , inum . As because these two items are auto generated with random value. Also we see aliases , moduleproperties and configurationProperties are the array type keys . So we need to put data into [] otherwise it will raise an error. We can also use null value if we need to skip any of them. For scriptType we can choose only selected type of script from the below list.","title":"Adds a New Custom Script"},{"location":"user/using-jans-cli/cli-custom-scripts/#name-of-the-type-of-scripts","text":"PERSON_AUTHENTICATION, INTROSPECTION, RESOURCE_OWNER_PASSWORD_CREDENTIALS, APPLICATION_SESSION, CACHE_REFRESH, CLIENT_REGISTRATION, ID_GENERATOR, UMA_RPT_POLICY, UMA_RPT_CLAIMS, UMA_CLAIMS_GATHERING, CONSENT_GATHERING, DYNAMIC_SCOPE, SPONTANEOUS_SCOPE, END_SESSION, POST_AUTHN, SCIM, CIBA_END_USER_NOTIFICATION, PERSISTENCE_EXTENSION, IDP, UPDATE_TOKEN","title":"Name of the type of scripts"},{"location":"user/using-jans-cli/cli-custom-scripts/#programming-language","text":"Two types of programming language available there. Those are Python and JavaScript . We can choose any of them regarding the script we need to add. Alright, let's add the script using the command line we have: /opt/jans/jans-cli/config-cli.py --operation-id post-config-scripts --data /tmp/cs.json Getting access token for scope https://jans.io/oauth/config/scripts.write Server Response: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": null, \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false }","title":"Programming Language"},{"location":"user/using-jans-cli/cli-custom-scripts/#update-an-existing-custom-script","text":"put-config-scripts operation-id can be used to update any existing script on the Janssen server. Operation ID: put-config-scripts Description: Updates a custom script. Schema: /components/schemas/CustomScript As we created a custom script in the above , let's update that one. So we know the dn:inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans and inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 here. In this case, I have modified as below: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"_file /root/client_registrationj.py\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [{ \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" }], \"configurationProperties\": [{ \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true }], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false } You can see, I have added configurationProperties for testing purpose only. In case you need to change the script, you can do that by changing the script path as well. /opt/jans/jans-cli/config-cli.py --operation-id put-config-scripts --data /tmp/cs.json Getting access token for scope https://jans.io/oauth/config/scripts.write Server Response: { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": [ { \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true } ], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false }","title":"Update an existing Custom Script"},{"location":"user/using-jans-cli/cli-custom-scripts/#get-custom-script-by-type","text":"With this operation-id, we can find a specific type of scripts. It uses url-suffix to get the list of a single type scripts. Operation ID: get-config-scripts-by-type Description: Gets list of scripts by type. url-suffix: type The command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-type --url-suffix type:script-type-name For an example, let's find all the scripts of CLIENT_REGISTRATION type. So, the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-type --url-suffix type:CLIENT_REGISTRATION It returns all the custom scripts that are related to the CLIENT_REGISTRATION type available in the Janssen Server. You will find the name of all the types here","title":"Get Custom Script by type"},{"location":"user/using-jans-cli/cli-custom-scripts/#get-custom-scripts-by-its-inum","text":"In case we need to find out details configuration of any custom script, we can search by its unique inum value. Operation ID: get-config-scripts-by-inum Description: Gets a script by Inum. url-suffix: inum command line: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-inum --url-suffix inum:inum_value For example, we can show details here that we already added in the Janssen Server and we know it's inum value is 61aef81b-b22d-42c0-89d5-b098c976a2b7 . In our case, the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-config-scripts-by-inum --url-suffix inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 It returns the configuration of the custom script matched with the given inum value. Getting access token for scope https://jans.io/oauth/config/scripts.readonly { \"dn\": \"inum=61aef81b-b22d-42c0-89d5-b098c976a2b7,ou=scripts,o=jans\", \"inum\": \"61aef81b-b22d-42c0-89d5-b098c976a2b7\", \"name\": \"custom_script_client\", \"aliases\": null, \"description\": \"Testing custom script addition\", \"script\": \"...\", \"scriptType\": \"CLIENT_REGISTRATION\", \"programmingLanguage\": \"PYTHON\", \"moduleProperties\": [ { \"value1\": \"myvalue1\", \"value2\": \"myvalue2\", \"description\": \"description for this property\" } ], \"configurationProperties\": [ { \"value1\": \"testconfigvalue1\", \"value2\": \"testconfigvalue2\", \"description\": \"description for configuration property\", \"hide\": true } ], \"level\": 100, \"revision\": 0, \"enabled\": false, \"scriptError\": null, \"modified\": false, \"internal\": false }","title":"Get Custom Scripts by it's inum"},{"location":"user/using-jans-cli/cli-custom-scripts/#how-to-delete-custom-script","text":"Well, we can delete any custom script also in deed. In that case, we need to remember the inum value of the custom script we want to delete. In the above we added , updated a custom script. We know the inum value, so let's delete this one. Command line: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-scripts-by-inum --url-suffix inum:inum_value For example, in our case; the command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-scripts-by-inum --url-suffix inum:61aef81b-b22d-42c0-89d5-b098c976a2b7 That's all for Custom Script management with CLI feature. You can check IM method from here .","title":"How to delete Custom Script?"},{"location":"user/using-jans-cli/cli-default-authentication-method/","text":"Default AUthentication Method # Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of Default Authentication Method : /opt/jans/jans-cli/config-cli.py --info DefaultAuthenticationMethod Operation ID: get-acrs Description: Gets default authentication method. Operation ID: put-acrs Description: Updates default authentication method. Schema: /components/schemas/AuthenticationMethod To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod Table of Contents # Default AUthentication Method Find Current Authentication Method Update Default Authentication Method Find Current Authentication Method # To get the default authentication method: /opt/jans/jans-cli/config-cli.py --operation-id get-acrs Getting access token for scope https://jans.io/oauth/config/acrs.readonly { \"defaultAcr\": \"simple_password_auth\" } Update Default Authentication Method # Let's update the Default Authentication Method using janssen CLI command line. To perform the put-acrs operation, we have to use its schema. To get its schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod > /tmp/patch-default-auth.json { \"defaultAcr\": null } It will create a .json file with a schema. It comes with a null value. We need to modify this file to update default acr. we have seen that our Default Authentication Method is simple_password_auth . We are going to update it with passport_saml authenitcation method. nano /tmp/patch-default-auth.json Now let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-acrs --data /tmp/patch-default-auth.json It will show the updated result.","title":"Default AUthentication Method"},{"location":"user/using-jans-cli/cli-default-authentication-method/#default-authentication-method","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of Default Authentication Method : /opt/jans/jans-cli/config-cli.py --info DefaultAuthenticationMethod Operation ID: get-acrs Description: Gets default authentication method. Operation ID: put-acrs Description: Updates default authentication method. Schema: /components/schemas/AuthenticationMethod To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod","title":"Default AUthentication Method"},{"location":"user/using-jans-cli/cli-default-authentication-method/#table-of-contents","text":"Default AUthentication Method Find Current Authentication Method Update Default Authentication Method","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-default-authentication-method/#find-current-authentication-method","text":"To get the default authentication method: /opt/jans/jans-cli/config-cli.py --operation-id get-acrs Getting access token for scope https://jans.io/oauth/config/acrs.readonly { \"defaultAcr\": \"simple_password_auth\" }","title":"Find Current Authentication Method"},{"location":"user/using-jans-cli/cli-default-authentication-method/#update-default-authentication-method","text":"Let's update the Default Authentication Method using janssen CLI command line. To perform the put-acrs operation, we have to use its schema. To get its schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod > /tmp/patch-default-auth.json { \"defaultAcr\": null } It will create a .json file with a schema. It comes with a null value. We need to modify this file to update default acr. we have seen that our Default Authentication Method is simple_password_auth . We are going to update it with passport_saml authenitcation method. nano /tmp/patch-default-auth.json Now let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-acrs --data /tmp/patch-default-auth.json It will show the updated result.","title":"Update Default Authentication Method"},{"location":"user/using-jans-cli/cli-group/","text":"Group Resources # Prerequisite: Know how to use the Janssen CLI in command-line mode Group resources are used to manage user resources easily with some operations. If you run the below command, then you will get a list of operations as below: root@testjans:~# /opt/jans/jans-cli/scim-cli.py --info Group Operation ID: get-groups Description: Query Group resources (see section 3.4.2 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] filter: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644 [string] startIndex: The 1-based index of the first query result [integer] count: Specifies the desired maximum number of query results per page [integer] sortBy: The attribute whose value will be used to order the returned responses [string] sortOrder: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\" [string] Operation ID: create-group Description: Allows creating a Group resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/GroupResource Schema: /components/schemas/GroupResource Operation ID: get-group-by-id Description: Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Operation ID: update-group-by-id Description: Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/GroupResource Schema: /components/schemas/GroupResource Operation ID: delete-group-by-id Description: Deletes a group resource (see section 3.6 of RFC 7644) url-suffix: id Parameters: id: Identifier of the resource to delete [string] Operation ID: patch-group-by-id Description: Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest Schema: /components/schemas/PatchRequest Operation ID: search-group Description: Query Group resources (see section 3.4.2 of RFC 7644) Schema: /components/schemas/SearchRequest Schema: /components/schemas/SearchRequest To get sample schema type /opt/jans/jans-cli/scim-cli.py --schema <schma>, for example /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/SearchRequest root@testjans:~# Table of Contents # Group Resources Get Groups Create Group Get Group by ID Update Group by ID Delete Group by ID Patch Group Search Group Get Groups # This operation can be used to get list of groups that are used to organize user resources. Let's run the below command: # /opt/jans/jans-cli/scim-cli.py --operation-id get-users It will show the list of groups with all the members linked with each of the group. You can filter for the advanced search with some of its properties: attributes excludeAttributes filter count [define maximum number of query] sortBy [attribute] sortOrder ['ascending', 'descending'] Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/60B7\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } root@testjans:~# Create Group # This operation can be used to create group resources to manage user resources. Operation ID: create-group Description: Allows creating a Group resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/GroupResource So, let's get first the schema, to get schema: /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource root@testjans:~# /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource { \"displayName\": null, \"members\": { \"$ref\": null, \"type\": null, \"display\": null, \"value\": null }, \"schemas\": [], \"id\": null, \"meta\": { \"resourceType\": null, \"created\": null, \"lastModified\": null, \"location\": null } } The schema defines the properties of an attribute.Just Create a json file with each properties in schema filling by a value. As you see, I have removed members from the schema. We will add members in this group later. Let's use the command to create the group with this data. /opt/jans/jans-cli/scim-cli.py --operation-id create-group --data group.json Getting access token for scope https://jans.io/scim/groups.write Server Response: { \"displayName\": \"Jannsen Test Group\", \"members\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } To verify let's use the get-groups operation id: root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id get-groups Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/60B7\" } }, { \"displayName\": \"Jannsen Test Group\", \"members\": [], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 2, \"startIndex\": 1, \"itemsPerPage\": 2 } root@testjans:~# Get Group by ID # If you have an id of a group resource, Then you can view its properties through this operation. Operation ID: get-group-by-id Description: Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] In our case, id:766ffd8c-88a8-4aa8-a430-a5b3ae809c21 that's created while performing the create-group operation. /opt/jans/jans-cli/scim-cli.py --operation-id get-group-by-id --url-suffix id:766ffd8c-88a8-4aa8-a430-a5b3ae809c21 In return, you must see the group resources linked with the id: Getting access token for scope https://jans.io/scim/groups.read { \"displayName\": \"Jannsen Test Group\", \"members\": [], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } Update Group by ID # If we look at the description, We see this op-mode needs url-suffix as id and schema definition for data. Operation ID: update-group-by-id Description: Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/GroupResource Let's get the schema first: /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource > /tmp/group.json let's modify this schema to add members into a selected group: displayName: It should be a group name id: Selected group id which one you want to updae meta: Meta data of the selected group Now let's add this member into the group we are going to update. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id update-group-by-id --data /tmp/group.json --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 Getting access token for scope https://jans.io/scim/groups.write Server Response: { \"displayName\": \"Test Janssen Server\", \"members\": [ { \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/null\", \"type\": \"User\", \"display\": null, \"value\": null } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"56030854-2784-408e-8fa7-e11835804ac7\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-19T22:15:15.151Z\", \"lastModified\": \"2021-04-21T16:22:24.085Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/56030854-2784-408e-8fa7-e11835804ac7\" } } root@testjans:~# That's how we can update a group using this operation method. Please remember one thing, this update method just replace the data. If you want to add members instead of replacing then you must try patch-group-by-id . Delete Group by ID # You can delete a group by its ID. The command line looks like: /opt/jans/jans-cli/scim-cli.py --operation-id delete-group-by-id --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 It will delete the group and all of its data matched with the unique ID. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id delete-group-by-id --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 Getting access token for scope https://jans.io/scim/groups.write Patch Group # This is also an option to update any existing group resources. The only difference between update-group-by-id and patch-group is that the first one just replace new data with previous data. It won't add any new data into the group. But Patch-group supports few more operations including replace. Like, You can test , add , replace , delete , copy any data from a Group resource. If wee look at the description: Operation ID: patch-group-by-id Description: Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest As we see, It has a schema file. So, Let's get the schema: Search Group #","title":"Group Resources"},{"location":"user/using-jans-cli/cli-group/#group-resources","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Group resources are used to manage user resources easily with some operations. If you run the below command, then you will get a list of operations as below: root@testjans:~# /opt/jans/jans-cli/scim-cli.py --info Group Operation ID: get-groups Description: Query Group resources (see section 3.4.2 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] filter: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644 [string] startIndex: The 1-based index of the first query result [integer] count: Specifies the desired maximum number of query results per page [integer] sortBy: The attribute whose value will be used to order the returned responses [string] sortOrder: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\" [string] Operation ID: create-group Description: Allows creating a Group resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/GroupResource Schema: /components/schemas/GroupResource Operation ID: get-group-by-id Description: Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Operation ID: update-group-by-id Description: Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/GroupResource Schema: /components/schemas/GroupResource Operation ID: delete-group-by-id Description: Deletes a group resource (see section 3.6 of RFC 7644) url-suffix: id Parameters: id: Identifier of the resource to delete [string] Operation ID: patch-group-by-id Description: Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest Schema: /components/schemas/PatchRequest Operation ID: search-group Description: Query Group resources (see section 3.4.2 of RFC 7644) Schema: /components/schemas/SearchRequest Schema: /components/schemas/SearchRequest To get sample schema type /opt/jans/jans-cli/scim-cli.py --schema <schma>, for example /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/SearchRequest root@testjans:~#","title":"Group Resources"},{"location":"user/using-jans-cli/cli-group/#table-of-contents","text":"Group Resources Get Groups Create Group Get Group by ID Update Group by ID Delete Group by ID Patch Group Search Group","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-group/#get-groups","text":"This operation can be used to get list of groups that are used to organize user resources. Let's run the below command: # /opt/jans/jans-cli/scim-cli.py --operation-id get-users It will show the list of groups with all the members linked with each of the group. You can filter for the advanced search with some of its properties: attributes excludeAttributes filter count [define maximum number of query] sortBy [attribute] sortOrder ['ascending', 'descending'] Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/60B7\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } root@testjans:~#","title":"Get Groups"},{"location":"user/using-jans-cli/cli-group/#create-group","text":"This operation can be used to create group resources to manage user resources. Operation ID: create-group Description: Allows creating a Group resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/GroupResource So, let's get first the schema, to get schema: /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource root@testjans:~# /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource { \"displayName\": null, \"members\": { \"$ref\": null, \"type\": null, \"display\": null, \"value\": null }, \"schemas\": [], \"id\": null, \"meta\": { \"resourceType\": null, \"created\": null, \"lastModified\": null, \"location\": null } } The schema defines the properties of an attribute.Just Create a json file with each properties in schema filling by a value. As you see, I have removed members from the schema. We will add members in this group later. Let's use the command to create the group with this data. /opt/jans/jans-cli/scim-cli.py --operation-id create-group --data group.json Getting access token for scope https://jans.io/scim/groups.write Server Response: { \"displayName\": \"Jannsen Test Group\", \"members\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } To verify let's use the get-groups operation id: root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id get-groups Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/60B7\" } }, { \"displayName\": \"Jannsen Test Group\", \"members\": [], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 2, \"startIndex\": 1, \"itemsPerPage\": 2 } root@testjans:~#","title":"Create Group"},{"location":"user/using-jans-cli/cli-group/#get-group-by-id","text":"If you have an id of a group resource, Then you can view its properties through this operation. Operation ID: get-group-by-id Description: Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] In our case, id:766ffd8c-88a8-4aa8-a430-a5b3ae809c21 that's created while performing the create-group operation. /opt/jans/jans-cli/scim-cli.py --operation-id get-group-by-id --url-suffix id:766ffd8c-88a8-4aa8-a430-a5b3ae809c21 In return, you must see the group resources linked with the id: Getting access token for scope https://jans.io/scim/groups.read { \"displayName\": \"Jannsen Test Group\", \"members\": [], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-14T19:54:03.091Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } }","title":"Get Group by ID"},{"location":"user/using-jans-cli/cli-group/#update-group-by-id","text":"If we look at the description, We see this op-mode needs url-suffix as id and schema definition for data. Operation ID: update-group-by-id Description: Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/GroupResource Let's get the schema first: /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/GroupResource > /tmp/group.json let's modify this schema to add members into a selected group: displayName: It should be a group name id: Selected group id which one you want to updae meta: Meta data of the selected group Now let's add this member into the group we are going to update. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id update-group-by-id --data /tmp/group.json --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 Getting access token for scope https://jans.io/scim/groups.write Server Response: { \"displayName\": \"Test Janssen Server\", \"members\": [ { \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/null\", \"type\": \"User\", \"display\": null, \"value\": null } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"56030854-2784-408e-8fa7-e11835804ac7\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-19T22:15:15.151Z\", \"lastModified\": \"2021-04-21T16:22:24.085Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/56030854-2784-408e-8fa7-e11835804ac7\" } } root@testjans:~# That's how we can update a group using this operation method. Please remember one thing, this update method just replace the data. If you want to add members instead of replacing then you must try patch-group-by-id .","title":"Update Group by ID"},{"location":"user/using-jans-cli/cli-group/#delete-group-by-id","text":"You can delete a group by its ID. The command line looks like: /opt/jans/jans-cli/scim-cli.py --operation-id delete-group-by-id --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 It will delete the group and all of its data matched with the unique ID. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id delete-group-by-id --url-suffix id:56030854-2784-408e-8fa7-e11835804ac7 Getting access token for scope https://jans.io/scim/groups.write","title":"Delete Group by ID"},{"location":"user/using-jans-cli/cli-group/#patch-group","text":"This is also an option to update any existing group resources. The only difference between update-group-by-id and patch-group is that the first one just replace new data with previous data. It won't add any new data into the group. But Patch-group supports few more operations including replace. Like, You can test , add , replace , delete , copy any data from a Group resource. If wee look at the description: Operation ID: patch-group-by-id Description: Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest As we see, It has a schema file. So, Let's get the schema:","title":"Patch Group"},{"location":"user/using-jans-cli/cli-group/#search-group","text":"","title":"Search Group"},{"location":"user/using-jans-cli/cli-index/","text":"Command Line Interface # We will refer to this mode as CL . Using this mode is difficult compared to IM. The first is to get help, so type: /opt/jans/jans-cli/config-cli.py --help It will print all information about how to configure Janssen Server using CLI mode: usage: config-cli.py [-h] [--host HOST] [--client-id CLIENT_ID] [--client_secret CLIENT_SECRET] [--plugins PLUGINS] [-debug] [--debug-log-file DEBUG_LOG_FILE] [--operation-id OPERATION_ID] [--url-suffix URL_SUFFIX] [--info {Attribute,CacheConfiguration,CacheConfigurationInMemory,CacheConfigurationMemcached,CacheConfigurationNativePersistence,CacheConfigurationRedis,ConfigurationFido2,ConfigurationJWKJSONWebKeyJWK,ConfigurationLogging,ConfigurationProperties,ConfigurationSMTP,CustomScripts,DatabaseCouchbaseConfiguration,DatabaseLDAPConfiguration,DefaultAuthenticationMethod,OAuthOpenIDConnectClients,OAuthScopes,OAuthUMAResources}] [--op-mode {get,post,put,patch,delete}] [--endpoint-args ENDPOINT_ARGS] [--schema SCHEMA] [--username USERNAME] [--password PASSWORD] [-j J] [--cert-file CERT_FILE] [--key-file KEY_FILE] [-noverify] [--patch-add PATCH_ADD] [--patch-replace PATCH_REPLACE] [--patch-remove PATCH_REMOVE] [--data DATA] optional arguments: -h, --help show this help message and exit --host HOST Hostname of server --client-id CLIENT_ID Jans Config Api Client ID --client_secret CLIENT_SECRET Jans Config Api Client ID secret --plugins PLUGINS Available plugins separated by comma -debug Run in debug mode --debug-log-file DEBUG_LOG_FILE Log file name when run in debug mode --operation-id OPERATION_ID Operation ID to be done --url-suffix URL_SUFFIX Argument to be added api endpoint url. For example inum:2B29 --info {Attribute,CacheConfiguration,CacheConfigurationInMemory,CacheConfigurationMemcached,CacheConfigurationNativePersistence,CacheConfigurationRedis,ConfigurationFido2,ConfigurationJWKJSONWebKeyJWK,ConfigurationLogging,ConfigurationProperties,ConfigurationSMTP,CustomScripts,DatabaseCouchbaseConfiguration,DatabaseLDAPConfiguration,DefaultAuthenticationMethod,OAuthOpenIDConnectClients,OAuthScopes,OAuthUMAResources} Help for operation --op-mode {get,post,put,patch,delete} Operation mode to be done --endpoint-args ENDPOINT_ARGS Arguments to pass endpoint separated by comma. For example limit:5,status:INACTIVE --schema SCHEMA Get sample json schema --username USERNAME Auth username --password PASSWORD Auth password -j J Auth password file --cert-file CERT_FILE Path to SSL Certificate file --key-file KEY_FILE Path to SSL Key file -noverify Ignore verifying the SSL certificate --patch-add PATCH_ADD Colon delimited key:value pair for add patch operation. For example loggingLevel:DEBUG --patch-replace PATCH_REPLACE Colon delimited key:value pair for replace patch operation. For example loggingLevel:DEBUG --patch-remove PATCH_REMOVE Key for remove patch operation. For example imgLocation --data DATA Path to json data file root@testjans:~# We start with getting information about tasks, tasks are options of argument --info : Attribute, CacheConfiguration, CacheConfigurationInMemory, CacheConfigurationMemcached, CacheConfigurationNativePersistence, CacheConfigurationRedis, ConfigurationFido2, ConfigurationJWKJSONWebKeyJWK, ConfigurationLogging, ConfigurationProperties, ConfigurationSMTP, CustomScripts, DatabaseCouchbaseConfiguration, DatabaseLDAPConfiguration, DefaultAuthenticationMethod, OAuthOpenIDConnectClients, OAuthOpenIDConnectSectorIdentifiers, OAuthScopes, OAuthUMAResources To get information for a specific task we run command as below: /opt/jans/jans-cli/config-cli.py --info [task] for example: /opt/jans/jans-cli/config-cli.py --info DefaultAuthenticationMethod It returns with some operation id : Operation ID: get-acrs Description: Gets default authentication method. Operation ID: put-acrs Description: Updates default authentication method. Schema: /components/schemas/AuthenticationMethod To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod To perform any operation, you have to run command line with the operation id. for example: /opt/jans/jans-cli/config-cli.py --operation-id get-acrs It returns: Getting access token for scope https://jans.io/oauth/config/acrs.readonly { \"defaultAcr\": \"simple_password_auth\" } This is how we can execute single line command to get information about the Janssen Server. Basic command-line switches # -h or --help to get all the formations of command line argument (ex; /opt/jans/jans-cli/config-cli.py -h ) --info to get formations about some operations id for a specific task (ex; opt/jans/jans-cli/config-cli.py --info User ) --operation-id usage to operate each of the sub-task --endpoint-args advanced usage for operation-id --data usage to share data in operations Patch Request (schema) # This schema file can be found in /components/schemas/PatchRequest for those which one support this operation. When you examine this sample schema, you will see three properties in an object: op, path, and value. op : operation to be done, one of add , remove , replace , move , copy , test path : Path of the property to be changed. use path separator / for config or . for SCIM to change a property inside an object. value : New value to be assigned for each property defined in path Multiple Patch Request (schema) # When we need to perform multiple patch operations on any configuration endpoint, Instead of doing one by one, we can create a json file including all individual operation into an array. To clarify, please see below json file: [ { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"Value\" }, { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" }, { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" } ... ... ... { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" } ] This file contains multiple individual patch operation. In Patch Request (schema) we explained about each of these keys in the above json file. After creating the json file, just run the patch operation command. /opt/jans/jans-cli/config-cli.py --operation-id [patch operation id name] --data [json file absolute url] Quick Patch Operations # There is another patch request feature. It is a single line patch-request command line. It supports three types of operations: patch-replace : to replace value with new one. patch-add : it will add value into the key path. patch-remove : to remove value from any key path. The command line looks like below: /opt/jans/jans-cli/config-cli.py --operation-id [patch-operation-id] --[patch-operation-name] key:value for example: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --patch-replace memcachedConfiguration/bufferSize:32788 In this command line: - patch-config-cache is a operation-id from Cache Configurations task. - patch-replace type of operation; used to replace values in - memcachedConfiguration/bufferSize:32788 is a key:value pair CLI Authorization # To run operations on Janssen Server, CLI client will need to be authenticated and authorized by the server. Since CLI has limited input capabilities, it uses Device Authorization Grant flow to get required permissions in form of an access token. After successfully receiving the token, CLI can run operations on the Janssen server while the token is valid. The steps below will summarize this process. Execution of CLI command will return the following message if a valid token is not found. Access token was not found. Please visit verification url <Janssen-server-device-code-url> and enter user code CGFZ-RTZR in 1800 seconds Please press <<Enter>> when ready Take <Janssen-server-device-code-url> from the message above and use any browser to access it from a different device User will be presented with a page where the user has to authenticate using id and password After successful user authentication, the next screen allows the user to enter the user code. Use the user code presented on command-line instruction in step 1 above. After successful code validation, the user is presented with OAuth permissions screen. This screen would list all the permissions requested by Jans CLI. The user can choose to Allow or Not Allow granting of these permissions. After allowing the grant of requested permissions, the user should come back to the command-line interface and hit < > as instructed. This will enable CLI to run operations on the corresponding Janssen server.","title":"Command Line Interface"},{"location":"user/using-jans-cli/cli-index/#command-line-interface","text":"We will refer to this mode as CL . Using this mode is difficult compared to IM. The first is to get help, so type: /opt/jans/jans-cli/config-cli.py --help It will print all information about how to configure Janssen Server using CLI mode: usage: config-cli.py [-h] [--host HOST] [--client-id CLIENT_ID] [--client_secret CLIENT_SECRET] [--plugins PLUGINS] [-debug] [--debug-log-file DEBUG_LOG_FILE] [--operation-id OPERATION_ID] [--url-suffix URL_SUFFIX] [--info {Attribute,CacheConfiguration,CacheConfigurationInMemory,CacheConfigurationMemcached,CacheConfigurationNativePersistence,CacheConfigurationRedis,ConfigurationFido2,ConfigurationJWKJSONWebKeyJWK,ConfigurationLogging,ConfigurationProperties,ConfigurationSMTP,CustomScripts,DatabaseCouchbaseConfiguration,DatabaseLDAPConfiguration,DefaultAuthenticationMethod,OAuthOpenIDConnectClients,OAuthScopes,OAuthUMAResources}] [--op-mode {get,post,put,patch,delete}] [--endpoint-args ENDPOINT_ARGS] [--schema SCHEMA] [--username USERNAME] [--password PASSWORD] [-j J] [--cert-file CERT_FILE] [--key-file KEY_FILE] [-noverify] [--patch-add PATCH_ADD] [--patch-replace PATCH_REPLACE] [--patch-remove PATCH_REMOVE] [--data DATA] optional arguments: -h, --help show this help message and exit --host HOST Hostname of server --client-id CLIENT_ID Jans Config Api Client ID --client_secret CLIENT_SECRET Jans Config Api Client ID secret --plugins PLUGINS Available plugins separated by comma -debug Run in debug mode --debug-log-file DEBUG_LOG_FILE Log file name when run in debug mode --operation-id OPERATION_ID Operation ID to be done --url-suffix URL_SUFFIX Argument to be added api endpoint url. For example inum:2B29 --info {Attribute,CacheConfiguration,CacheConfigurationInMemory,CacheConfigurationMemcached,CacheConfigurationNativePersistence,CacheConfigurationRedis,ConfigurationFido2,ConfigurationJWKJSONWebKeyJWK,ConfigurationLogging,ConfigurationProperties,ConfigurationSMTP,CustomScripts,DatabaseCouchbaseConfiguration,DatabaseLDAPConfiguration,DefaultAuthenticationMethod,OAuthOpenIDConnectClients,OAuthScopes,OAuthUMAResources} Help for operation --op-mode {get,post,put,patch,delete} Operation mode to be done --endpoint-args ENDPOINT_ARGS Arguments to pass endpoint separated by comma. For example limit:5,status:INACTIVE --schema SCHEMA Get sample json schema --username USERNAME Auth username --password PASSWORD Auth password -j J Auth password file --cert-file CERT_FILE Path to SSL Certificate file --key-file KEY_FILE Path to SSL Key file -noverify Ignore verifying the SSL certificate --patch-add PATCH_ADD Colon delimited key:value pair for add patch operation. For example loggingLevel:DEBUG --patch-replace PATCH_REPLACE Colon delimited key:value pair for replace patch operation. For example loggingLevel:DEBUG --patch-remove PATCH_REMOVE Key for remove patch operation. For example imgLocation --data DATA Path to json data file root@testjans:~# We start with getting information about tasks, tasks are options of argument --info : Attribute, CacheConfiguration, CacheConfigurationInMemory, CacheConfigurationMemcached, CacheConfigurationNativePersistence, CacheConfigurationRedis, ConfigurationFido2, ConfigurationJWKJSONWebKeyJWK, ConfigurationLogging, ConfigurationProperties, ConfigurationSMTP, CustomScripts, DatabaseCouchbaseConfiguration, DatabaseLDAPConfiguration, DefaultAuthenticationMethod, OAuthOpenIDConnectClients, OAuthOpenIDConnectSectorIdentifiers, OAuthScopes, OAuthUMAResources To get information for a specific task we run command as below: /opt/jans/jans-cli/config-cli.py --info [task] for example: /opt/jans/jans-cli/config-cli.py --info DefaultAuthenticationMethod It returns with some operation id : Operation ID: get-acrs Description: Gets default authentication method. Operation ID: put-acrs Description: Updates default authentication method. Schema: /components/schemas/AuthenticationMethod To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/AuthenticationMethod To perform any operation, you have to run command line with the operation id. for example: /opt/jans/jans-cli/config-cli.py --operation-id get-acrs It returns: Getting access token for scope https://jans.io/oauth/config/acrs.readonly { \"defaultAcr\": \"simple_password_auth\" } This is how we can execute single line command to get information about the Janssen Server.","title":"Command Line Interface"},{"location":"user/using-jans-cli/cli-index/#basic-command-line-switches","text":"-h or --help to get all the formations of command line argument (ex; /opt/jans/jans-cli/config-cli.py -h ) --info to get formations about some operations id for a specific task (ex; opt/jans/jans-cli/config-cli.py --info User ) --operation-id usage to operate each of the sub-task --endpoint-args advanced usage for operation-id --data usage to share data in operations","title":"Basic command-line switches"},{"location":"user/using-jans-cli/cli-index/#patch-request-schema","text":"This schema file can be found in /components/schemas/PatchRequest for those which one support this operation. When you examine this sample schema, you will see three properties in an object: op, path, and value. op : operation to be done, one of add , remove , replace , move , copy , test path : Path of the property to be changed. use path separator / for config or . for SCIM to change a property inside an object. value : New value to be assigned for each property defined in path","title":"Patch Request (schema)"},{"location":"user/using-jans-cli/cli-index/#multiple-patch-request-schema","text":"When we need to perform multiple patch operations on any configuration endpoint, Instead of doing one by one, we can create a json file including all individual operation into an array. To clarify, please see below json file: [ { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"Value\" }, { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" }, { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" } ... ... ... { \"op\": \"operation-name\", \"path\": \"configuration-path\", \"value\": \"value\" } ] This file contains multiple individual patch operation. In Patch Request (schema) we explained about each of these keys in the above json file. After creating the json file, just run the patch operation command. /opt/jans/jans-cli/config-cli.py --operation-id [patch operation id name] --data [json file absolute url]","title":"Multiple Patch Request (schema)"},{"location":"user/using-jans-cli/cli-index/#quick-patch-operations","text":"There is another patch request feature. It is a single line patch-request command line. It supports three types of operations: patch-replace : to replace value with new one. patch-add : it will add value into the key path. patch-remove : to remove value from any key path. The command line looks like below: /opt/jans/jans-cli/config-cli.py --operation-id [patch-operation-id] --[patch-operation-name] key:value for example: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-cache --patch-replace memcachedConfiguration/bufferSize:32788 In this command line: - patch-config-cache is a operation-id from Cache Configurations task. - patch-replace type of operation; used to replace values in - memcachedConfiguration/bufferSize:32788 is a key:value pair","title":"Quick Patch Operations"},{"location":"user/using-jans-cli/cli-index/#cli-authorization","text":"To run operations on Janssen Server, CLI client will need to be authenticated and authorized by the server. Since CLI has limited input capabilities, it uses Device Authorization Grant flow to get required permissions in form of an access token. After successfully receiving the token, CLI can run operations on the Janssen server while the token is valid. The steps below will summarize this process. Execution of CLI command will return the following message if a valid token is not found. Access token was not found. Please visit verification url <Janssen-server-device-code-url> and enter user code CGFZ-RTZR in 1800 seconds Please press <<Enter>> when ready Take <Janssen-server-device-code-url> from the message above and use any browser to access it from a different device User will be presented with a page where the user has to authenticate using id and password After successful user authentication, the next screen allows the user to enter the user code. Use the user code presented on command-line instruction in step 1 above. After successful code validation, the user is presented with OAuth permissions screen. This screen would list all the permissions requested by Jans CLI. The user can choose to Allow or Not Allow granting of these permissions. After allowing the grant of requested permissions, the user should come back to the command-line interface and hit < > as instructed. This will enable CLI to run operations on the corresponding Janssen server.","title":"CLI Authorization"},{"location":"user/using-jans-cli/cli-jans-authorization-server/","text":"Janssen Authorization Server # Prerequisite: Know how to use the Janssen CLI in command-line mode To get info about Jans Authorization Server operations: /opt/jans/jans-cli/config-cli.py --info ConfigurationProperties Operation ID: get-properties Description: Gets all Jans authorization server configuration properties. Operation ID: patch-properties Description: Partially modifies Jans authorization server AppConfiguration properties. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Jans Authorization server has two operations id to get/modify its properties. Table of Contents # Janssen Authorization Server Table of Contents Get All Jans Auth Server Configuration Properties Partially Modify Jans Auth Server Configuration Properties Get All Jans Auth Server Configuration Properties # It returns all the information of the Jans Authorization server. /opt/jans/jans-cli/config-cli.py --operation-id get-properties Getting access token for scope https://jans.io/oauth/jans-auth-server/config/properties.readonly { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1\", \"authorizationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/authorize\", \"tokenEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/token\", \"tokenRevocationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/revoke\", \"userInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/userinfo\", \"clientInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/clientinfo\", \"checkSessionIFrame\": \"https://testjans.gluu.com/jans-auth/opiframe.htm\", \"endSessionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/end_session\", \"jwksUri\": \"https://testjans.gluu.com/jans-auth/restv1/jwks\", \"registrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/register\", \"openIdDiscoveryEndpoint\": \"https://testjans.gluu.com/.well-known/webfinger\", \"openIdConfigurationEndpoint\": \"https://testjans.gluu.com/.well-known/openid-configuration\", \"idGenerationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/id\", \"introspectionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/introspection\", \"deviceAuthzEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/device_authorization\", \"sessionAsJwt\": false, \"sectorIdentifierCacheLifetimeInMinutes\": 1440, \"umaConfigurationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/uma2-configuration\", \"umaRptAsJwt\": false, \"umaRptLifetime\": 3600, \"umaTicketLifetime\": 3600, \"umaPctLifetime\": 2592000, \"umaResourceLifetime\": 2592000, \"umaAddScopesAutomatically\": true, \"umaValidateClaimToken\": false, \"umaGrantAccessIfNoPolicies\": false, \"umaRestrictResourceToAssociatedClient\": false, \"spontaneousScopeLifetime\": 86400, \"openidSubAttribute\": \"inum\", \"responseTypesSupported\": [ \"['code', 'token']\", \"['id_token', 'code', 'token']\", \"['id_token']\", \"['code']\", \"['token']\", \"['id_token', 'code']\", \"['id_token', 'token']\" ], \"responseModesSupported\": [ \"query\", \"form_post\", \"fragment\" ], \"grantTypesSupported\": [ \"password\", \"authorization_code\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:device_code\", \"client_credentials\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"implicit\" ], \"subjectTypesSupported\": [ \"public\", \"pairwise\" ], \"defaultSubjectType\": [ \"p\", \"a\", \"i\", \"r\", \"w\", \"i\", \"s\", \"e\" ], \"userInfoSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"userInfoEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"userInfoEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"idTokenSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"idTokenEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"idTokenEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"requestObjectSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"requestObjectEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"requestObjectEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"tokenEndpointAuthMethodsSupported\": [ \"client_secret_basic\", \"client_secret_post\", \"client_secret_jwt\", \"private_key_jwt\", \"tls_client_auth\", \"self_signed_tls_client_auth\" ], \"tokenEndpointAuthSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"dynamicRegistrationCustomAttributes\": null, \"displayValuesSupported\": [ \"page\", \"popup\" ], \"claimTypesSupported\": [ \"normal\" ], \"jwksAlgorithmsSupported\": [ \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\", \"PS256\", \"PS384\", \"PS512\", \"RSA1_5\", \"RSA-OAEP\" ], \"serviceDocumentation\": [ \"h\", \"t\", \"t\", \"p\", \":\", \"/\", \"/\", \"j\", \"a\", \"n\", \"s\", \".\", \"o\", \"r\", \"g\", \"/\", \"d\", \"o\", \"c\", \"s\" ], \"claimsLocalesSupported\": [ \"en\" ], \"idTokenTokenBindingCnfValuesSupported\": [ \"tbh\" ], \"uiLocalesSupported\": [ \"en\", \"bg\", \"de\", \"es\", \"fr\", \"it\", \"ru\", \"tr\" ], \"claimsParameterSupported\": false, \"requestParameterSupported\": true, \"requestUriParameterSupported\": true, \"requestUriHashVerificationEnabled\": false, \"requireRequestUriRegistration\": false, \"opPolicyUri\": \"http://www.jans.io/doku.php?id=jans:policy\", \"opTosUri\": \"http://www.jans.io/doku.php?id=jans:tos\", \"authorizationCodeLifetime\": 60, \"refreshTokenLifetime\": 14400, \"idTokenLifetime\": 3600, \"idTokenFilterClaimsBasedOnAccessToken\": false, \"accessTokenLifetime\": 300, \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"cleanServiceBaseDns\": null, \"keyRegenerationEnabled\": true, \"keyRegenerationInterval\": 48, \"defaultSignatureAlgorithm\": [ \"R\", \"S\", \"2\", \"5\", \"6\" ], \"oxOpenIdConnectVersion\": \"openidconnect-1.0\", \"oxId\": \"https://testjans.gluu.com/oxid/service/jans/inum\", \"dynamicRegistrationEnabled\": true, \"dynamicRegistrationExpirationTime\": -1, \"dynamicRegistrationPersistClientAuthorizations\": true, \"trustedClientEnabled\": true, \"skipAuthorizationForOpenIdScopeAndPairwiseId\": false, \"dynamicRegistrationScopesParamEnabled\": true, \"dynamicRegistrationPasswordGrantTypeEnabled\": false, \"dynamicRegistrationAllowedPasswordGrantScopes\": null, \"dynamicRegistrationCustomObjectClass\": null, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"persistIdTokenInLdap\": false, \"persistRefreshTokenInLdap\": true, \"allowPostLogoutRedirectWithoutValidation\": false, \"invalidateSessionCookiesAfterAuthorizationFlow\": false, \"returnClientSecretOnRead\": true, \"rejectJwtWithNoneAlg\": true, \"expirationNotificatorEnabled\": false, \"useNestedJwtDuringEncryption\": true, \"expirationNotificatorMapSizeLimit\": 100000, \"expirationNotificatorIntervalInSeconds\": 600, \"authenticationFiltersEnabled\": false, \"clientAuthenticationFiltersEnabled\": false, \"clientRegDefaultToCodeFlowWithRefresh\": true, \"authenticationFilters\": [ { \"filter\": \"(&(mail=*{0}*)(inum={1}))\", \"bind\": false, \"bind-password-attribute\": null, \"base-dn\": null }, { \"filter\": \"uid={0}\", \"bind\": true, \"bind-password-attribute\": null, \"base-dn\": null } ], \"clientAuthenticationFilters\": [ { \"filter\": \"myCustomAttr1={0}\", \"bind\": null, \"bind-password-attribute\": null, \"base-dn\": null } ], \"corsConfigurationFilters\": [ { \"filterName\": \"CorsFilter\", \"corsEnabled\": true, \"corsAllowedOrigins\": \"*\", \"corsAllowedMethods\": \"GET,POST,HEAD,OPTIONS\", \"corsAllowedHeaders\": \"Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers\", \"corsExposedHeaders\": null, \"corsSupportCredentials\": true, \"corsLoggingEnabled\": false, \"corsPreflightMaxAge\": 1800, \"corsRequestDecorate\": true } ], \"sessionIdUnusedLifetime\": 86400, \"sessionIdUnauthenticatedUnusedLifetime\": 120, \"sessionIdEnabled\": true, \"sessionIdPersistOnPromptNone\": true, \"sessionIdRequestParameterEnabled\": false, \"changeSessionIdOnAuthentication\": true, \"sessionIdPersistInCache\": false, \"sessionIdLifetime\": 86400, \"serverSessionIdLifetime\": 86400, \"configurationUpdateInterval\": 3600, \"enableClientGrantTypeUpdate\": true, \"dynamicGrantTypeDefault\": [ \"authorization_code\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:device_code\", \"client_credentials\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"implicit\" ], \"cssLocation\": null, \"jsLocation\": null, \"imgLocation\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"pairwiseIdType\": [ \"a\", \"l\", \"g\", \"o\", \"r\", \"i\", \"t\", \"h\", \"m\", \"i\", \"c\" ], \"pairwiseCalculationKey\": \"rYX4K1hkDOAc0ie6ESr6T4N2z\", \"pairwiseCalculationSalt\": \"1smvd6pswngMcjB4xVcMuIiuyH\", \"shareSubjectIdBetweenClientsWithSameSectorId\": true, \"webKeysStorage\": \"keystore\", \"dnName\": \"CN=Jans Auth CA Certificates\", \"keyStoreFile\": \"/etc/certs/jans-auth-keys.jks\", \"keyStoreSecret\": \"nXfbJvxuVRNi\", \"keySelectionStrategy\": \"OLDER\", \"oxElevenTestModeToken\": null, \"oxElevenGenerateKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/generateKey\", \"oxElevenSignEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/sign\", \"oxElevenVerifySignatureEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/verifySignature\", \"oxElevenDeleteKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/deleteKey\", \"introspectionAccessTokenMustHaveUmaProtectionScope\": false, \"endSessionWithAccessToken\": false, \"cookieDomain\": null, \"enabledOAuthAuditLogging\": null, \"jmsBrokerURISet\": null, \"jmsUserName\": null, \"jmsPassword\": null, \"clientWhiteList\": [ \"*\" ], \"clientBlackList\": [ \"*.attacker.com/*\" ], \"legacyIdTokenClaims\": false, \"customHeadersWithAuthorizationResponse\": true, \"frontChannelLogoutSessionSupported\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"updateUserLastLogonTime\": false, \"updateClientAccessTime\": false, \"logClientIdOnClientAuthentication\": true, \"logClientNameOnClientAuthentication\": false, \"disableJdkLogger\": true, \"authorizationRequestCustomAllowedParameters\": [ \"customParam2\", \"customParam3\", \"customParam1\" ], \"legacyDynamicRegistrationScopeParam\": false, \"openidScopeBackwardCompatibility\": false, \"disableU2fEndpoint\": false, \"useLocalCache\": true, \"fapiCompatibility\": false, \"forceIdTokenHintPrecense\": false, \"forceOfflineAccessScopeToEnableRefreshToken\": true, \"errorReasonEnabled\": false, \"removeRefreshTokensForClientOnLogout\": true, \"skipRefreshTokenDuringRefreshing\": false, \"refreshTokenExtendLifetimeOnRotation\": false, \"consentGatheringScriptBackwardCompatibility\": false, \"introspectionScriptBackwardCompatibility\": false, \"introspectionResponseScopesBackwardCompatibility\": false, \"softwareStatementValidationType\": \"script\", \"softwareStatementValidationClaimName\": null, \"authenticationProtectionConfiguration\": { \"attemptExpiration\": 15, \"maximumAllowedAttemptsWithoutDelay\": 4, \"delayTime\": 2, \"bruteForceProtectionEnabled\": false }, \"errorHandlingMethod\": \"internal\", \"keepAuthenticatorAttributesOnAcrChange\": false, \"deviceAuthzRequestExpiresIn\": 1800, \"deviceAuthzTokenPollInterval\": 5, \"deviceAuthzResponseTypeToProcessAuthz\": \"code\", \"backchannelClientId\": null, \"backchannelRedirectUri\": \"https://testjans.gluu.com/jans-auth/ciba/home.htm\", \"backchannelAuthenticationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-authorize\", \"backchannelDeviceRegistrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-deviceRegistration\", \"backchannelTokenDeliveryModesSupported\": [ \"poll\", \"ping\", \"push\" ], \"backchannelAuthenticationRequestSigningAlgValuesSupported\": null, \"backchannelUserCodeParameterSupported\": false, \"backchannelBindingMessagePattern\": \"^[a-zA-Z0-9]{4,8}$\", \"backchannelAuthenticationResponseExpiresIn\": 3600, \"backchannelAuthenticationResponseInterval\": 2, \"backchannelLoginHintClaims\": [ \"inum\", \"uid\", \"mail\" ], \"cibaEndUserNotificationConfig\": { \"apiKey\": null, \"authDomain\": null, \"databaseURL\": null, \"projectId\": null, \"storageBucket\": null, \"messagingSenderId\": null, \"appId\": null, \"notificationUrl\": null, \"notificationKey\": null, \"publicVapidKey\": null }, \"backchannelRequestsProcessorJobIntervalSec\": 5, \"backchannelRequestsProcessorJobChunkSize\": 100, \"cibaGrantLifeExtraTimeSec\": 180, \"cibaMaxExpirationTimeAllowedSec\": 1800, \"cibaEnabled\": false, \"discoveryCacheLifetimeInMinutes\": 60, \"httpLoggingEnabled\": false, \"httpLoggingExcludePaths\": null, \"externalLoggerConfiguration\": null, \"redirectUrisRegexEnabled\": false, \"useHighestLevelScriptIfAcrScriptNotFound\": true } Partially Modify Jans Auth Server Configuration Properties # Operation ID: patch-properties Description: Partially modifies Jans authorization server AppConfiguration properties. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's look at the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-jans-auth.json It will create a .json file in /tmp with schema. Let's modify this schema: nano /tmp/patch-jans-auth.json This schema has three properties; op , path & value . Let's perform a replace operation at cibaEnabled to change it from false to true . So, the .json file will look like this: [ { \"op\": \"replace\", \"path\": \"cibaEnabled\", \"value\": true } ] Don't forget to use square brackets ( [] ). Otherwise, it won't work. Now, let's do the operation. /opt/jans/jans-cli/config-cli.py --operation-id patch-properties --data /tmp/patch-jans-auth.json If you run the following command line, you must see that cibaEnabled is true :","title":"Janssen Authorization Server"},{"location":"user/using-jans-cli/cli-jans-authorization-server/#janssen-authorization-server","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode To get info about Jans Authorization Server operations: /opt/jans/jans-cli/config-cli.py --info ConfigurationProperties Operation ID: get-properties Description: Gets all Jans authorization server configuration properties. Operation ID: patch-properties Description: Partially modifies Jans authorization server AppConfiguration properties. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Jans Authorization server has two operations id to get/modify its properties.","title":"Janssen Authorization Server"},{"location":"user/using-jans-cli/cli-jans-authorization-server/#table-of-contents","text":"Janssen Authorization Server Table of Contents Get All Jans Auth Server Configuration Properties Partially Modify Jans Auth Server Configuration Properties","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-jans-authorization-server/#get-all-jans-auth-server-configuration-properties","text":"It returns all the information of the Jans Authorization server. /opt/jans/jans-cli/config-cli.py --operation-id get-properties Getting access token for scope https://jans.io/oauth/jans-auth-server/config/properties.readonly { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1\", \"authorizationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/authorize\", \"tokenEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/token\", \"tokenRevocationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/revoke\", \"userInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/userinfo\", \"clientInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/clientinfo\", \"checkSessionIFrame\": \"https://testjans.gluu.com/jans-auth/opiframe.htm\", \"endSessionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/end_session\", \"jwksUri\": \"https://testjans.gluu.com/jans-auth/restv1/jwks\", \"registrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/register\", \"openIdDiscoveryEndpoint\": \"https://testjans.gluu.com/.well-known/webfinger\", \"openIdConfigurationEndpoint\": \"https://testjans.gluu.com/.well-known/openid-configuration\", \"idGenerationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/id\", \"introspectionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/introspection\", \"deviceAuthzEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/device_authorization\", \"sessionAsJwt\": false, \"sectorIdentifierCacheLifetimeInMinutes\": 1440, \"umaConfigurationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/uma2-configuration\", \"umaRptAsJwt\": false, \"umaRptLifetime\": 3600, \"umaTicketLifetime\": 3600, \"umaPctLifetime\": 2592000, \"umaResourceLifetime\": 2592000, \"umaAddScopesAutomatically\": true, \"umaValidateClaimToken\": false, \"umaGrantAccessIfNoPolicies\": false, \"umaRestrictResourceToAssociatedClient\": false, \"spontaneousScopeLifetime\": 86400, \"openidSubAttribute\": \"inum\", \"responseTypesSupported\": [ \"['code', 'token']\", \"['id_token', 'code', 'token']\", \"['id_token']\", \"['code']\", \"['token']\", \"['id_token', 'code']\", \"['id_token', 'token']\" ], \"responseModesSupported\": [ \"query\", \"form_post\", \"fragment\" ], \"grantTypesSupported\": [ \"password\", \"authorization_code\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:device_code\", \"client_credentials\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"implicit\" ], \"subjectTypesSupported\": [ \"public\", \"pairwise\" ], \"defaultSubjectType\": [ \"p\", \"a\", \"i\", \"r\", \"w\", \"i\", \"s\", \"e\" ], \"userInfoSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"userInfoEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"userInfoEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"idTokenSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"idTokenEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"idTokenEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"requestObjectSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"requestObjectEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"requestObjectEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"tokenEndpointAuthMethodsSupported\": [ \"client_secret_basic\", \"client_secret_post\", \"client_secret_jwt\", \"private_key_jwt\", \"tls_client_auth\", \"self_signed_tls_client_auth\" ], \"tokenEndpointAuthSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"dynamicRegistrationCustomAttributes\": null, \"displayValuesSupported\": [ \"page\", \"popup\" ], \"claimTypesSupported\": [ \"normal\" ], \"jwksAlgorithmsSupported\": [ \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\", \"PS256\", \"PS384\", \"PS512\", \"RSA1_5\", \"RSA-OAEP\" ], \"serviceDocumentation\": [ \"h\", \"t\", \"t\", \"p\", \":\", \"/\", \"/\", \"j\", \"a\", \"n\", \"s\", \".\", \"o\", \"r\", \"g\", \"/\", \"d\", \"o\", \"c\", \"s\" ], \"claimsLocalesSupported\": [ \"en\" ], \"idTokenTokenBindingCnfValuesSupported\": [ \"tbh\" ], \"uiLocalesSupported\": [ \"en\", \"bg\", \"de\", \"es\", \"fr\", \"it\", \"ru\", \"tr\" ], \"claimsParameterSupported\": false, \"requestParameterSupported\": true, \"requestUriParameterSupported\": true, \"requestUriHashVerificationEnabled\": false, \"requireRequestUriRegistration\": false, \"opPolicyUri\": \"http://www.jans.io/doku.php?id=jans:policy\", \"opTosUri\": \"http://www.jans.io/doku.php?id=jans:tos\", \"authorizationCodeLifetime\": 60, \"refreshTokenLifetime\": 14400, \"idTokenLifetime\": 3600, \"idTokenFilterClaimsBasedOnAccessToken\": false, \"accessTokenLifetime\": 300, \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"cleanServiceBaseDns\": null, \"keyRegenerationEnabled\": true, \"keyRegenerationInterval\": 48, \"defaultSignatureAlgorithm\": [ \"R\", \"S\", \"2\", \"5\", \"6\" ], \"oxOpenIdConnectVersion\": \"openidconnect-1.0\", \"oxId\": \"https://testjans.gluu.com/oxid/service/jans/inum\", \"dynamicRegistrationEnabled\": true, \"dynamicRegistrationExpirationTime\": -1, \"dynamicRegistrationPersistClientAuthorizations\": true, \"trustedClientEnabled\": true, \"skipAuthorizationForOpenIdScopeAndPairwiseId\": false, \"dynamicRegistrationScopesParamEnabled\": true, \"dynamicRegistrationPasswordGrantTypeEnabled\": false, \"dynamicRegistrationAllowedPasswordGrantScopes\": null, \"dynamicRegistrationCustomObjectClass\": null, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"persistIdTokenInLdap\": false, \"persistRefreshTokenInLdap\": true, \"allowPostLogoutRedirectWithoutValidation\": false, \"invalidateSessionCookiesAfterAuthorizationFlow\": false, \"returnClientSecretOnRead\": true, \"rejectJwtWithNoneAlg\": true, \"expirationNotificatorEnabled\": false, \"useNestedJwtDuringEncryption\": true, \"expirationNotificatorMapSizeLimit\": 100000, \"expirationNotificatorIntervalInSeconds\": 600, \"authenticationFiltersEnabled\": false, \"clientAuthenticationFiltersEnabled\": false, \"clientRegDefaultToCodeFlowWithRefresh\": true, \"authenticationFilters\": [ { \"filter\": \"(&(mail=*{0}*)(inum={1}))\", \"bind\": false, \"bind-password-attribute\": null, \"base-dn\": null }, { \"filter\": \"uid={0}\", \"bind\": true, \"bind-password-attribute\": null, \"base-dn\": null } ], \"clientAuthenticationFilters\": [ { \"filter\": \"myCustomAttr1={0}\", \"bind\": null, \"bind-password-attribute\": null, \"base-dn\": null } ], \"corsConfigurationFilters\": [ { \"filterName\": \"CorsFilter\", \"corsEnabled\": true, \"corsAllowedOrigins\": \"*\", \"corsAllowedMethods\": \"GET,POST,HEAD,OPTIONS\", \"corsAllowedHeaders\": \"Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers\", \"corsExposedHeaders\": null, \"corsSupportCredentials\": true, \"corsLoggingEnabled\": false, \"corsPreflightMaxAge\": 1800, \"corsRequestDecorate\": true } ], \"sessionIdUnusedLifetime\": 86400, \"sessionIdUnauthenticatedUnusedLifetime\": 120, \"sessionIdEnabled\": true, \"sessionIdPersistOnPromptNone\": true, \"sessionIdRequestParameterEnabled\": false, \"changeSessionIdOnAuthentication\": true, \"sessionIdPersistInCache\": false, \"sessionIdLifetime\": 86400, \"serverSessionIdLifetime\": 86400, \"configurationUpdateInterval\": 3600, \"enableClientGrantTypeUpdate\": true, \"dynamicGrantTypeDefault\": [ \"authorization_code\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:device_code\", \"client_credentials\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"implicit\" ], \"cssLocation\": null, \"jsLocation\": null, \"imgLocation\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"pairwiseIdType\": [ \"a\", \"l\", \"g\", \"o\", \"r\", \"i\", \"t\", \"h\", \"m\", \"i\", \"c\" ], \"pairwiseCalculationKey\": \"rYX4K1hkDOAc0ie6ESr6T4N2z\", \"pairwiseCalculationSalt\": \"1smvd6pswngMcjB4xVcMuIiuyH\", \"shareSubjectIdBetweenClientsWithSameSectorId\": true, \"webKeysStorage\": \"keystore\", \"dnName\": \"CN=Jans Auth CA Certificates\", \"keyStoreFile\": \"/etc/certs/jans-auth-keys.jks\", \"keyStoreSecret\": \"nXfbJvxuVRNi\", \"keySelectionStrategy\": \"OLDER\", \"oxElevenTestModeToken\": null, \"oxElevenGenerateKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/generateKey\", \"oxElevenSignEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/sign\", \"oxElevenVerifySignatureEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/verifySignature\", \"oxElevenDeleteKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/deleteKey\", \"introspectionAccessTokenMustHaveUmaProtectionScope\": false, \"endSessionWithAccessToken\": false, \"cookieDomain\": null, \"enabledOAuthAuditLogging\": null, \"jmsBrokerURISet\": null, \"jmsUserName\": null, \"jmsPassword\": null, \"clientWhiteList\": [ \"*\" ], \"clientBlackList\": [ \"*.attacker.com/*\" ], \"legacyIdTokenClaims\": false, \"customHeadersWithAuthorizationResponse\": true, \"frontChannelLogoutSessionSupported\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"updateUserLastLogonTime\": false, \"updateClientAccessTime\": false, \"logClientIdOnClientAuthentication\": true, \"logClientNameOnClientAuthentication\": false, \"disableJdkLogger\": true, \"authorizationRequestCustomAllowedParameters\": [ \"customParam2\", \"customParam3\", \"customParam1\" ], \"legacyDynamicRegistrationScopeParam\": false, \"openidScopeBackwardCompatibility\": false, \"disableU2fEndpoint\": false, \"useLocalCache\": true, \"fapiCompatibility\": false, \"forceIdTokenHintPrecense\": false, \"forceOfflineAccessScopeToEnableRefreshToken\": true, \"errorReasonEnabled\": false, \"removeRefreshTokensForClientOnLogout\": true, \"skipRefreshTokenDuringRefreshing\": false, \"refreshTokenExtendLifetimeOnRotation\": false, \"consentGatheringScriptBackwardCompatibility\": false, \"introspectionScriptBackwardCompatibility\": false, \"introspectionResponseScopesBackwardCompatibility\": false, \"softwareStatementValidationType\": \"script\", \"softwareStatementValidationClaimName\": null, \"authenticationProtectionConfiguration\": { \"attemptExpiration\": 15, \"maximumAllowedAttemptsWithoutDelay\": 4, \"delayTime\": 2, \"bruteForceProtectionEnabled\": false }, \"errorHandlingMethod\": \"internal\", \"keepAuthenticatorAttributesOnAcrChange\": false, \"deviceAuthzRequestExpiresIn\": 1800, \"deviceAuthzTokenPollInterval\": 5, \"deviceAuthzResponseTypeToProcessAuthz\": \"code\", \"backchannelClientId\": null, \"backchannelRedirectUri\": \"https://testjans.gluu.com/jans-auth/ciba/home.htm\", \"backchannelAuthenticationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-authorize\", \"backchannelDeviceRegistrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-deviceRegistration\", \"backchannelTokenDeliveryModesSupported\": [ \"poll\", \"ping\", \"push\" ], \"backchannelAuthenticationRequestSigningAlgValuesSupported\": null, \"backchannelUserCodeParameterSupported\": false, \"backchannelBindingMessagePattern\": \"^[a-zA-Z0-9]{4,8}$\", \"backchannelAuthenticationResponseExpiresIn\": 3600, \"backchannelAuthenticationResponseInterval\": 2, \"backchannelLoginHintClaims\": [ \"inum\", \"uid\", \"mail\" ], \"cibaEndUserNotificationConfig\": { \"apiKey\": null, \"authDomain\": null, \"databaseURL\": null, \"projectId\": null, \"storageBucket\": null, \"messagingSenderId\": null, \"appId\": null, \"notificationUrl\": null, \"notificationKey\": null, \"publicVapidKey\": null }, \"backchannelRequestsProcessorJobIntervalSec\": 5, \"backchannelRequestsProcessorJobChunkSize\": 100, \"cibaGrantLifeExtraTimeSec\": 180, \"cibaMaxExpirationTimeAllowedSec\": 1800, \"cibaEnabled\": false, \"discoveryCacheLifetimeInMinutes\": 60, \"httpLoggingEnabled\": false, \"httpLoggingExcludePaths\": null, \"externalLoggerConfiguration\": null, \"redirectUrisRegexEnabled\": false, \"useHighestLevelScriptIfAcrScriptNotFound\": true }","title":"Get All Jans Auth Server Configuration Properties"},{"location":"user/using-jans-cli/cli-jans-authorization-server/#partially-modify-jans-auth-server-configuration-properties","text":"Operation ID: patch-properties Description: Partially modifies Jans authorization server AppConfiguration properties. Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's look at the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-jans-auth.json It will create a .json file in /tmp with schema. Let's modify this schema: nano /tmp/patch-jans-auth.json This schema has three properties; op , path & value . Let's perform a replace operation at cibaEnabled to change it from false to true . So, the .json file will look like this: [ { \"op\": \"replace\", \"path\": \"cibaEnabled\", \"value\": true } ] Don't forget to use square brackets ( [] ). Otherwise, it won't work. Now, let's do the operation. /opt/jans/jans-cli/config-cli.py --operation-id patch-properties --data /tmp/patch-jans-auth.json If you run the following command line, you must see that cibaEnabled is true :","title":"Partially Modify Jans Auth Server Configuration Properties"},{"location":"user/using-jans-cli/cli-janssen-fido2-configuration/","text":"Janssen FIDO2 Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode Using Janssen CLI, You can get/update Fido2 properties. To get the information of Janssen Fido2 CLI, run the following command: /opt/jans/jans-cli/config-cli.py --info ConfigurationFido2 Operation ID: get-properties-fido2 Description: Gets Jans Authorization Server Fido2 configuration properties. Operation ID: put-properties-fido2 Description: Updates Fido2 configuration properties. Schema: /components/schemas/JansFido2DynConfiguration To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JansFido2DynConfiguration Table of Contents # Janssen FIDO2 Configuration Find FIDO2 Configuration Properties Update FIDO2 Configuration Properties Find FIDO2 Configuration Properties # To get the properties of Janssen Fido2 Configuration, run below command: /opt/jans/jans-cli/config-cli.py --operation-id get-properties-fido2 It will return the result as below: Getting access token for scope https://jans.io/oauth/config/fido2.readonly { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": [] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } } Update FIDO2 Configuration Properties # To perform this operation, let's check the schema first. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JansFido2DynConfiguration > /tmp/fido2-schema.json This command will create a fido2 schema file on /tmp/ . You can edit this file depending on the requirements: Now let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-properties-fido2 --data /tmp/fido2-schema.json Getting access token for scope https://jans.io/oauth/config/fido2.write Server Response: { \"issuer\": \"https://server.example.com/\", \"baseEndpoint\": \"https://server.example.com/fido2/restv1\", \"cleanServiceInterval\": null, \"cleanServiceBatchChunkSize\": null, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"INFO\", \"loggingLayout\": null, \"externalLoggerConfiguration\": null, \"metricReporterInterval\": null, \"metricReporterKeepDataDays\": null, \"metricReporterEnabled\": true, \"personCustomObjectClassList\": [], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": null }, { \"name\": null, \"domains\": null } ], \"userAutoEnrollment\": true, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } } You may find that I have updated to logginglabel:INFO from NULL .","title":"Janssen FIDO2 Configuration"},{"location":"user/using-jans-cli/cli-janssen-fido2-configuration/#janssen-fido2-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Using Janssen CLI, You can get/update Fido2 properties. To get the information of Janssen Fido2 CLI, run the following command: /opt/jans/jans-cli/config-cli.py --info ConfigurationFido2 Operation ID: get-properties-fido2 Description: Gets Jans Authorization Server Fido2 configuration properties. Operation ID: put-properties-fido2 Description: Updates Fido2 configuration properties. Schema: /components/schemas/JansFido2DynConfiguration To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JansFido2DynConfiguration","title":"Janssen FIDO2 Configuration"},{"location":"user/using-jans-cli/cli-janssen-fido2-configuration/#table-of-contents","text":"Janssen FIDO2 Configuration Find FIDO2 Configuration Properties Update FIDO2 Configuration Properties","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-janssen-fido2-configuration/#find-fido2-configuration-properties","text":"To get the properties of Janssen Fido2 Configuration, run below command: /opt/jans/jans-cli/config-cli.py --operation-id get-properties-fido2 It will return the result as below: Getting access token for scope https://jans.io/oauth/config/fido2.readonly { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": [] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } }","title":"Find FIDO2 Configuration Properties"},{"location":"user/using-jans-cli/cli-janssen-fido2-configuration/#update-fido2-configuration-properties","text":"To perform this operation, let's check the schema first. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JansFido2DynConfiguration > /tmp/fido2-schema.json This command will create a fido2 schema file on /tmp/ . You can edit this file depending on the requirements: Now let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-properties-fido2 --data /tmp/fido2-schema.json Getting access token for scope https://jans.io/oauth/config/fido2.write Server Response: { \"issuer\": \"https://server.example.com/\", \"baseEndpoint\": \"https://server.example.com/fido2/restv1\", \"cleanServiceInterval\": null, \"cleanServiceBatchChunkSize\": null, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"INFO\", \"loggingLayout\": null, \"externalLoggerConfiguration\": null, \"metricReporterInterval\": null, \"metricReporterKeepDataDays\": null, \"metricReporterEnabled\": true, \"personCustomObjectClassList\": [], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": null }, { \"name\": null, \"domains\": null } ], \"userAutoEnrollment\": true, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } } You may find that I have updated to logginglabel:INFO from NULL .","title":"Update FIDO2 Configuration Properties"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/","text":"JSON Web Key (JWK) # Prerequisite: Know how to use the Janssen CLI in command-line mode This operation is used to get the JSON Web Key Set (JWKS) from OP host. The JWKS is a set of keys containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. There are few operations we can do using jans-cli commands. To get list of operations id run below command: /opt/jans/jans-cli/config-cli.py --info ConfigurationJWKJSONWebKeyJWK It returns operations id with details information. Operation ID: get-config-jwks Description: Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. Operation ID: put-config-jwks Description: Puts/replaces JSON Web Keys (JWKS). Schema: /components/schemas/WebKeysConfiguration Operation ID: patch-config-jwks Description: Patch JSON Web Keys (JWKS). Schema: Array of /components/schemas/PatchRequest Operation ID: post-config-jwks-key Description: Adds a new key to JSON Web Keys (JWKS). Schema: /components/schemas/JsonWebKey Operation ID: put-config-jwk-kid Description: Get a JSON Web Key based on kid url-suffix: kid Operation ID: patch-config-jwk-kid Description: Patch a specific JSON Web Key based on kid url-suffix: kid Schema: Array of /components/schemas/PatchRequest Operation ID: delete-config-jwk-kid Description: Delete a JSON Web Key based on kid url-suffix: kid To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's explore each of these operations. Get Configurations list of JWKs # We can get list of all configurations of the jwk configuration within a single command like this: /opt/jans/jans-cli/config-cli.py --operation-id get-config-jwks It will return all the jwk configuration information as below: Getting access token for scope https://jans.io/oauth/config/jwks.readonly { \"keys\": [ { \"kid\": \"8627c7e1-0702-4103-9c28-28ff6a818da9_sig_rs256\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS256\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAIi82XlGMTJRsn5djImvoD2wSLY1hkhPPUv2qaGjvC3IMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI1WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqpU+2D0eQTszq3iq7qIHm3ryYGIDd4+3WUwMyCJoV0dYDDKZwFxaZD9auW/9wsqQZnwJcpYuDt+sAYVfei7+1nLKZhuo1eRLQxpHzDTmAoQcuWAGDg5f0sL24qaO9n1zSNAcEt8pyRJVZ1VcCEePryNSoustDZX36Eh/1pAOVjHzlVXSWCMtlS5uG6VcWoCzbrQU/z8ittfWqSpk/hM6z9KO95JofuFm5JG3U6qMFiZdG5qp3dY2zQ8clpqtV4yqaMTD6mv3IiH3TGxo1PGS2UHCRWh6TLVp15ElLlGiaaC6LlYxIdxMgV2AV80718ROKQT8OieVY5Q2T+198lPUWwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAGGUO67E3UjQaaxGI2pIrau0A5qWF0SAMay2FI+o1xstud8+imkANjoqIQgWVpaZCR6I7q9rDHbaSHQy6uPHRBGVtV9izC+vr6+ohVjyFO/1K97FHQJxaR62X+qswFHot6RGFjQbMDEWQs/BMOfuojp7rvkRYjazdxqX2Obbp0cmHuaJV0iiZ71+k2VpoJrpdP/RI+3OdCWvV+fydNDrBXAi7JYNaqhx9wVoqVEeMAOCXbcjEe6YiYcU2WHPCD7DaeOzPgJimzc5ujyu30RFMVl5RYOMYgETt4g+fVKDuRcstQJaR5zowBUGaiXCjOfhfkWa2fFd9v4hg5Y7YCmOMtI=\" ], \"n\": \"qpU-2D0eQTszq3iq7qIHm3ryYGIDd4-3WUwMyCJoV0dYDDKZwFxaZD9auW_9wsqQZnwJcpYuDt-sAYVfei7-1nLKZhuo1eRLQxpHzDTmAoQcuWAGDg5f0sL24qaO9n1zSNAcEt8pyRJVZ1VcCEePryNSoustDZX36Eh_1pAOVjHzlVXSWCMtlS5uG6VcWoCzbrQU_z8ittfWqSpk_hM6z9KO95JofuFm5JG3U6qMFiZdG5qp3dY2zQ8clpqtV4yqaMTD6mv3IiH3TGxo1PGS2UHCRWh6TLVp15ElLlGiaaC6LlYxIdxMgV2AV80718ROKQT8OieVY5Q2T-198lPUWw\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"77e3dec8-8a3e-479b-bcfc-aa508e5d9825_sig_rs384\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS384\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAPMrnxSwxnvlx7up5juXI8j52fQQwbmdLtcooIjv7pC3MA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI2WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq415zmHRArQ9zD5YN44nG52yJI7FakkBUN/aYWNJSCk5Pq/0qc7tm3M6Jhqrz8XuOMfatqzOxG65i4s/kOwGmET+Mq+lJ416A9toUfGdZRHmint/spGOf5nUeWjXRxMOooVtafq0Ao2/WZnsBB4jfAI9F211pJv2MNcxJ1ZwLpNSoaJSrEgxQh3laIVBozEcikozSOVUj8CMfF+WJRo049nv+IazTwTg1ZS96WcAztIemqgjAoE80i9Y4DYNp1R97A9MtFcsLlEPjYyiGmt5SomRa1oo6gymMs3AHYBdYPY/U4iXMsNDBsG+8cbTz44fFTkWHeWSuTnP9z8aj32HFQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAKdot2Upc7jH4XfgqXFDCkD0ILB2Zu/HE1PG0UGetJiR0hHwQ64CebpBqa8ExCHxiCamGjck6mZOVQHphJ0bgG1svMBG4M/x//RZcFld9L+mlPVEeTDJY5K0cb1csbuziACF1MrZB4pvVIVZgywdGFm+EqJ0aHDr5ByP5foBwqR3e7nGbuu6xWJx1hbXOrnjOFUqlwtnq0Qy4ZNNKgAbVW7n1We44ceWhWb4UenM5Ee2+xy1y9hkETdyLfgSjRh75pAv/+BhLM98x8ozns5bZXMTMZXt49Pbr29x2axBObGwKpv7Suqqndaw09iwSDtzyNUMVnCU4C1ikrozC8KHGvE=\" ], \"n\": \"q415zmHRArQ9zD5YN44nG52yJI7FakkBUN_aYWNJSCk5Pq_0qc7tm3M6Jhqrz8XuOMfatqzOxG65i4s_kOwGmET-Mq-lJ416A9toUfGdZRHmint_spGOf5nUeWjXRxMOooVtafq0Ao2_WZnsBB4jfAI9F211pJv2MNcxJ1ZwLpNSoaJSrEgxQh3laIVBozEcikozSOVUj8CMfF-WJRo049nv-IazTwTg1ZS96WcAztIemqgjAoE80i9Y4DYNp1R97A9MtFcsLlEPjYyiGmt5SomRa1oo6gymMs3AHYBdYPY_U4iXMsNDBsG-8cbTz44fFTkWHeWSuTnP9z8aj32HFQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"cb0b2d29-0d2f-411f-9d47-5885cffad6e2_sig_rs512\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS512\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCTCCAfGgAwIBAgIgW10M3Wl7/TEDNK9DarGKNAFT+4E3HQfyJcVmh0e3s8gwDQYJKoZIhvcNAQENBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA1MjYyMzQ3MjdaFw0yMTA1MjgyMzQ3MzVaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDrEdrcsQGHM1T+7ZcpU46DbbxGTA2qM4T6FSFb2UEPyeD/zKnCcdOgM/598tSzsKZJrIR3ZQn1igzcJkm7gKqkn7Qbg3Thk+MZtX28S68YJSDonjdce1NkIn3fx3TsImBh2Le9iOJfkLRnwCFm1EnplahNZYmV6PyHZ9IChpC6XCoBa6+U6O/owL5iAS34XrRHKxJaECTJObI2Gydg1doEP8jSnU3EZChSwmRDCSE3IH7oiTIIISdhMhD5ZBWGZlPl73Mj8PzYUdWOU1ZqCDngCfBm+SGvXBJcSheJr4la9mnl0AtCnE3zwEGWLKBxhouDQvXYa6ELq8r3VbDBb+4VAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQ0FAAOCAQEAx8ykyU8CAE6IS+li9pRx/rStBNgvAyY8TiQDlpkBSPwA64KuKWZmSjmMqjZLtqCEIY5X9+GPAeEhFtBQYJVcxYAAWV7JnMrq6RuWmom1gHN8igOYEyBSwPWb9TS1kWrPYg/hD4p9kOlNAbbdEuid/NPWOZJ4uGA1+ViEY9D29dsYvPpPLBxf7XFVjXAkljefi3yREQzEpJ7/cerJW9WyYCeS0/Ahr8Yhn2txBwrniMwyMJPLb+KvLWfqPol0zsyHBwWIa2nygTHJ8mYftHGO26dxIef2kQAu5uUX7po4MXFUBkuUnrkqB2CfvjMq5cU5AATgtPDdmJjKMQ9ZjgGhNQ==\" ], \"n\": \"6xHa3LEBhzNU_u2XKVOOg228RkwNqjOE-hUhW9lBD8ng_8ypwnHToDP-ffLUs7CmSayEd2UJ9YoM3CZJu4CqpJ-0G4N04ZPjGbV9vEuvGCUg6J43XHtTZCJ938d07CJgYdi3vYjiX5C0Z8AhZtRJ6ZWoTWWJlej8h2fSAoaQulwqAWuvlOjv6MC-YgEt-F60RysSWhAkyTmyNhsnYNXaBD_I0p1NxGQoUsJkQwkhNyB-6IkyCCEnYTIQ-WQVhmZT5e9zI_D82FHVjlNWagg54AnwZvkhr1wSXEoXia-JWvZp5dALQpxN88BBliygcYaLg0L12GuhC6vK91WwwW_uFQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, ... ... ... ] Adds new JSON Web key (JWK) # In case we need to add new key, we can use this operation id. To add a new key, we need to follow the schema definition. If we look at the description, we can see a schema definition available. Operation ID: post-config-jwks-key Description: Adds a new key to JSON Web Keys (JWKS). Schema: /components/schemas/JsonWebKey So, let's get the schema file and update it with keys data: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JsonWebKey > /tmp/jwk.json { \"kid\": \"string\", \"kty\": \"string\", \"use\": \"string\", \"alg\": \"string\", \"crv\": null, \"exp\": \"integer\", \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } Let's update the json file; In our case, I have added sample data for testing purpose only. \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null Now let's post this keys into the list using below command: /opt/jans/jans-cli/config-cli.py --operation-id post-config-jwks-key --data /tmp/jwk.json Update / Replace JSON Web Key (JWK) # To update / replace any JWK configuration, let get the schema first. Operation ID: put-config-jwks Description: Puts/replaces JSON Web Keys (JWKS). Schema: /components/schemas/WebKeysConfiguration To get the schema file: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/WebKeysConfiguration > /tmp/path-jwk.json root@testjans:~# cat /tmp/path-jwk.json { \"keys\": { \"kid\": null, \"kty\": null, \"use\": null, \"alg\": null, \"crv\": null, \"exp\": null, \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } } It's a json file containing key-value pair. Each of these properties in the key is defined by the JWK specification RFC 7517 , and for algorithm-specific properties, in RFC 7518 . Properties # name Description kid It's a unique identifier for the key configuration. kty It's used to define the type of the specific cryptographic algorithms use This parameter identifies the intend use of the public key. sig for signature and enc for encryption alg The specific algorithm used with the key crv exp The exponent for the RSA public key. x5c The x5c parameter contains a chain of one or more PKIX certificates RFC5280 n The modulus for the RSA public key . e The \"e\" (exponent) parameter contains the exponent value for the RSA public key . It is represented as a Base64urlUInt-encoded value. x The \"x\" (x coordinate) parameter contains the x coordinate for the Elliptic Curve point . y The \"y\" (y coordinate) parameter contains the y coordinate for the Elliptic Curve point . If you want to explore more, please go through the reference link. Let's update the json file to create a new key configuration. { \"keys\": [{ \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null }] } Please remember if kid already matched then this will be replaced otherwise a new key configuration will be created in the Janssen server. Now let's put the updated data into the Janssen server. /opt/jans/jans-cli/config-cli.py --operation-id put-config-jwks --data /tmp/path-jwk.json Getting access token for scope https://jans.io/oauth/config/jwks.write Server Response: { \"keys\": [ { \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null } ] } Please remember, This operation replaces all JWKs having in the Janssen server with new ones. So, In this case, if you want to keep olds JWKs, you have to put them as well in the schema file. Get a JSON Web Key Based on kid # We know that get-config-jwks operation-id returns all the json web keys available in the Janssen Server. With this operation-id, We can get any specific jwk matched with kid. If we know the kid , we can simply use the below command: /opt/jans/jans-cli/config-cli.py --operation-id put-config-jwk-kid --url-suffix kid:new-key-test-id It returns the details as below: Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/jwks.readonly { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"enc\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : \"\" , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null } Patch JSON Web Key (JWK) by kid # With this operation id, we can modify JSON Web Keys partially of its properties. Operation ID: patch-config-jwks Description: Patch JSON Web Keys ( JWKS ) . Schema: Array of /components/schemas/PatchRequest In this case, We are going to a test data JWK that already added in jwk list of the Janssen server. { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"enc\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : \"\" , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null } We can see here kid is new-key-test-id . Before going to patch this key, let's define the schema first. In this example; We are going to change use from enc to sig . So our schema definition as below: [ { \"op\" : \"replace\" , \"path\" : \"use\" , \"value\" : \"sig\" } ] Please, remember, you can do multiple operation within a single command because this schema definition support array of multiple operations. Now let's do the operation with below command line. /opt/jans/jans-cli/config-cli.py --operation-id patch-config-jwk-kid --url-suffix kid:new-key-test-id --data /tmp/schema.json You need to change kid and data path according to your own. Updated Json Web Key: Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/jwks.write Server Respo nse : { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"sig\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : null , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null } We see it has replaced use from enc to sig . Please read about patch method , You can get some idea how this patch method works to modify particular properties of any task. Delete Json Web Key using kid # It's pretty simple to delete json web key using its kid . The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-jwk-kid --url-suffix kid:new-key-test-id It will delete the jwk if it matches with the given kid .","title":"JSON Web Key (JWK)"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#json-web-key-jwk","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode This operation is used to get the JSON Web Key Set (JWKS) from OP host. The JWKS is a set of keys containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. There are few operations we can do using jans-cli commands. To get list of operations id run below command: /opt/jans/jans-cli/config-cli.py --info ConfigurationJWKJSONWebKeyJWK It returns operations id with details information. Operation ID: get-config-jwks Description: Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. Operation ID: put-config-jwks Description: Puts/replaces JSON Web Keys (JWKS). Schema: /components/schemas/WebKeysConfiguration Operation ID: patch-config-jwks Description: Patch JSON Web Keys (JWKS). Schema: Array of /components/schemas/PatchRequest Operation ID: post-config-jwks-key Description: Adds a new key to JSON Web Keys (JWKS). Schema: /components/schemas/JsonWebKey Operation ID: put-config-jwk-kid Description: Get a JSON Web Key based on kid url-suffix: kid Operation ID: patch-config-jwk-kid Description: Patch a specific JSON Web Key based on kid url-suffix: kid Schema: Array of /components/schemas/PatchRequest Operation ID: delete-config-jwk-kid Description: Delete a JSON Web Key based on kid url-suffix: kid To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Let's explore each of these operations.","title":"JSON Web Key (JWK)"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#get-configurations-list-of-jwks","text":"We can get list of all configurations of the jwk configuration within a single command like this: /opt/jans/jans-cli/config-cli.py --operation-id get-config-jwks It will return all the jwk configuration information as below: Getting access token for scope https://jans.io/oauth/config/jwks.readonly { \"keys\": [ { \"kid\": \"8627c7e1-0702-4103-9c28-28ff6a818da9_sig_rs256\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS256\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAIi82XlGMTJRsn5djImvoD2wSLY1hkhPPUv2qaGjvC3IMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI1WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqpU+2D0eQTszq3iq7qIHm3ryYGIDd4+3WUwMyCJoV0dYDDKZwFxaZD9auW/9wsqQZnwJcpYuDt+sAYVfei7+1nLKZhuo1eRLQxpHzDTmAoQcuWAGDg5f0sL24qaO9n1zSNAcEt8pyRJVZ1VcCEePryNSoustDZX36Eh/1pAOVjHzlVXSWCMtlS5uG6VcWoCzbrQU/z8ittfWqSpk/hM6z9KO95JofuFm5JG3U6qMFiZdG5qp3dY2zQ8clpqtV4yqaMTD6mv3IiH3TGxo1PGS2UHCRWh6TLVp15ElLlGiaaC6LlYxIdxMgV2AV80718ROKQT8OieVY5Q2T+198lPUWwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAGGUO67E3UjQaaxGI2pIrau0A5qWF0SAMay2FI+o1xstud8+imkANjoqIQgWVpaZCR6I7q9rDHbaSHQy6uPHRBGVtV9izC+vr6+ohVjyFO/1K97FHQJxaR62X+qswFHot6RGFjQbMDEWQs/BMOfuojp7rvkRYjazdxqX2Obbp0cmHuaJV0iiZ71+k2VpoJrpdP/RI+3OdCWvV+fydNDrBXAi7JYNaqhx9wVoqVEeMAOCXbcjEe6YiYcU2WHPCD7DaeOzPgJimzc5ujyu30RFMVl5RYOMYgETt4g+fVKDuRcstQJaR5zowBUGaiXCjOfhfkWa2fFd9v4hg5Y7YCmOMtI=\" ], \"n\": \"qpU-2D0eQTszq3iq7qIHm3ryYGIDd4-3WUwMyCJoV0dYDDKZwFxaZD9auW_9wsqQZnwJcpYuDt-sAYVfei7-1nLKZhuo1eRLQxpHzDTmAoQcuWAGDg5f0sL24qaO9n1zSNAcEt8pyRJVZ1VcCEePryNSoustDZX36Eh_1pAOVjHzlVXSWCMtlS5uG6VcWoCzbrQU_z8ittfWqSpk_hM6z9KO95JofuFm5JG3U6qMFiZdG5qp3dY2zQ8clpqtV4yqaMTD6mv3IiH3TGxo1PGS2UHCRWh6TLVp15ElLlGiaaC6LlYxIdxMgV2AV80718ROKQT8OieVY5Q2T-198lPUWw\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"77e3dec8-8a3e-479b-bcfc-aa508e5d9825_sig_rs384\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS384\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAPMrnxSwxnvlx7up5juXI8j52fQQwbmdLtcooIjv7pC3MA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI2WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq415zmHRArQ9zD5YN44nG52yJI7FakkBUN/aYWNJSCk5Pq/0qc7tm3M6Jhqrz8XuOMfatqzOxG65i4s/kOwGmET+Mq+lJ416A9toUfGdZRHmint/spGOf5nUeWjXRxMOooVtafq0Ao2/WZnsBB4jfAI9F211pJv2MNcxJ1ZwLpNSoaJSrEgxQh3laIVBozEcikozSOVUj8CMfF+WJRo049nv+IazTwTg1ZS96WcAztIemqgjAoE80i9Y4DYNp1R97A9MtFcsLlEPjYyiGmt5SomRa1oo6gymMs3AHYBdYPY/U4iXMsNDBsG+8cbTz44fFTkWHeWSuTnP9z8aj32HFQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAKdot2Upc7jH4XfgqXFDCkD0ILB2Zu/HE1PG0UGetJiR0hHwQ64CebpBqa8ExCHxiCamGjck6mZOVQHphJ0bgG1svMBG4M/x//RZcFld9L+mlPVEeTDJY5K0cb1csbuziACF1MrZB4pvVIVZgywdGFm+EqJ0aHDr5ByP5foBwqR3e7nGbuu6xWJx1hbXOrnjOFUqlwtnq0Qy4ZNNKgAbVW7n1We44ceWhWb4UenM5Ee2+xy1y9hkETdyLfgSjRh75pAv/+BhLM98x8ozns5bZXMTMZXt49Pbr29x2axBObGwKpv7Suqqndaw09iwSDtzyNUMVnCU4C1ikrozC8KHGvE=\" ], \"n\": \"q415zmHRArQ9zD5YN44nG52yJI7FakkBUN_aYWNJSCk5Pq_0qc7tm3M6Jhqrz8XuOMfatqzOxG65i4s_kOwGmET-Mq-lJ416A9toUfGdZRHmint_spGOf5nUeWjXRxMOooVtafq0Ao2_WZnsBB4jfAI9F211pJv2MNcxJ1ZwLpNSoaJSrEgxQh3laIVBozEcikozSOVUj8CMfF-WJRo049nv-IazTwTg1ZS96WcAztIemqgjAoE80i9Y4DYNp1R97A9MtFcsLlEPjYyiGmt5SomRa1oo6gymMs3AHYBdYPY_U4iXMsNDBsG-8cbTz44fFTkWHeWSuTnP9z8aj32HFQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"cb0b2d29-0d2f-411f-9d47-5885cffad6e2_sig_rs512\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS512\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCTCCAfGgAwIBAgIgW10M3Wl7/TEDNK9DarGKNAFT+4E3HQfyJcVmh0e3s8gwDQYJKoZIhvcNAQENBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTA1MjYyMzQ3MjdaFw0yMTA1MjgyMzQ3MzVaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDrEdrcsQGHM1T+7ZcpU46DbbxGTA2qM4T6FSFb2UEPyeD/zKnCcdOgM/598tSzsKZJrIR3ZQn1igzcJkm7gKqkn7Qbg3Thk+MZtX28S68YJSDonjdce1NkIn3fx3TsImBh2Le9iOJfkLRnwCFm1EnplahNZYmV6PyHZ9IChpC6XCoBa6+U6O/owL5iAS34XrRHKxJaECTJObI2Gydg1doEP8jSnU3EZChSwmRDCSE3IH7oiTIIISdhMhD5ZBWGZlPl73Mj8PzYUdWOU1ZqCDngCfBm+SGvXBJcSheJr4la9mnl0AtCnE3zwEGWLKBxhouDQvXYa6ELq8r3VbDBb+4VAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQ0FAAOCAQEAx8ykyU8CAE6IS+li9pRx/rStBNgvAyY8TiQDlpkBSPwA64KuKWZmSjmMqjZLtqCEIY5X9+GPAeEhFtBQYJVcxYAAWV7JnMrq6RuWmom1gHN8igOYEyBSwPWb9TS1kWrPYg/hD4p9kOlNAbbdEuid/NPWOZJ4uGA1+ViEY9D29dsYvPpPLBxf7XFVjXAkljefi3yREQzEpJ7/cerJW9WyYCeS0/Ahr8Yhn2txBwrniMwyMJPLb+KvLWfqPol0zsyHBwWIa2nygTHJ8mYftHGO26dxIef2kQAu5uUX7po4MXFUBkuUnrkqB2CfvjMq5cU5AATgtPDdmJjKMQ9ZjgGhNQ==\" ], \"n\": \"6xHa3LEBhzNU_u2XKVOOg228RkwNqjOE-hUhW9lBD8ng_8ypwnHToDP-ffLUs7CmSayEd2UJ9YoM3CZJu4CqpJ-0G4N04ZPjGbV9vEuvGCUg6J43XHtTZCJ938d07CJgYdi3vYjiX5C0Z8AhZtRJ6ZWoTWWJlej8h2fSAoaQulwqAWuvlOjv6MC-YgEt-F60RysSWhAkyTmyNhsnYNXaBD_I0p1NxGQoUsJkQwkhNyB-6IkyCCEnYTIQ-WQVhmZT5e9zI_D82FHVjlNWagg54AnwZvkhr1wSXEoXia-JWvZp5dALQpxN88BBliygcYaLg0L12GuhC6vK91WwwW_uFQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, ... ... ... ]","title":"Get Configurations list of JWKs"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#adds-new-json-web-key-jwk","text":"In case we need to add new key, we can use this operation id. To add a new key, we need to follow the schema definition. If we look at the description, we can see a schema definition available. Operation ID: post-config-jwks-key Description: Adds a new key to JSON Web Keys (JWKS). Schema: /components/schemas/JsonWebKey So, let's get the schema file and update it with keys data: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/JsonWebKey > /tmp/jwk.json { \"kid\": \"string\", \"kty\": \"string\", \"use\": \"string\", \"alg\": \"string\", \"crv\": null, \"exp\": \"integer\", \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } Let's update the json file; In our case, I have added sample data for testing purpose only. \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null Now let's post this keys into the list using below command: /opt/jans/jans-cli/config-cli.py --operation-id post-config-jwks-key --data /tmp/jwk.json","title":"Adds new JSON Web key (JWK)"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#update-replace-json-web-key-jwk","text":"To update / replace any JWK configuration, let get the schema first. Operation ID: put-config-jwks Description: Puts/replaces JSON Web Keys (JWKS). Schema: /components/schemas/WebKeysConfiguration To get the schema file: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/WebKeysConfiguration > /tmp/path-jwk.json root@testjans:~# cat /tmp/path-jwk.json { \"keys\": { \"kid\": null, \"kty\": null, \"use\": null, \"alg\": null, \"crv\": null, \"exp\": null, \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } } It's a json file containing key-value pair. Each of these properties in the key is defined by the JWK specification RFC 7517 , and for algorithm-specific properties, in RFC 7518 .","title":"Update / Replace JSON Web Key (JWK)"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#properties","text":"name Description kid It's a unique identifier for the key configuration. kty It's used to define the type of the specific cryptographic algorithms use This parameter identifies the intend use of the public key. sig for signature and enc for encryption alg The specific algorithm used with the key crv exp The exponent for the RSA public key. x5c The x5c parameter contains a chain of one or more PKIX certificates RFC5280 n The modulus for the RSA public key . e The \"e\" (exponent) parameter contains the exponent value for the RSA public key . It is represented as a Base64urlUInt-encoded value. x The \"x\" (x coordinate) parameter contains the x coordinate for the Elliptic Curve point . y The \"y\" (y coordinate) parameter contains the y coordinate for the Elliptic Curve point . If you want to explore more, please go through the reference link. Let's update the json file to create a new key configuration. { \"keys\": [{ \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null }] } Please remember if kid already matched then this will be replaced otherwise a new key configuration will be created in the Janssen server. Now let's put the updated data into the Janssen server. /opt/jans/jans-cli/config-cli.py --operation-id put-config-jwks --data /tmp/path-jwk.json Getting access token for scope https://jans.io/oauth/config/jwks.write Server Response: { \"keys\": [ { \"kid\": \"dd550214-7969-41b9-b919-2a0cfa36047b_enc_rsa1_5\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1622245655163, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\": \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\", \"e\": \"AQAB\", \"x\": null, \"y\": null } ] } Please remember, This operation replaces all JWKs having in the Janssen server with new ones. So, In this case, if you want to keep olds JWKs, you have to put them as well in the schema file.","title":"Properties"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#get-a-json-web-key-based-on-kid","text":"We know that get-config-jwks operation-id returns all the json web keys available in the Janssen Server. With this operation-id, We can get any specific jwk matched with kid. If we know the kid , we can simply use the below command: /opt/jans/jans-cli/config-cli.py --operation-id put-config-jwk-kid --url-suffix kid:new-key-test-id It returns the details as below: Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/jwks.readonly { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"enc\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : \"\" , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null }","title":"Get a JSON Web Key Based on kid"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#patch-json-web-key-jwk-by-kid","text":"With this operation id, we can modify JSON Web Keys partially of its properties. Operation ID: patch-config-jwks Description: Patch JSON Web Keys ( JWKS ) . Schema: Array of /components/schemas/PatchRequest In this case, We are going to a test data JWK that already added in jwk list of the Janssen server. { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"enc\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : \"\" , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null } We can see here kid is new-key-test-id . Before going to patch this key, let's define the schema first. In this example; We are going to change use from enc to sig . So our schema definition as below: [ { \"op\" : \"replace\" , \"path\" : \"use\" , \"value\" : \"sig\" } ] Please, remember, you can do multiple operation within a single command because this schema definition support array of multiple operations. Now let's do the operation with below command line. /opt/jans/jans-cli/config-cli.py --operation-id patch-config-jwk-kid --url-suffix kid:new-key-test-id --data /tmp/schema.json You need to change kid and data path according to your own. Updated Json Web Key: Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/jwks.write Server Respo nse : { \"kid\" : \"new-key-test-id\" , \"kty\" : \"RSA\" , \"use\" : \"sig\" , \"alg\" : \"RSA-OAEP\" , \"crv\" : null , \"exp\" : 1622245655163 , \"x5c\" : [ \"MIIDCjCCAfKgAwIBAgIhANYLiviUTmgOsf9Bf+6N/pr6H4Mis5ku1VXNj7VW/CMbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwNTI2MjM0NzI5WhcNMjEwNTI4MjM0NzM1WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArlD19ib3J2bKYr2iap1d/gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx/CfHSgdEmACCXMiG7sQt80DPM67dlbtv/pEnWrHk4fwwst83OF+HXTSi4Sd9QWhDtBvaUu8Rp8ir+x2D0RK8YNGs0prA+qGR8O/h6Y+ascz4VNbbDlbJ+w7DJYeWU1HVp/5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y/9i8kf2pmznpu5QEDimj1yxEB+G5WEYuHD/+qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk/KKB7/KT0rEOn7T2rXW9QIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAKrtlIPhvDBxBfcqS9Xy39QqE1WOPiNQooa/FVVOsCROdRZrHhFcP27HpxO9e6genQSJ6nBRaJ4ykEf0oM535Ker5jZcDWzCwPIyt+5Kc6qeacZI5FxEHRldYkSd4lF1OTzQNvGLOPKnNWnYnXwj48ZxO50lJUsRFspVbP79E6llVNOPexrZ2GOzWghyY1E74f4uGr6fzcXQk2aFaIfLusoJlvbROPTnDu68Jt+IW4WZcO4F0tl0JIcuaqSmLS6McJW0Mpmu4wqEPV6E45zRAuX0kJUkKDMzM/lYW1MZ8QaSTt/pCmlknX1+KTgb6Sf9zZJEya8AyKML/NCpc4sfn8g=\" ], \"n\" : \"rlD19ib3J2bKYr2iap1d_gCmbXocMJTk5o7o3h9jJKXbh9pdf2gd3ZOE6wc5XwGx_CfHSgdEmACCXMiG7sQt80DPM67dlbtv_pEnWrHk4fwwst83OF-HXTSi4Sd9QWhDtBvaUu8Rp8ir-x2D0RK8YNGs0prA-qGR8O_h6Y-ascz4VNbbDlbJ-w7DJYeWU1HVp_5Lt8O5i4Q6I8KZEAytwvspF5y8m8DCrfYXF6Kz14vXgqr08hj0l0Aj4O3y_9i8kf2pmznpu5QEDimj1yxEB-G5WEYuHD_-qRTV85OXDIQJz6fgNM4kEimv7pmspcDfk_KKB7_KT0rEOn7T2rXW9Q\" , \"e\" : \"AQAB\" , \"x\" : null , \"y\" : null } We see it has replaced use from enc to sig . Please read about patch method , You can get some idea how this patch method works to modify particular properties of any task.","title":"Patch JSON Web Key (JWK) by kid"},{"location":"user/using-jans-cli/cli-jwk-json-web-key-jwk/#delete-json-web-key-using-kid","text":"It's pretty simple to delete json web key using its kid . The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-jwk-kid --url-suffix kid:new-key-test-id It will delete the jwk if it matches with the given kid .","title":"Delete Json Web Key using kid"},{"location":"user/using-jans-cli/cli-ldap-configuration/","text":"Lightweight Directory Active Protocol (LDAP) Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode As like as Interactive Menu , We can do the same operations here. Let's run the following command to get operation-id details of LDAP Database COnfiguration. /opt/jans/jans-cli/config-cli.py --info DatabaseLDAPConfiguration It comes with the following options: Operation ID: get-config-database-ldap Description: Gets list of existing LDAP configurations. Operation ID: post-config-database-ldap Description: Adds a new LDAP configuration. Schema: /components/schemas/LdapConfiguration Operation ID: put-config-database-ldap Description: Updates LDAP configuration. Schema: /components/schemas/LdapConfiguration Operation ID: get-config-database-ldap-by-name Description: Gets an LDAP configuration by name. url-suffix: name Operation ID: delete-config-database-ldap-by-name Description: Deletes an LDAP configuration. url-suffix: name Operation ID: patch-config-database-ldap-by-name Description: Partially modify an LDAP configuration. url-suffix: name Schema: Array of /components/schemas/PatchRequest Operation ID: post-config-database-ldap-test Description: Tests an LDAP configuration. Schema: /components/schemas/LdapConfiguration To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LdapConfiguration Get Existing LDAP Configurations # To find the existing ldap configurations, let's run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-ldap [ { \"configId\" : \"auth_ldap_server\" , \"bindDN\" : \"cn=directory manager\" , \"bindPassword\" : \"m+OTwmlCEho=\" , \"servers\" : [ \"localhost:1636\" ], \"maxConnections\" : 1000 , \"useSSL\" : true , \"baseDNs\" : [ \"ou=people,o=jans\" ], \"primaryKey\" : \"uid\" , \"localPrimaryKey\" : \"uid\" , \"useAnonymousBind\" : false , \"enabled\" : false , \"version\" : 0 , \"level\" : 0 } ] Adds a new LDAP Configuration # At first, we have checked the existing ldap database configurations the janssen server have. Indeed we can create a new ldap configuration as well. Operation ID: post-config-database-ldap Description: Adds a new LDAP configuration. Schema: /components/schemas/LdapConfiguration Let's get the schema file and update it to push into the server. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LdapConfiguration > /tmp/ldap.json { \"configId\": \"auth_ldap_server\", \"bindDN\": \"string\", \"bindPassword\": \"string\", \"servers\": \"array\", \"maxConnections\": 2, \"useSSL\": \"boolean\", \"baseDNs\": \"array\", \"primaryKey\": \"SAMAccountName,uid, email\", \"localPrimaryKey\": \"uid, email\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": null, \"level\": null } You need to modify ldap.json file with valid information. In our case, I have modified as below for testing only: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"password\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": \"true\", \"baseDNs\": [\"ou=people,o=jans\"], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Now, lets post this configuration into the database. /opt/jans/jans-cli/config-cli.py --operation-id post-config-database-ldap --data /tmp/ldap.json Getting access token for scope https://jans.io/oauth/config/database/ldap.write Server Response: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"m+OTwmlCEho=\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Please note that configId should be a unique identifier name for each configuration. Otherwise you will get error while going to post duplicate configuration into the server. In that case, you can go through the next option to replace instead of adding a new one. Updating LDAP Database Configurations # With this operation, we can update any ldap database configuration. Operation ID: put-config-database-ldap Description: Updates LDAP configuration. Schema: /components/schemas/LdapConfiguration For example, let say we are going to change to maxConnections in the above test_ldap configuration. So lets modify the /tmp/ldap.json file as below: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"Mh@006\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 100, \"useSSL\": \"true\", \"baseDNs\": [\"ou=people,o=jans\"], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Finally lets do the operation: /opt/jans/jans-cli/config-cli.oy --operation-id put-config-database-ldap --data /tmp/ldap.json It will update the configuration if match with its configId otherwise return an error. Gets LDAP Database Configuration by its name # In the above operation, we have updated test_ldap.json . Let's check the updated result with this operation by calling its name id. /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-ldap-by-name --url-suffix name:test_ldap Here name is the configId of the configuration. If we run this command, it returns the configuration details matched with configId. Getting access token for scope https://jans.io/oauth/config/database/ldap.readonly { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"3eFs1t1aRPsW4xtxvCiGQQ==\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 100, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Delete LDAP Database Configurations # In case, we need to delete any existing LDAP Database configuration we can do that as well. The command line: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-database-ldap-by-name --url-suffix name:test_ldap It will delete data ldap database configuration matched with the name. Patch LDAP Database Configurations # If required, We can patch single information of a ldap database configuration by using its name id. In that case, we have to make an array of operations in schema file. So, let's get the schema file first. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > patch.json We know already that this operation support three types of value op , path and value to be replaced. For more info visit this link For example, let's say, we want to change the level of the test_ldap configuration. So, Let's update the patch file as below: [ { \"op\": \"replace\", \"path\": \"level\", \"value\": \"100\" } ] To patch data, the command looks like for this: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-database-ldap-by-name --url-suffix name:test_ldap --data patch.json It will update the configuration and will show the updated result as below image on the display.","title":"Lightweight Directory Active Protocol (LDAP) Configuration"},{"location":"user/using-jans-cli/cli-ldap-configuration/#lightweight-directory-active-protocol-ldap-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode As like as Interactive Menu , We can do the same operations here. Let's run the following command to get operation-id details of LDAP Database COnfiguration. /opt/jans/jans-cli/config-cli.py --info DatabaseLDAPConfiguration It comes with the following options: Operation ID: get-config-database-ldap Description: Gets list of existing LDAP configurations. Operation ID: post-config-database-ldap Description: Adds a new LDAP configuration. Schema: /components/schemas/LdapConfiguration Operation ID: put-config-database-ldap Description: Updates LDAP configuration. Schema: /components/schemas/LdapConfiguration Operation ID: get-config-database-ldap-by-name Description: Gets an LDAP configuration by name. url-suffix: name Operation ID: delete-config-database-ldap-by-name Description: Deletes an LDAP configuration. url-suffix: name Operation ID: patch-config-database-ldap-by-name Description: Partially modify an LDAP configuration. url-suffix: name Schema: Array of /components/schemas/PatchRequest Operation ID: post-config-database-ldap-test Description: Tests an LDAP configuration. Schema: /components/schemas/LdapConfiguration To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LdapConfiguration","title":"Lightweight Directory Active Protocol (LDAP) Configuration"},{"location":"user/using-jans-cli/cli-ldap-configuration/#get-existing-ldap-configurations","text":"To find the existing ldap configurations, let's run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-ldap [ { \"configId\" : \"auth_ldap_server\" , \"bindDN\" : \"cn=directory manager\" , \"bindPassword\" : \"m+OTwmlCEho=\" , \"servers\" : [ \"localhost:1636\" ], \"maxConnections\" : 1000 , \"useSSL\" : true , \"baseDNs\" : [ \"ou=people,o=jans\" ], \"primaryKey\" : \"uid\" , \"localPrimaryKey\" : \"uid\" , \"useAnonymousBind\" : false , \"enabled\" : false , \"version\" : 0 , \"level\" : 0 } ]","title":"Get Existing LDAP Configurations"},{"location":"user/using-jans-cli/cli-ldap-configuration/#adds-a-new-ldap-configuration","text":"At first, we have checked the existing ldap database configurations the janssen server have. Indeed we can create a new ldap configuration as well. Operation ID: post-config-database-ldap Description: Adds a new LDAP configuration. Schema: /components/schemas/LdapConfiguration Let's get the schema file and update it to push into the server. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LdapConfiguration > /tmp/ldap.json { \"configId\": \"auth_ldap_server\", \"bindDN\": \"string\", \"bindPassword\": \"string\", \"servers\": \"array\", \"maxConnections\": 2, \"useSSL\": \"boolean\", \"baseDNs\": \"array\", \"primaryKey\": \"SAMAccountName,uid, email\", \"localPrimaryKey\": \"uid, email\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": null, \"level\": null } You need to modify ldap.json file with valid information. In our case, I have modified as below for testing only: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"password\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": \"true\", \"baseDNs\": [\"ou=people,o=jans\"], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Now, lets post this configuration into the database. /opt/jans/jans-cli/config-cli.py --operation-id post-config-database-ldap --data /tmp/ldap.json Getting access token for scope https://jans.io/oauth/config/database/ldap.write Server Response: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"m+OTwmlCEho=\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Please note that configId should be a unique identifier name for each configuration. Otherwise you will get error while going to post duplicate configuration into the server. In that case, you can go through the next option to replace instead of adding a new one.","title":"Adds a new LDAP Configuration"},{"location":"user/using-jans-cli/cli-ldap-configuration/#updating-ldap-database-configurations","text":"With this operation, we can update any ldap database configuration. Operation ID: put-config-database-ldap Description: Updates LDAP configuration. Schema: /components/schemas/LdapConfiguration For example, let say we are going to change to maxConnections in the above test_ldap configuration. So lets modify the /tmp/ldap.json file as below: { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"Mh@006\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 100, \"useSSL\": \"true\", \"baseDNs\": [\"ou=people,o=jans\"], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } Finally lets do the operation: /opt/jans/jans-cli/config-cli.oy --operation-id put-config-database-ldap --data /tmp/ldap.json It will update the configuration if match with its configId otherwise return an error.","title":"Updating LDAP Database Configurations"},{"location":"user/using-jans-cli/cli-ldap-configuration/#gets-ldap-database-configuration-by-its-name","text":"In the above operation, we have updated test_ldap.json . Let's check the updated result with this operation by calling its name id. /opt/jans/jans-cli/config-cli.py --operation-id get-config-database-ldap-by-name --url-suffix name:test_ldap Here name is the configId of the configuration. If we run this command, it returns the configuration details matched with configId. Getting access token for scope https://jans.io/oauth/config/database/ldap.readonly { \"configId\": \"test_ldap\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"3eFs1t1aRPsW4xtxvCiGQQ==\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 100, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 }","title":"Gets LDAP Database Configuration by its name"},{"location":"user/using-jans-cli/cli-ldap-configuration/#delete-ldap-database-configurations","text":"In case, we need to delete any existing LDAP Database configuration we can do that as well. The command line: /opt/jans/jans-cli/config-cli.py --operation-id delete-config-database-ldap-by-name --url-suffix name:test_ldap It will delete data ldap database configuration matched with the name.","title":"Delete LDAP Database Configurations"},{"location":"user/using-jans-cli/cli-ldap-configuration/#patch-ldap-database-configurations","text":"If required, We can patch single information of a ldap database configuration by using its name id. In that case, we have to make an array of operations in schema file. So, let's get the schema file first. /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > patch.json We know already that this operation support three types of value op , path and value to be replaced. For more info visit this link For example, let's say, we want to change the level of the test_ldap configuration. So, Let's update the patch file as below: [ { \"op\": \"replace\", \"path\": \"level\", \"value\": \"100\" } ] To patch data, the command looks like for this: /opt/jans/jans-cli/config-cli.py --operation-id patch-config-database-ldap-by-name --url-suffix name:test_ldap --data patch.json It will update the configuration and will show the updated result as below image on the display.","title":"Patch LDAP Database Configurations"},{"location":"user/using-jans-cli/cli-logging-configuration/","text":"Log Management # Prerequisite: Know how to use the Janssen CLI in command-line mode To view/update logging configuration, let's get the information of logging Configuration. /opt/jans/jans-cli/config-cli.py --info ConfigurationLogging Operation ID: get-config-logging Description: Returns Jans Authorization Server logging settings. Operation ID: put-config-logging Description: Updates Jans Authorization Server logging settings. Schema: /components/schemas/LoggingConfiguration To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LoggingConfiguration Table of Contents # Log Management Find Logging Configuration Update Logging Configuration Find Logging Configuration # /opt/jans/jans-cli/config-cli.py --operation-id get-config-logging Getting access token for scope https://jans.io/oauth/config/logging.readonly { \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"httpLoggingEnabled\": false, \"disableJdkLogger\": true, \"enabledOAuthAuditLogging\": false, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": null } Update Logging Configuration # To update logging configuration, get the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LoggingConfiguration > /tmp/log-config.json { \"loggingLevel\": \"FATAL\", \"loggingLayout\": \"text\", \"httpLoggingEnabled\": true, \"disableJdkLogger\": true, \"enabledOAuthAuditLogging\": false, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": [ \"/auth/img\", \"/auth/stylesheet\" ] } let's update the schema: nano /tmp/log-config.json Here I have updated loggingLevel to DEBUG and enabledOAuditLogging to true as below image. Let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-config-logging --data /tmp/log-config.json You will get the updated result as below: Getting access token for scope https://jans.io/oauth/config/logging.write Server Response: { \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"json\", \"httpLoggingEnabled\": false, \"disableJdkLogger\": false, \"enabledOAuthAuditLogging\": true, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": [ \"/auth/img\", \"/auth/stylesheet\" ] }","title":"Log Management"},{"location":"user/using-jans-cli/cli-logging-configuration/#log-management","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode To view/update logging configuration, let's get the information of logging Configuration. /opt/jans/jans-cli/config-cli.py --info ConfigurationLogging Operation ID: get-config-logging Description: Returns Jans Authorization Server logging settings. Operation ID: put-config-logging Description: Updates Jans Authorization Server logging settings. Schema: /components/schemas/LoggingConfiguration To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LoggingConfiguration","title":"Log Management"},{"location":"user/using-jans-cli/cli-logging-configuration/#table-of-contents","text":"Log Management Find Logging Configuration Update Logging Configuration","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-logging-configuration/#find-logging-configuration","text":"/opt/jans/jans-cli/config-cli.py --operation-id get-config-logging Getting access token for scope https://jans.io/oauth/config/logging.readonly { \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"httpLoggingEnabled\": false, \"disableJdkLogger\": true, \"enabledOAuthAuditLogging\": false, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": null }","title":"Find Logging Configuration"},{"location":"user/using-jans-cli/cli-logging-configuration/#update-logging-configuration","text":"To update logging configuration, get the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/LoggingConfiguration > /tmp/log-config.json { \"loggingLevel\": \"FATAL\", \"loggingLayout\": \"text\", \"httpLoggingEnabled\": true, \"disableJdkLogger\": true, \"enabledOAuthAuditLogging\": false, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": [ \"/auth/img\", \"/auth/stylesheet\" ] } let's update the schema: nano /tmp/log-config.json Here I have updated loggingLevel to DEBUG and enabledOAuditLogging to true as below image. Let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id put-config-logging --data /tmp/log-config.json You will get the updated result as below: Getting access token for scope https://jans.io/oauth/config/logging.write Server Response: { \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"json\", \"httpLoggingEnabled\": false, \"disableJdkLogger\": false, \"enabledOAuthAuditLogging\": true, \"externalLoggerConfiguration\": null, \"httpLoggingExcludePaths\": [ \"/auth/img\", \"/auth/stylesheet\" ] }","title":"Update Logging Configuration"},{"location":"user/using-jans-cli/cli-oauthscopes/","text":"OAuth Scopes # Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get information for a task OAuthScopes /opt/jans/jans-cli/config-cli.py --info OAuthScopes Operation ID: get-oauth-scopes Description: Gets list of Scopes. Optionally type to filter the scope, max-size of the result and pattern can be provided. Parameters: type: Scope type. [string] limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-scopes Description: Create Scope. Schema: /components/schemas/Scope Operation ID: put-oauth-scopes Description: Updates existing Scope. Schema: /components/schemas/Scope Operation ID: get-oauth-scopes-by-inum Description: Get Scope by Inum url-suffix: inum Operation ID: delete-oauth-scopes-by-inum Description: Delete Scope. url-suffix: inum Operation ID: patch-oauth-scopes-by-id Description: Update modified attributes of existing Scope by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Find/View OAuth Scopes # Operations will be done with Operation ID . Some operations may take parameters, let's retrieve 3 scopes ( limit ) that has view in it's description ( pattern ) and type openid : /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes --endpoint-args limit:3,pattern:view,type:openid ``` It will return: ``` Getting access token for scope https://jans.io/oauth/config/scopes.readonly Calling with params limit=3&pattern=view&type=openid [ { \"dn\": \"inum=43F1,ou=scopes,o=jans\", \"id\": \"profile\", \"inum\": \"43F1\", \"displayName\": null, \"description\": \"View your basic profile info.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=2B29,ou=attributes,o=jans\", \"inum=0C85,ou=attributes,o=jans\", \"inum=B4B0,ou=attributes,o=jans\", \"inum=A0E8,ou=attributes,o=jans\", \"inum=5EC6,ou=attributes,o=jans\", \"inum=B52A,ou=attributes,o=jans\", \"inum=64A0,ou=attributes,o=jans\", \"inum=EC3A,ou=attributes,o=jans\", \"inum=3B47,ou=attributes,o=jans\", \"inum=3692,ou=attributes,o=jans\", \"inum=98FC,ou=attributes,o=jans\", \"inum=A901,ou=attributes,o=jans\", \"inum=36D9,ou=attributes,o=jans\", \"inum=BE64,ou=attributes,o=jans\", \"inum=6493,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } }, { \"dn\": \"inum=C17A,ou=scopes,o=jans\", \"id\": \"address\", \"inum\": \"C17A\", \"displayName\": null, \"description\": \"View your address.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=27DB,ou=attributes,o=jans\", \"inum=2A3D,ou=attributes,o=jans\", \"inum=6609,ou=attributes,o=jans\", \"inum=6EEB,ou=attributes,o=jans\", \"inum=BCE8,ou=attributes,o=jans\", \"inum=D90B,ou=attributes,o=jans\", \"inum=E6B8,ou=attributes,o=jans\", \"inum=E999,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } }, { \"dn\": \"inum=764C,ou=scopes,o=jans\", \"id\": \"email\", \"inum\": \"764C\", \"displayName\": null, \"description\": \"View your email address.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=8F88,ou=attributes,o=jans\", \"inum=CAE3,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } ] Create an OAuth Scope # Let's create a scope. Remember when we queried info for a task OAuthScopes it printed: Operation ID: post-oauth-scopes Description: Create Scope. Schema: /components/schemas/Scope Thus, we can get sample schema and use Operation ID post-oauth-scopes . Lets get sample schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/Scope > /tmp/scope.json Now edit file tmp/scope.json with an editor (like nano ). As an example we just filled the following properties: \"id\": \"TestScopeID\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", It is time to post the data: /opt/jans/jans-cli/config-cli.py --operation-id post-oauth-scopes --data /tmp/scope.json Getting access token for scope https://jans.io/oauth/config/scopes.write Server Response: { \"dn\": \"inum=112116fd-257b-40d8-a2c9-0c23536680ed,ou=scopes,o=jans\", \"id\": \"TestScopeID\", \"inum\": \"112116fd-257b-40d8-a2c9-0c23536680ed\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": true, \"scopeType\": \"openid\", \"claims\": null, \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } It created scope with inum 112116fd-257b-40d8-a2c9-0c23536680ed and returned current data. Update Existing OAuth Scopes # In case we need to update an existing OAuth Scope, we can do that as well. To update an existing OAuth Scope, we have to create a json file with updated details. You can get the schema file as well to understand the format of the OAuth Scope JSON file. This is an existing OAuth Scope we are going to update. { \"dn\": \"inum=5c3ba3f0-d2ce-4974-9efb-883697d929d1,ou=scopes,o=jans\", \"inum\": \"5c3ba3f0-d2ce-4974-9efb-883697d929d1\", \"displayName\": \"TestScope\", \"id\": \"TestScopeID\", \"iconUrl\": null, \"description\": \"TestScope for jans-cli\", \"scopeType\": \"dynamic\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": false }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } We have changed only the scopeType to openid . The updated data: { \"dn\": \"inum=5c3ba3f0-d2ce-4974-9efb-883697d929d1,ou=scopes,o=jans\", \"inum\": \"5c3ba3f0-d2ce-4974-9efb-883697d929d1\", \"displayName\": \"TestScope\", \"id\": \"TestScopeID\", \"iconUrl\": null, \"description\": \"TestScope for jans-cli\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": false }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } The command line is: /opt/jans/jans-cli/config-cli.py --operation-id put-oauth-scopes --data /tmp/scope.json This will updated the existing oauth scopes matched with inum value. Patch OAuth Scopes by inum # Let's update iconUrl with patch method. So we need a schema for the patch method. Remember when we queried info for the task OAuthScopes it printed: Operation ID: patch-oauth-scopes-by-id Description: Update modified attributes of existing Scope by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest ``` This means we need schema `/components/schemas/PatchRequest`, be careful it states **Array of**, so we will make an array of this schema, in case you need multiple changes with patch method, you can put as many as of this schema into array. To know more about `PatchRequest` schema, please visit this [link](cli-index.md#patch-request-schema). Let's Get schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch.json We can edit this json as follows (remember to make it an array): ![jans-cl Edit patch.json](../../assets/user/using-jans-cli/images/image-cl-oauthscope-patch-json-03042021.png) Let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-oauth-scopes-by-id --url-suffix inum:112116fd-257b-40d8-a2c9-0c23536680ed --data /tmp/patch.json Getting access token for scope https://jans.io/oauth/config/scopes.write Server Response: { \"dn\": \"inum=112116fd-257b-40d8-a2c9-0c23536680ed,ou=scopes,o=jans\", \"id\": \"TestScopeID\", \"inum\": \"112116fd-257b-40d8-a2c9-0c23536680ed\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", \"iconUrl\": \"https://www.jans.io/icon.png\", \"authorizationPolicies\": null, \"defaultScope\": true, \"scopeType\": \"openid\", \"claims\": null, \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } ## Find OAuth Scopes by `inum` In case We know the `inum` value of an OAuth Scope, We can get the details of that scope. Operation ID: get-oauth-scopes-by-inum Description: Get Scope by Inum url-suffix: inum We can see that, the `url-suffix` here for `inum` value. And the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes-by-inum --url-suffix inum:value For example: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes-by-inum --url-suffix inum:C4F6 It returns the details of the scope matched with the `inum` value. { \"dn\": \"inum=C4F6,ou=scopes,o=jans\", \"inum\": \"C4F6\", \"displayName\": \"refresh_token\", \"id\": \"offline_access\", \"iconUrl\": null, \"description\": \"This scope value requests that an OAuth 2.0 Refresh Token be issued.\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } That's it. ## Delete OAuth Scopes by `inum` You can delete any OAuth Scopes by its `inum` value. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-oauth-scopes-by-inum --url-suffix inum:f9a7add1-04ca-432c-84d4-cb127e84bd48 ``` Just change the inum value to your own according to which one you want to delete.","title":"OAuth Scopes"},{"location":"user/using-jans-cli/cli-oauthscopes/#oauth-scopes","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get information for a task OAuthScopes /opt/jans/jans-cli/config-cli.py --info OAuthScopes Operation ID: get-oauth-scopes Description: Gets list of Scopes. Optionally type to filter the scope, max-size of the result and pattern can be provided. Parameters: type: Scope type. [string] limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-scopes Description: Create Scope. Schema: /components/schemas/Scope Operation ID: put-oauth-scopes Description: Updates existing Scope. Schema: /components/schemas/Scope Operation ID: get-oauth-scopes-by-inum Description: Get Scope by Inum url-suffix: inum Operation ID: delete-oauth-scopes-by-inum Description: Delete Scope. url-suffix: inum Operation ID: patch-oauth-scopes-by-id Description: Update modified attributes of existing Scope by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample schema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest","title":"OAuth Scopes"},{"location":"user/using-jans-cli/cli-oauthscopes/#findview-oauth-scopes","text":"Operations will be done with Operation ID . Some operations may take parameters, let's retrieve 3 scopes ( limit ) that has view in it's description ( pattern ) and type openid : /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes --endpoint-args limit:3,pattern:view,type:openid ``` It will return: ``` Getting access token for scope https://jans.io/oauth/config/scopes.readonly Calling with params limit=3&pattern=view&type=openid [ { \"dn\": \"inum=43F1,ou=scopes,o=jans\", \"id\": \"profile\", \"inum\": \"43F1\", \"displayName\": null, \"description\": \"View your basic profile info.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=2B29,ou=attributes,o=jans\", \"inum=0C85,ou=attributes,o=jans\", \"inum=B4B0,ou=attributes,o=jans\", \"inum=A0E8,ou=attributes,o=jans\", \"inum=5EC6,ou=attributes,o=jans\", \"inum=B52A,ou=attributes,o=jans\", \"inum=64A0,ou=attributes,o=jans\", \"inum=EC3A,ou=attributes,o=jans\", \"inum=3B47,ou=attributes,o=jans\", \"inum=3692,ou=attributes,o=jans\", \"inum=98FC,ou=attributes,o=jans\", \"inum=A901,ou=attributes,o=jans\", \"inum=36D9,ou=attributes,o=jans\", \"inum=BE64,ou=attributes,o=jans\", \"inum=6493,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } }, { \"dn\": \"inum=C17A,ou=scopes,o=jans\", \"id\": \"address\", \"inum\": \"C17A\", \"displayName\": null, \"description\": \"View your address.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=27DB,ou=attributes,o=jans\", \"inum=2A3D,ou=attributes,o=jans\", \"inum=6609,ou=attributes,o=jans\", \"inum=6EEB,ou=attributes,o=jans\", \"inum=BCE8,ou=attributes,o=jans\", \"inum=D90B,ou=attributes,o=jans\", \"inum=E6B8,ou=attributes,o=jans\", \"inum=E999,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } }, { \"dn\": \"inum=764C,ou=scopes,o=jans\", \"id\": \"email\", \"inum\": \"764C\", \"displayName\": null, \"description\": \"View your email address.\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": false, \"scopeType\": \"openid\", \"claims\": [ \"inum=8F88,ou=attributes,o=jans\", \"inum=CAE3,ou=attributes,o=jans\" ], \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } ]","title":"Find/View OAuth Scopes"},{"location":"user/using-jans-cli/cli-oauthscopes/#create-an-oauth-scope","text":"Let's create a scope. Remember when we queried info for a task OAuthScopes it printed: Operation ID: post-oauth-scopes Description: Create Scope. Schema: /components/schemas/Scope Thus, we can get sample schema and use Operation ID post-oauth-scopes . Lets get sample schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/Scope > /tmp/scope.json Now edit file tmp/scope.json with an editor (like nano ). As an example we just filled the following properties: \"id\": \"TestScopeID\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", It is time to post the data: /opt/jans/jans-cli/config-cli.py --operation-id post-oauth-scopes --data /tmp/scope.json Getting access token for scope https://jans.io/oauth/config/scopes.write Server Response: { \"dn\": \"inum=112116fd-257b-40d8-a2c9-0c23536680ed,ou=scopes,o=jans\", \"id\": \"TestScopeID\", \"inum\": \"112116fd-257b-40d8-a2c9-0c23536680ed\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", \"iconUrl\": null, \"authorizationPolicies\": null, \"defaultScope\": true, \"scopeType\": \"openid\", \"claims\": null, \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } It created scope with inum 112116fd-257b-40d8-a2c9-0c23536680ed and returned current data.","title":"Create an OAuth Scope"},{"location":"user/using-jans-cli/cli-oauthscopes/#update-existing-oauth-scopes","text":"In case we need to update an existing OAuth Scope, we can do that as well. To update an existing OAuth Scope, we have to create a json file with updated details. You can get the schema file as well to understand the format of the OAuth Scope JSON file. This is an existing OAuth Scope we are going to update. { \"dn\": \"inum=5c3ba3f0-d2ce-4974-9efb-883697d929d1,ou=scopes,o=jans\", \"inum\": \"5c3ba3f0-d2ce-4974-9efb-883697d929d1\", \"displayName\": \"TestScope\", \"id\": \"TestScopeID\", \"iconUrl\": null, \"description\": \"TestScope for jans-cli\", \"scopeType\": \"dynamic\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": false }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } We have changed only the scopeType to openid . The updated data: { \"dn\": \"inum=5c3ba3f0-d2ce-4974-9efb-883697d929d1,ou=scopes,o=jans\", \"inum\": \"5c3ba3f0-d2ce-4974-9efb-883697d929d1\", \"displayName\": \"TestScope\", \"id\": \"TestScopeID\", \"iconUrl\": null, \"description\": \"TestScope for jans-cli\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": false }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } The command line is: /opt/jans/jans-cli/config-cli.py --operation-id put-oauth-scopes --data /tmp/scope.json This will updated the existing oauth scopes matched with inum value.","title":"Update Existing OAuth Scopes"},{"location":"user/using-jans-cli/cli-oauthscopes/#patch-oauth-scopes-by-inum","text":"Let's update iconUrl with patch method. So we need a schema for the patch method. Remember when we queried info for the task OAuthScopes it printed: Operation ID: patch-oauth-scopes-by-id Description: Update modified attributes of existing Scope by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest ``` This means we need schema `/components/schemas/PatchRequest`, be careful it states **Array of**, so we will make an array of this schema, in case you need multiple changes with patch method, you can put as many as of this schema into array. To know more about `PatchRequest` schema, please visit this [link](cli-index.md#patch-request-schema). Let's Get schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch.json We can edit this json as follows (remember to make it an array): ![jans-cl Edit patch.json](../../assets/user/using-jans-cli/images/image-cl-oauthscope-patch-json-03042021.png) Let's do the operation: /opt/jans/jans-cli/config-cli.py --operation-id patch-oauth-scopes-by-id --url-suffix inum:112116fd-257b-40d8-a2c9-0c23536680ed --data /tmp/patch.json Getting access token for scope https://jans.io/oauth/config/scopes.write Server Response: { \"dn\": \"inum=112116fd-257b-40d8-a2c9-0c23536680ed,ou=scopes,o=jans\", \"id\": \"TestScopeID\", \"inum\": \"112116fd-257b-40d8-a2c9-0c23536680ed\", \"displayName\": \"TestScope\", \"description\": \"Test Scope created by jans-cli\", \"iconUrl\": \"https://www.jans.io/icon.png\", \"authorizationPolicies\": null, \"defaultScope\": true, \"scopeType\": \"openid\", \"claims\": null, \"umaType\": false, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true } } ## Find OAuth Scopes by `inum` In case We know the `inum` value of an OAuth Scope, We can get the details of that scope. Operation ID: get-oauth-scopes-by-inum Description: Get Scope by Inum url-suffix: inum We can see that, the `url-suffix` here for `inum` value. And the command line is: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes-by-inum --url-suffix inum:value For example: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-scopes-by-inum --url-suffix inum:C4F6 It returns the details of the scope matched with the `inum` value. { \"dn\": \"inum=C4F6,ou=scopes,o=jans\", \"inum\": \"C4F6\", \"displayName\": \"refresh_token\", \"id\": \"offline_access\", \"iconUrl\": null, \"description\": \"This scope value requests that an OAuth 2.0 Refresh Token be issued.\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } That's it. ## Delete OAuth Scopes by `inum` You can delete any OAuth Scopes by its `inum` value. The command line is: /opt/jans/jans-cli/config-cli.py --operation-id delete-oauth-scopes-by-inum --url-suffix inum:f9a7add1-04ca-432c-84d4-cb127e84bd48 ``` Just change the inum value to your own according to which one you want to delete.","title":"Patch OAuth Scopes by inum"},{"location":"user/using-jans-cli/cli-oauthumaresources/","text":"UMA Resources # Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information for OAuthUMAResources: /opt/jans/jans-cli/config-cli.py --info OAuthUMAResources Operation ID: get-oauth-uma-resources Description: Gets list of UMA resources. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-uma-resources Description: Creates an UMA resource. Schema: /components/schemas/UmaResource Operation ID: put-oauth-uma-resources Description: Updates an UMA resource. Schema: /components/schemas/UmaResource Operation ID: get-oauth-uma-resources-by-id Description: Gets an UMA resource by ID. url-suffix: id Operation ID: delete-oauth-uma-resources-by-id Description: Deletes an UMA resource. url-suffix: id Operation ID: patch-oauth-uma-resources-by-id Description: Partially updates an UMA resource by Inum. url-suffix: id Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Table of Contents # UMA Resources Get List of UMA Resources Get Oauth UMA Resource by ID Patch OAuth UMA Resource by ID Get List of UMA Resources # This operation is used to search UMA Resources. Operation ID: get-oauth-uma-resources Description: Gets list of UMA resources. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] To get a list of UMA resources: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources --endpoint-args limit:5 It will return random 5 UMA resources. Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly Calling with params limit=5 [ { \"dn\": \"jansId=1800.1ed09ec8-5918-4cb5-9123-e4b9df36231f,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.1ed09ec8-5918-4cb5-9123-e4b9df36231f\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\", \"inum=CACA-BFDB,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.78e4c317-4d5a-4f23-b767-e63793364bee,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.78e4c317-4d5a-4f23-b767-e63793364bee\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/acrs\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-D906,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/acrs\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.556448d7-b349-45d8-a3a8-0d163df8753c,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.556448d7-b349-45d8-a3a8-0d163df8753c\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-4525,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.049d1198-a911-4032-aaf6-59cc94d3f4ef,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.049d1198-a911-4032-aaf6-59cc94d3f4ef\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/acrs\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-D906,ou=scopes,o=jans\", \"inum=CACA-698C,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/acrs\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } ] To search using multiple arguments, you can change pattern that you want to find: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources --endpoint-args limit:1,pattern:\"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\" Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly Calling with params limit=1&pattern=Jans+Cofig+Api+Uma+Resource+%2Fjans-config-api%2Fapi%2Fv1%2Fconfig%2Fcache%2Fnative-persistence [ { \"dn\": \"jansId=1800.02d24ac8-13d6-464d-af1d-46a6261eaa65,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.02d24ac8-13d6-464d-af1d-46a6261eaa65\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": null, \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache/native-persistence\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.6cd9bb98-05ac-43d2-bebb-3b1c92b9b409,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.6cd9bb98-05ac-43d2-bebb-3b1c92b9b409\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": null, \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache/native-persistence\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } ] Get Oauth UMA Resource by ID # Operation ID: get-oauth-uma-resources-by-id Description: Gets an UMA resource by ID. url-suffix: id To get uma resource by its ID, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources-by-id --url-suffix id:1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly { \"dn\": \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } replace the id with accurate one. Patch OAuth UMA Resource by ID # Operation ID: patch-oauth-uma-resources-by-id Description: Partially updates an UMA resource by Inum. url-suffix: id Schema: Array of /components/schemas/PatchRequest As you see the description, you can update an existing uma resource partially with this following operation. Let's get the sample schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-uma.json { \"op\": \"move\", \"path\": \"string\", \"value\": {} } Let's want to update as deletable:false to an uma resource whose id=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da . So we are going to operate replace where path is deletable with value: false . let's update the json as below: nan o / t mp/pa t ch - uma.jso n [ { \"op\" : \"replace\" , \"path\" : \"deletable\" , \"value\" : false } ] now let's do the operation: /op t /ja ns /ja ns - cli/co nf ig - cli.py -- opera t io n - id pa t ch - oau t h - uma - resources - by - id -- url - su ff ix id : 1800. c 4e0 d 1 b 6-e731-4 c 8 d - a 0 ab -66784349 a 4 da -- da ta / t mp/pa t ch - uma.jso n Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/uma/resources.write Server Respo nse : { \"dn\" : \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\" , \"inum\" : null , \"id\" : \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\" , \"name\" : \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\" , \"iconUri\" : \"http://www.jans.io/img/scim_logo.png\" , \"scopes\" : [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\" : null , \"clients\" : [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\" : [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\" : \"1\" , \"creator\" : \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\" , \"description\" : null , \"type\" : null , \"creationDate\" : null , \"expirationDate\" : null , \"deletable\" : false } you must see that deletable updated to false .","title":"UMA Resources"},{"location":"user/using-jans-cli/cli-oauthumaresources/#uma-resources","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information for OAuthUMAResources: /opt/jans/jans-cli/config-cli.py --info OAuthUMAResources Operation ID: get-oauth-uma-resources Description: Gets list of UMA resources. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-uma-resources Description: Creates an UMA resource. Schema: /components/schemas/UmaResource Operation ID: put-oauth-uma-resources Description: Updates an UMA resource. Schema: /components/schemas/UmaResource Operation ID: get-oauth-uma-resources-by-id Description: Gets an UMA resource by ID. url-suffix: id Operation ID: delete-oauth-uma-resources-by-id Description: Deletes an UMA resource. url-suffix: id Operation ID: patch-oauth-uma-resources-by-id Description: Partially updates an UMA resource by Inum. url-suffix: id Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest","title":"UMA Resources"},{"location":"user/using-jans-cli/cli-oauthumaresources/#table-of-contents","text":"UMA Resources Get List of UMA Resources Get Oauth UMA Resource by ID Patch OAuth UMA Resource by ID","title":"Table of Contents"},{"location":"user/using-jans-cli/cli-oauthumaresources/#get-list-of-uma-resources","text":"This operation is used to search UMA Resources. Operation ID: get-oauth-uma-resources Description: Gets list of UMA resources. Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] To get a list of UMA resources: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources --endpoint-args limit:5 It will return random 5 UMA resources. Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly Calling with params limit=5 [ { \"dn\": \"jansId=1800.1ed09ec8-5918-4cb5-9123-e4b9df36231f,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.1ed09ec8-5918-4cb5-9123-e4b9df36231f\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\", \"inum=CACA-BFDB,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.78e4c317-4d5a-4f23-b767-e63793364bee,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.78e4c317-4d5a-4f23-b767-e63793364bee\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/acrs\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-D906,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/acrs\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.556448d7-b349-45d8-a3a8-0d163df8753c,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.556448d7-b349-45d8-a3a8-0d163df8753c\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-4525,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.049d1198-a911-4032-aaf6-59cc94d3f4ef,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.049d1198-a911-4032-aaf6-59cc94d3f4ef\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/acrs\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-D906,ou=scopes,o=jans\", \"inum=CACA-698C,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/acrs\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } ] To search using multiple arguments, you can change pattern that you want to find: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources --endpoint-args limit:1,pattern:\"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\" Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly Calling with params limit=1&pattern=Jans+Cofig+Api+Uma+Resource+%2Fjans-config-api%2Fapi%2Fv1%2Fconfig%2Fcache%2Fnative-persistence [ { \"dn\": \"jansId=1800.02d24ac8-13d6-464d-af1d-46a6261eaa65,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.02d24ac8-13d6-464d-af1d-46a6261eaa65\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": null, \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache/native-persistence\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true }, { \"dn\": \"jansId=1800.6cd9bb98-05ac-43d2-bebb-3b1c92b9b409,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.6cd9bb98-05ac-43d2-bebb-3b1c92b9b409\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/config/cache/native-persistence\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": null, \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/config/cache/native-persistence\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } ]","title":"Get List of UMA Resources"},{"location":"user/using-jans-cli/cli-oauthumaresources/#get-oauth-uma-resource-by-id","text":"Operation ID: get-oauth-uma-resources-by-id Description: Gets an UMA resource by ID. url-suffix: id To get uma resource by its ID, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-uma-resources-by-id --url-suffix id:1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da Getting access token for scope https://jans.io/oauth/config/uma/resources.readonly { \"dn\": \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\", \"inum\": null, \"id\": \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\", \"name\": \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\", \"iconUri\": \"http://www.jans.io/img/scim_logo.png\", \"scopes\": [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\": null, \"clients\": [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\": [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\": \"1\", \"creator\": \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\", \"description\": null, \"type\": null, \"creationDate\": null, \"expirationDate\": null, \"deletable\": true } replace the id with accurate one.","title":"Get Oauth UMA Resource by ID"},{"location":"user/using-jans-cli/cli-oauthumaresources/#patch-oauth-uma-resource-by-id","text":"Operation ID: patch-oauth-uma-resources-by-id Description: Partially updates an UMA resource by Inum. url-suffix: id Schema: Array of /components/schemas/PatchRequest As you see the description, you can update an existing uma resource partially with this following operation. Let's get the sample schema: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest > /tmp/patch-uma.json { \"op\": \"move\", \"path\": \"string\", \"value\": {} } Let's want to update as deletable:false to an uma resource whose id=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da . So we are going to operate replace where path is deletable with value: false . let's update the json as below: nan o / t mp/pa t ch - uma.jso n [ { \"op\" : \"replace\" , \"path\" : \"deletable\" , \"value\" : false } ] now let's do the operation: /op t /ja ns /ja ns - cli/co nf ig - cli.py -- opera t io n - id pa t ch - oau t h - uma - resources - by - id -- url - su ff ix id : 1800. c 4e0 d 1 b 6-e731-4 c 8 d - a 0 ab -66784349 a 4 da -- da ta / t mp/pa t ch - uma.jso n Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/uma/resources.write Server Respo nse : { \"dn\" : \"jansId=1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da,ou=resources,ou=uma,o=jans\" , \"inum\" : null , \"id\" : \"1800.c4e0d1b6-e731-4c8d-a0ab-66784349a4da\" , \"name\" : \"Jans Cofig Api Uma Resource /jans-config-api/api/v1/attributes\" , \"iconUri\" : \"http://www.jans.io/img/scim_logo.png\" , \"scopes\" : [ \"inum=CACA-0B30,ou=scopes,o=jans\" ], \"scopeExpression\" : null , \"clients\" : [ \"inum=1801.6e8351d4-5d3f-4773-b632-6c84bf8207cd,ou=clients,o=jans\" ], \"resources\" : [ \"https://testjans.gluu.com/jans-config-api/api/v1/attributes\" ], \"rev\" : \"1\" , \"creator\" : \"inum=d206dd87-3a22-465d-bd25-bec9313cd42d,ou=people,o=json\" , \"description\" : null , \"type\" : null , \"creationDate\" : null , \"expirationDate\" : null , \"deletable\" : false } you must see that deletable updated to false .","title":"Patch OAuth UMA Resource by ID"},{"location":"user/using-jans-cli/cli-openid-connect-client-configuration/","text":"OpenID Connect Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of OpenID Connect Client Configuration: /opt/jans/jans-cli/config-cli.py --info OAuthOpenIDConnectClients Operation ID: get-oauth-openid-clients Description: Gets list of OpenID Connect clients Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-openid-clients Description: Create new OpenId connect client Schema: /components/schemas/Client Operation ID: put-oauth-openid-clients Description: Update OpenId Connect client. Schema: /components/schemas/Client Operation ID: get-oauth-openid-clients-by-inum Description: Get OpenId Connect Client by Inum. url-suffix: inum Operation ID: delete-oauth-openid-clients-by-inum Description: Delete OpenId Connect client. url-suffix: inum Operation ID: patch-oauth-openid-clients-by-inum Description: Update modified properties of OpenId Connect client by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest Get List of OpenID Clients # To get the openid clients, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-openid-clients Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly [ { \"dn\": \"inum=1801.30bd0499-9dc0-48dc-9eb3-96b80a8da856,ou=clients,o=jans\", \"inum\": \"1801.30bd0499-9dc0-48dc-9eb3-96b80a8da856\", \"clientSecret\": \"zITPCsgIfmDTkKWkonuu+g==\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=CACA-B9D4,ou=scopes,o=jans\", \"inum=CACA-5AA4,ou=scopes,o=jans\", \"inum=CACA-F1E3,ou=scopes,o=jans\", \"inum=CACA-A1BD,ou=scopes,o=jans\", \"inum=CACA-113F,ou=scopes,o=jans\", \"inum=CACA-22E5,ou=scopes,o=jans\", \"inum=CACA-E6DE,ou=scopes,o=jans\", \"inum=CACA-B965,ou=scopes,o=jans\", \"inum=CACA-7FB9,ou=scopes,o=jans\", \"inum=CACA-3B0C,ou=scopes,o=jans\", \"inum=CACA-FD1D,ou=scopes,o=jans\", \"inum=CACA-7419,ou=scopes,o=jans\", \"inum=CACA-55A1,ou=scopes,o=jans\", \"inum=CACA-7B22,ou=scopes,o=jans\", \"inum=CACA-66AE,ou=scopes,o=jans\", \"inum=CACA-8283,ou=scopes,o=jans\", \"inum=CACA-1A74,ou=scopes,o=jans\", \"inum=CACA-CCFC,ou=scopes,o=jans\", \"inum=CACA-EABC,ou=scopes,o=jans\", \"inum=CACA-E7BB,ou=scopes,o=jans\", \"inum=CACA-EF5F,ou=scopes,o=jans\", \"inum=CACA-179E,ou=scopes,o=jans\", \"inum=CACA-174C,ou=scopes,o=jans\", \"inum=CACA-B36D,ou=scopes,o=jans\", \"inum=CACA-88E3,ou=scopes,o=jans\", \"inum=CACA-C1F5,ou=scopes,o=jans\", \"inum=CACA-82B8,ou=scopes,o=jans\", \"inum=CACA-016F,ou=scopes,o=jans\", \"inum=CACA-8F20,ou=scopes,o=jans\", \"inum=CACA-79A1,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.3c40746d-63a6-478e-b06d-8f49bb984e4f,ou=clients,o=jans\", \"inum\": \"1001.3c40746d-63a6-478e-b06d-8f49bb984e4f\", \"clientSecret\": \"eVXRaEojULdohgOUbMeFPA==\", \"frontChannelLogoutUri\": \"https://testjans.imshakil.me/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.imshakil.me/identity/scim/auth\", \"https://testjans.imshakil.me/identity/authcode.htm\", \"https://testjans.imshakil.me/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.imshakil.me/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.imshakil.me/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null }, { \"dn\": \"inum=1202.049eb91f-6339-4e83-ac83-55df359f6c9c,ou=clients,o=jans\", \"inum\": \"1202.049eb91f-6339-4e83-ac83-55df359f6c9c\", \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM Requesting Party Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"0b60383f-13c9-4064-9de1-7946724c0bbc_sig_rs256\\\", \\\"x5c\\\" : [ \\\"MIIDCTCCAfGgAwIBAgIgLJXeu/MFKl144/y6Xj55fqA+RWTWE0VgEhOSb1CmITcwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTNaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCK7v3/S3Qn1puC16XM1mChQa3ygnAMoDQivlDj0AxLmSEO4ulmubVTbsvBFkt45+kKLvDUDozaNFhhNtnX1vZt37Fnd7/lnsODVn7GOrc8pGyiR048MfmPONO77LLqyf/ByrxhMpBYTR22kniRdQMc1+dHjWHIGzvmsQgMuefT2U81fqRpL0dkL2xDs7OEHm6BjQUoJgSXnf5BmWvdf+WiYPe5DXe6g56LdyZwwgN0vcx1IoYSMvmHlZyNjzyOPhCNgLPexXFpniBcFc5b5nGISgpn37yjVm4UIIMMGajv7jNJZKXkKZ+F4KRnuIByTYHwTqiHEwQoleRhlKJpNbthAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQsFAAOCAQEAhYEvDDBZ1Sl8b4Ng0aSXN+zw4nwS7pXBAwj4yLid47D6FnomFw25PYDAghO7YehDW18zjgbON69L5PH9Tqnq/Jzu1qAWpjWpwBVMRogCiGip/Kk59HmQos5/ckm9kgKrWhUw7vEqramHw40uqjXWuDfykWDbSqRYX2rccubSGwRsocMoMEoeFXLtyeBgjqoFY1Uqt4VTMdjTv6ekD+BLVfXOTlhemHSRXBG7GJVpwebYIyN/lx7LFAHYqbBi0adyGTI0/HQBtxMQeu57qy9oP+Q9gKse5QAz5Zesld71bKmUOshSGg4ks1JHH70wtRNPdQOgfdaaHHVzoyZo6FcMqg==\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS256\\\", \\\"n\\\" : \\\"iu79_0t0J9abgtelzNZgoUGt8oJwDKA0Ir5Q49AMS5khDuLpZrm1U27LwRZLeOfpCi7w1A6M2jRYYTbZ19b2bd-xZ3e_5Z7Dg1Z-xjq3PKRsokdOPDH5jzjTu-yy6sn_wcq8YTKQWE0dtpJ4kXUDHNfnR41hyBs75rEIDLnn09lPNX6kaS9HZC9sQ7OzhB5ugY0FKCYEl53-QZlr3X_lomD3uQ13uoOei3cmcMIDdL3MdSKGEjL5h5WcjY88jj4QjYCz3sVxaZ4gXBXOW-ZxiEoKZ9-8o1ZuFCCDDBmo7-4zSWSl5CmfheCkZ7iAck2B8E6ohxMEKJXkYZSiaTW7YQ\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"b3c52773-7377-45a2-97f8-0e8cc3895342_sig_rs384\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAPXe8+Rao043PUbs+WlpDB17Gyq8osq3tl/4d2qb38eTMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTE0WhcNMjIwMTE1MjIzOTIzWjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DJHMKIC9rsPUurwE9aRXJ0YCi0hUrfZJ7CP3bnE5dbjSFgO9jSpFT+BS8SEaEWhTMUsrLAXqANTqPfEz3ITWhVEHdDvBDrSrpjQQWcEksxYP4/ZaScnFg09yt6Y6U3UMzwPijlzvq84xsJ1KWaz2klCSWvb/jQ4RJj6SG4eTApX0A2cHJmHwJ1oM9SwQe+eeKprd+uZj12iouWPjah4ztz2PzzAmYh8l3Wlycw7hs5OQnxU2ZnygSMYh/2V5cKVK22FAp3fE3QxLXYmn4hkmSoHcy0UjRxhSS5Q8m4AcJzdfUauMqpIJ0yL/W9jkAVdsgTMcacjJF9eesVyhcwwgwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAJHB8bKmnQpllotN3dDg1heS2zqdsqyPK7K/5TFBRpXJV2LrIIAHEw5NjIh3vxva/dUwiJD/9uGpi3Xmn9wVFXhIxzYtSAGQmYxFEtkKsZZ7HmndmFbqbeHYv2q266yBQxx1GoZELyU85rrF+hB+/ZSdeMdqjq+Tyr25NwSHwDkGlYui3WAqLH0l0LqIvtSO5bgv6fpqhXe4H8PJ41EUsChN0HrIXNMJLbdvw8tnznJSMbaqKXjKCh0qr9GvHhxvZkDyklWRFTelg8Ct2xiH/eGeu2jwwc/QndcxNq0lqcFzyzp66oTUIdwrQitP9lgipB4c42jefoZjhv6mQaDbuO8=\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS384\\\", \\\"n\\\" : \\\"0DJHMKIC9rsPUurwE9aRXJ0YCi0hUrfZJ7CP3bnE5dbjSFgO9jSpFT-BS8SEaEWhTMUsrLAXqANTqPfEz3ITWhVEHdDvBDrSrpjQQWcEksxYP4_ZaScnFg09yt6Y6U3UMzwPijlzvq84xsJ1KWaz2klCSWvb_jQ4RJj6SG4eTApX0A2cHJmHwJ1oM9SwQe-eeKprd-uZj12iouWPjah4ztz2PzzAmYh8l3Wlycw7hs5OQnxU2ZnygSMYh_2V5cKVK22FAp3fE3QxLXYmn4hkmSoHcy0UjRxhSS5Q8m4AcJzdfUauMqpIJ0yL_W9jkAVdsgTMcacjJF9eesVyhcwwgw\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"bf5b0a2f-c977-4e0d-9a3c-bd8faef18e48_sig_rs512\\\", \\\"x5c\\\" : [ \\\"MIIDCTCCAfGgAwIBAgIgDrTQ+5YMX6eyx/WzSSJqS9gEsHlewOmswtphb3jE4/4wDQYJKoZIhvcNAQENBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTVaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCWfXYlVgDnZpXP7XdEfSYbmJbKgVh0VzhRUzoXc1UTK+FZRM4NNuQBwkfF1X1vMg5x+1Dp1fhNw6anzf5oRjkgog6hEOucWDXq9+jjlkJPnUrYD9/yrinnBQPjsv2NFxWu7qI3KYUIWe96blPiqO1pJjUPk6dybCYoNoxk/0ut07/9uXcf3qVawqypGz4FHeiVz3SUJ1P17h59CS0+nCBT5OkR+rhT4XNc6qcqO3YDX/mj1vahuJijztoQQN82xp31bod9KsBezHIpuW8aM+steNz/aOn49bLYbNxneXV032wPmTZHr0mxxIlS95Vux0y/FVMnt/D1/L5SbWV/SxVDAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQ0FAAOCAQEAaEMcSaALKCCLjQ9GFyGQT3pOdT5AplJSD4ql+dISq44atxuDGSyrKyGehW07djBlUZFW8aDDMsOnQMjC049RU1LuU77FB9cmFhWAFCGIPTFFDdQrCK+LYB9LwSRX7kqBHsHZhqH9STdRMamakLnNuSJS5YzQNFziCIEUofkg0xe5WsAB4GdJrOfvy7JF0UnmjXhwpvZY/65b/Vv0o28j46QS4w769ltZwxIABKom0jdbfbn41UeLTlwgRftXh2/k59W5ma3lZPO/zi2aOl9nuj+7lXIUQKLoBUgDBYJ+8SyF0HhqDvlWijb29eJlPKKHkFRiQTo5Cbs704GWK8bx1A==\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS512\\\", \\\"n\\\" : \\\"ln12JVYA52aVz-13RH0mG5iWyoFYdFc4UVM6F3NVEyvhWUTODTbkAcJHxdV9bzIOcftQ6dX4TcOmp83-aEY5IKIOoRDrnFg16vfo45ZCT51K2A_f8q4p5wUD47L9jRcVru6iNymFCFnvem5T4qjtaSY1D5OncmwmKDaMZP9LrdO__bl3H96lWsKsqRs-BR3olc90lCdT9e4efQktPpwgU-TpEfq4U-FzXOqnKjt2A1_5o9b2obiYo87aEEDfNsad9W6HfSrAXsxyKblvGjPrLXjc_2jp-PWy2GzcZ3l1dN9sD5k2R69JscSJUveVbsdMvxVTJ7fw9fy-Um1lf0sVQw\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-256\\\", \\\"kid\\\" : \\\"fb0ef9a4-3b7f-4880-b896-57449de9ece8_sig_es256\\\", \\\"x5c\\\" : [ \\\"MIIBfTCCASOgAwIBAgIgQgvjjFY0ZMqTJ3pbRsXCrIcHCdP64r+VwPgHUCzhTwgwCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTVaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAT7B1VR+pnR8J0Omavpaeyq5K2aiJZXXQvuHn6piFZd7Gfr0rzzA9hSTgGZ84yOA96ZkV8XS71cuzP24Q72SsCKoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDSAAwRQIgPMWe6opagvCW0nkMASqpy7aQmnOw2cHFk8gqc7ztZyoCIQCK0xN9Kc3my9qGPYM75lUx2AwAzgyhkdWzo80jd+BVkA==\\\" ], \\\"x\\\" : \\\"APsHVVH6mdHwnQ6Zq-lp7KrkrZqIllddC-4efqmIVl3s\\\", \\\"y\\\" : \\\"Z-vSvPMD2FJOAZnzjI4D3pmRXxdLvVy7M_bhDvZKwIo\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES256\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-384\\\", \\\"kid\\\" : \\\"7cc680c6-c7d5-4a5c-885e-1e591dc1511d_sig_es384\\\", \\\"x5c\\\" : [ \\\"MIIBuTCCAUCgAwIBAgIgDPX0NX82/puI5AxdpOoQxPrsODbEGF3usqHUizJFvd4wCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTZaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR88zjor1uRqZg+UFFF7VrUyPXrGlkojxw2WiJsk3AKr6IbZNhGasSxjLV24Gjoo8BJUdcwX4DcOufpspU0KBUCaNY0rJjV6UM8kiyqDCYoKW0UpKxx1eXwm5m1AmCjkOSjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNnADBkAjAjyJsnKck1+hkXjAoN5PpLLwua4i6+KfW6fBeOXbwGjN7WkfJ595KstuPMI7GzP/ACMAaHxFdnih0lkfWJ6lwr3IXn4eon/yAskkN24DrK0Q9e1mJkrDU2uc3ybh796+f3IQ==\\\" ], \\\"x\\\" : \\\"fPM46K9bkamYPlBRRe1a1Mj16xpZKI8cNloibJNwCq-iG2TYRmrEsYy1duBo6KPA\\\", \\\"y\\\" : \\\"SVHXMF-A3Drn6bKVNCgVAmjWNKyY1elDPJIsqgwmKCltFKSscdXl8JuZtQJgo5Dk\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES384\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-521\\\", \\\"kid\\\" : \\\"98011bc0-8566-41ec-a64b-e0fca1fb22a2_sig_es512\\\", \\\"x5c\\\" : [ \\\"MIICBjCCAWegAwIBAgIhAM1ik4Lr1/favN6xSF65r92aemqYgpCMfLO9vVAtmOO4MAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTE2WhcNMjIwMTE1MjIzOTIzWjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQAZG1VCPrKI5D9iLqkibhaKHH/j3SmDjhr9em63SIztO6gFXtEFNW4Jqc7oTHHcOv6VpagxX5XTzLinhpUQRuzEFUAw39iGsIJbwvGWarrw5/OCZaKPNRVA/kzAf9dl0I17EMyvGP0ctm6t4qqY8PjqygjA2nBoZWwLnhZu9q54IrdT+6jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBjAAwgYgCQgHydUf16d/5yvFP5NGzBHOYY7sQ5jV0i2ICC+Vdh02jVTcmaAy6f2uraa6eL5X9SrfiwtR9HvkMqB/svMzAv999mQJCAL3LrtobouAY/i4Hxvfgt/H9Sf5G47zbO5QJBoqkOA9Q1OG4paRIVSQ3d1iZFvSPLfmbqwXee0aq8H9CU192+y52\\\" ], \\\"x\\\" : \\\"ZG1VCPrKI5D9iLqkibhaKHH_j3SmDjhr9em63SIztO6gFXtEFNW4Jqc7oTHHcOv6VpagxX5XTzLinhpUQRuzEFU\\\", \\\"y\\\" : \\\"AMN_YhrCCW8Lxlmq68OfzgmWijzUVQP5MwH_XZdCNexDMrxj9HLZureKqmPD46soIwNpwaGVsC54WbvaueCK3U_u\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES512\\\" } ]}\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"private_key_jwt\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null }, { \"dn\": \"inum=1201.95be8034-0b72-4add-959c-3edf98b91af6,ou=clients,o=jans\", \"inum\": \"1201.95be8034-0b72-4add-959c-3edf98b91af6\", \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM Resource Server Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"8e6d654d-2133-45b6-84c4-4fce267d6bee_sig_rs256\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAO4ZTRoknOI/s7Mq9hIT424qwd9tY05Ht2uSgz/CuWmbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTA5WhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsircewYbwIlSPYt6H3yFoxn26wSpij6sYsFHe6HcWkxSmbgkYSfTF5n+14PorBhsWzKDY+YODqIH9sNfZAjx3yX/VQpqlXn52Uwt1ZGb8tnwaNbbMkFW2848fqZXxtZHrBUVMbN+jiMec1tnI6ONIsDNJlBB4jJgE/wIThMtl5cmys9/RHmfr6YAnEVEZksFtyaDS3W4f3JsrbgWs1IYcY9MGeAQJ+OpXifb5D0qhSUrDjLBbKCOukvRf6Ue3U/Q4NaxpokHYhqbr/YA6jiZ2XPcJl53HKdpU4eO6V4HP0nuiVi7q1nQhb9f4cnuPnIKYaai759bozXTjByoki6YCQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAIyswl5l42DSzAJmJTIwNwJUDGORPPoj3CQlBsaT5pQ2Ykiqv1gqBLjNZw/Em1TYeD2Udm8Gjn5sPUxcwdiiH1zATYPyxk/uv4POkwQBw2n3L8OA4pl0d6So5HVzA1CS23Sy1CSKK0OiRVMym0TxzutYIJB4Usqg2KhgwJBzonoAHY8IXd9QvlV7+4Cb2gE4jpF8kUKgF3dCqQVZybDrEFQ0xf8bDPWp4CBTTVoHsyr/bn7UFpHO1FxKAWJglNa6cNOv1a/1QzjPK2OZGnYciHf/BT6SWRkJukRNs/O3jrfJJsw+LSlQSjpcZPMUwJ3+JJ5Eax41bseue1mLa1js2h4=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS256\\\", \\\"n\\\" : \\\"sircewYbwIlSPYt6H3yFoxn26wSpij6sYsFHe6HcWkxSmbgkYSfTF5n-14PorBhsWzKDY-YODqIH9sNfZAjx3yX_VQpqlXn52Uwt1ZGb8tnwaNbbMkFW2848fqZXxtZHrBUVMbN-jiMec1tnI6ONIsDNJlBB4jJgE_wIThMtl5cmys9_RHmfr6YAnEVEZksFtyaDS3W4f3JsrbgWs1IYcY9MGeAQJ-OpXifb5D0qhSUrDjLBbKCOukvRf6Ue3U_Q4NaxpokHYhqbr_YA6jiZ2XPcJl53HKdpU4eO6V4HP0nuiVi7q1nQhb9f4cnuPnIKYaai759bozXTjByoki6YCQ\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"10a2a7f6-cabf-41c0-9d62-37644f214e1c_sig_rs384\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAPAwaemYVwozpAJBHURxIh6oD+BjzEvhLegWbdsM7/6zMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTEwWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1s5Kx0ltPJswSizHDNTA786pyU3bqT5dym0O/9RUs1ishsp76QjytsYdxRZzzaYB4CcEaVRj5ZIZQwt0JNqbfx/MPiMEvpJhZHEruZRc1EsE3kUCx6yInBIuHk6yKsdYoAKiHa0dJOMirTcElZyCCzq83QBKpYdX7kV+i29kF/lOSvPeAsizN8HSmB29Hhy30nB3GmcYwghHAXCSpG5g467iGBi+gOMxRm7g/Uj/WSYIDc8CyGyd6iHPK9smCyna5cCfRtuGTAf+/fnfiK5IFrGXvDK5ggM+cbKBope7RceSawN28kjVtt+gY6oLvI3JrV0V33qKTC30JnPJCxTZ4wIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAGT0S+ke7qG9b7VS553n2JLTB13kSlXrBoa1XX4NlhnHnWO/w/YTFAi3jGVmgCesTr+2XBBFAIdOD9bC397Ufi8xd3PEDhNQKpWThhJpasMJvsiVqnXRsmoN+j5sqtzyUwl1Dsk5zdtDvoV7zeJHJ3niEpS5in6Gw8jMakn84VTekvtQvG6NBWwjVwWc4awSN18YVhMJYbs5J1tTSOcXjdwPD4Ee0WQMBrKqLeo7b9W5/F2Jb3DbfgMhkikVA9jRowyLMgFpyMI6VPneMDWyadnS9YrJHeX1Ml6i3m0uN3Jvp817jhgYFS1L74p3gA9oO0Tin6wnS5EZdWp8kCfrCx4=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS384\\\", \\\"n\\\" : \\\"1s5Kx0ltPJswSizHDNTA786pyU3bqT5dym0O_9RUs1ishsp76QjytsYdxRZzzaYB4CcEaVRj5ZIZQwt0JNqbfx_MPiMEvpJhZHEruZRc1EsE3kUCx6yInBIuHk6yKsdYoAKiHa0dJOMirTcElZyCCzq83QBKpYdX7kV-i29kF_lOSvPeAsizN8HSmB29Hhy30nB3GmcYwghHAXCSpG5g467iGBi-gOMxRm7g_Uj_WSYIDc8CyGyd6iHPK9smCyna5cCfRtuGTAf-_fnfiK5IFrGXvDK5ggM-cbKBope7RceSawN28kjVtt-gY6oLvI3JrV0V33qKTC30JnPJCxTZ4w\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"35a9fa3e-56ac-4408-91c3-e959735222b9_sig_rs512\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAKLT4VuuTD1hb4Gsdd6djKvblI8eSGoksOMt+l2OG01XMA0GCSqGSIb3DQEBDQUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTEwWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAppg3PsDya/MqabJX27lWx/xy/2zWaSF9+AQ1el34ECdf5e2PGjZIY5Nsx4T2K5uPTz9gH1i/3x8ViCNCX+VGjmyU96LQrLqTP0p9/dI1/E9Llr1igVn8ryyMCf0i8o+y9wEuxaRtiSCtUx65KLzwiGefgZGd7UwrAFce6Hy7VvYDdx1z6AcsJt08CXdDUAIU/M5zq3JCfmpyMFQQHPQ6H6UlK8pFeAGxLNp4IUVmZgUaswnZiaKgglMBqVVOh7bGBIQbmjzbwnIOWVoyuZt6vRfdQUoduya+PwxjwkF4WCRNNJr0NRbMp2aXJJvAHLNPcDXr2pntg4Gb2s40DMuimwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQENBQADggEBAIjIpRhEg9fQ9DQXbe7wEtaKpxzTl/FM+BAriQiIek2ZYDy2ux+uHmbTPYwIGNyTpkeAkkqk2xFUjP0QYDo9Q9vqlrWz0mTXDoRDuqyFtHy/4n2xVtAmJSg5us4wFWyBSiSOWyOL3H7TUMlSFjVGLUkweSOTymM29mPYb6xRay/6f1q6jB28LtHCpWm15ZmHa2XdyZTb5WSSD480S7jXcF3ON48AasXBfRxZpZpigF6YLZbxqSU4829RjnexfMJWHy81hVeFH3L+7WUkASpZNfIGlzKSFDqVuK3RncMswCHgMcygdzjem6DDH71qUDpwMVGLIcVQ0ZSjQzFSpd6fKag=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS512\\\", \\\"n\\\" : \\\"ppg3PsDya_MqabJX27lWx_xy_2zWaSF9-AQ1el34ECdf5e2PGjZIY5Nsx4T2K5uPTz9gH1i_3x8ViCNCX-VGjmyU96LQrLqTP0p9_dI1_E9Llr1igVn8ryyMCf0i8o-y9wEuxaRtiSCtUx65KLzwiGefgZGd7UwrAFce6Hy7VvYDdx1z6AcsJt08CXdDUAIU_M5zq3JCfmpyMFQQHPQ6H6UlK8pFeAGxLNp4IUVmZgUaswnZiaKgglMBqVVOh7bGBIQbmjzbwnIOWVoyuZt6vRfdQUoduya-PwxjwkF4WCRNNJr0NRbMp2aXJJvAHLNPcDXr2pntg4Gb2s40DMuimw\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-256\\\", \\\"kid\\\" : \\\"b05a91e8-aa4e-4f6c-860a-3b63f13b16da_sig_es256\\\", \\\"x5c\\\" : [ \\\"MIIBfDCCASOgAwIBAgIgFbx/JYXagj82QeW+8XBk/FcdCinm/kX04q4tBOKiQ+gwCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTFaFw0yMjAxMTUyMjM5MTlaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARNynAgBRUdqdd5/Os3gpG/Y/CozNptimxnUXdGcDrMrLFBOtwVrB6wYk69Z9U2iY6KPTmgxHQ/MxcHiJOsTfuOoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDRwAwRAIgeohxfVOK3qgJSNZRzk50PvjeZZ6sIJi1uAOlsaYEMpcCIGPLcDJYIaFfNVQbO/UZjymtiDpoZdb8U39GSanA6HfP\\\" ], \\\"x\\\" : \\\"TcpwIAUVHanXefzrN4KRv2PwqMzabYpsZ1F3RnA6zKw\\\", \\\"y\\\" : \\\"ALFBOtwVrB6wYk69Z9U2iY6KPTmgxHQ_MxcHiJOsTfuO\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES256\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-384\\\", \\\"kid\\\" : \\\"30fc8067-9cbd-4a39-8621-6555815e046f_sig_es384\\\", \\\"x5c\\\" : [ \\\"MIIBuzCCAUCgAwIBAgIgAeP45q0dJdlruXGW4aKW/728ttfGj31IHROMLnFa5OQwCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTFaFw0yMjAxMTUyMjM5MTlaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARHgy8tqS+sfqcL4f0LrTnisvAN6QEgylRR/upFj9+FOc7b5eImEzhO+PMhTmNvbutWN+0pVhZ5IcBY9dFSDyBSs9lkWgUDgcKXyg7HCIhnC7CXQfwPKOzH7ZzoD/2D6SWjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNpADBmAjEAp1Gof1uj66oNQsIvSaKBhZkgRoAIweQKVbvcXUTKr3P00HOZMdCrkhYwqXEmDmmzAjEA2sk385nNl/uyUzaW3gfciCxXAeMXUQUjmp6ZDrpuPDleL6jo1u6hoURO30EXBNRR\\\" ], \\\"x\\\" : \\\"R4MvLakvrH6nC-H9C6054rLwDekBIMpUUf7qRY_fhTnO2-XiJhM4TvjzIU5jb27r\\\", \\\"y\\\" : \\\"VjftKVYWeSHAWPXRUg8gUrPZZFoFA4HCl8oOxwiIZwuwl0H8Dyjsx-2c6A_9g-kl\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES384\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-521\\\", \\\"kid\\\" : \\\"4c1c8652-06a0-4203-bec7-f5e1408f9a71_sig_es512\\\", \\\"x5c\\\" : [ \\\"MIICBTCCAWegAwIBAgIhAOSKu6QwZhmEMffavHu0TX9xI23MKmwdmhS3iFnklzJrMAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTExWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQA79ze+ti5XVPYSVjd5j/pFDMftJC/yKZ67UXMF4hGKYPOpyntzg2DpObgmYwnyituSmE+Nk04aYyMb9wDYPtAKywA4K+G+8M4i3oQ3u2fxxIEcd/k1hl63rAJwaRCHHYSeUuHkDs90aYNkwTotuOta2+IVzLHTFtut78Ifejy41yqG76jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBiwAwgYcCQSyYB5WGd7N0eutyN4VZFnhivJczXshpkYuz5/XX1HmZwNIwBtc1nTSTclQyZNNNPsadKHW3zrpLmuh7ZJtkAQwjAkIBHOUe7iZNtzzz9o3JX6c3a0GtAkNdV3fDB523Xp+jq6coUzzbUo0qX3tD01iKrxtHh/RY3C7GYNRTOndw9G7efnE=\\\" ], \\\"x\\\" : \\\"AO_c3vrYuV1T2ElY3eY_6RQzH7SQv8imeu1FzBeIRimDzqcp7c4Ng6Tm4JmMJ8orbkphPjZNOGmMjG_cA2D7QCss\\\", \\\"y\\\" : \\\"AOCvhvvDOIt6EN7tn8cSBHHf5NYZet6wCcGkQhx2EnlLh5A7PdGmDZME6LbjrWtviFcyx0xbbre_CH3o8uNcqhu-\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES512\\\" } ]}\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"private_key_jwt\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=6D99,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null } ] It will show all the openid clients together. To search using parameters: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-openid-clients --endpoint-args limit:2 It will show two OpenID clients randomly. Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly Calling with params limit=2 [ { \"dn\": \"inum=1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805,ou=clients,o=jans\", \"inum\": \"1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805\", \"clientSecret\": \"KfwZeAfq4jrL\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/admin-ui\", \"http//:localhost:4100\" ], \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1800.F6E877,ou=scopes,o=jans\", \"inum=1800.D4F3E7,ou=scopes,o=jans\", \"inum=1800.2FD7EF,ou=scopes,o=jans\", \"inum=1800.97B23C,ou=scopes,o=jans\", \"inum=1800.8FC2C7,ou=scopes,o=jans\", \"inum=1800.1FFDF2,ou=scopes,o=jans\", \"inum=1800.5CF44C,ou=scopes,o=jans\", \"inum=1800.CCA518,ou=scopes,o=jans\", \"inum=1800.E62D6E,ou=scopes,o=jans\", \"inum=1800.11CB33,ou=scopes,o=jans\", \"inum=1800.781FA2,ou=scopes,o=jans\", \"inum=1800.ADAD8F,ou=scopes,o=jans\", \"inum=1800.40F22F,ou=scopes,o=jans\", \"inum=1800.7619BA,ou=scopes,o=jans\", \"inum=1800.E0DAF5,ou=scopes,o=jans\", \"inum=1800.7F45B0,ou=scopes,o=jans\", \"inum=1800.778C57,ou=scopes,o=jans\", \"inum=1800.E39293,ou=scopes,o=jans\", \"inum=1800.939483,ou=scopes,o=jans\", \"inum=1800.0ED2E8,ou=scopes,o=jans\", \"inum=1800.66CA59,ou=scopes,o=jans\", \"inum=1800.A4DBE5,ou=scopes,o=jans\", \"inum=1800.9AF358,ou=scopes,o=jans\", \"inum=1800.478CCF,ou=scopes,o=jans\", \"inum=1800.450A9A,ou=scopes,o=jans\", \"inum=1800.27A193,ou=scopes,o=jans\", \"inum=1800.3971D5,ou=scopes,o=jans\", \"inum=1800.891693,ou=scopes,o=jans\", \"inum=1800.A35DFD,ou=scopes,o=jans\", \"inum=1800.3516DE,ou=scopes,o=jans\", \"inum=F0C4,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f,ou=clients,o=jans\", \"inum\": \"1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f\", \"clientSecret\": \"4OJLToBXav0P\", \"frontChannelLogoutUri\": \"https://testjans.gluu.com/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/identity/scim/auth\", \"https://testjans.gluu.com/identity/authcode.htm\", \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.gluu.com/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } ] Creating a New OpenID Clients # We can create openid clients as well, Let's see the description. It has a schema file where is defined the properties needs to be filled to create a new openid clients. Operation ID: post-oauth-openid-clients Description: Create new OpenId connect client Schema: /components/schemas/Client To get the schema file: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/Client It contains a lot of properties. But, It's not important to fill each of these properties. We are going to fill these properties: frontChannelLogoutSessionRequired[false, true] applicationType[web, native] clientName subjectType[pairwise, public] includeClaimsInIdToken[false, true] { \"dn\": null, \"inum\": null, \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://client.example.org/cb\" ], \"claimRedirectUris\": [], \"responseTypes\": [], \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": [], \"clientName\": \"testOIDC\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"e\\\" : \\\"AQAB\\\", \\\"n\\\" : \\\"gmlDX_mgMcHX..\\\" ] }\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS512\", \"idTokenEncryptedResponseAlg\": \"RSA1_5\", \"idTokenEncryptedResponseEnc\": \"A256GCM\", \"userInfoSignedResponseAlg\": \"PS256\", \"userInfoEncryptedResponseAlg\": \"RSA1_5\", \"userInfoEncryptedResponseEnc\": \"A128GCM\", \"requestObjectSigningAlg\": \"PS512\", \"requestObjectEncryptionAlg\": \"A128KW\", \"requestObjectEncryptionEnc\": \"A256CBC+HS512\", \"tokenEndpointAuthMethod\": \"tls_client_auth\", \"tokenEndpointAuthSigningAlg\": \"PS384\", \"defaultMaxAge\": 1000000, \"requireAuthTime\": true, \"defaultAcrValues\": [], \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://client.example.org/logout/page1\", \"https://client.example.org/logout/page2\", \"https://client.example.org/logout/page3\" ], \"requestUris\": [], \"scopes\": [ \"read write dolphin\" ], \"claims\": [], \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": 100000000, \"accessTokenLifetime\": 100000000, \"customAttributes\": { \"name\": \"name, displayName, birthdate, email\", \"multiValued\": false, \"values\": [] }, \"customObjectClasses\": [], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"ES384\", \"disabled\": false, \"authorizedOrigins\": [], \"softwareId\": \"4NRB1-0XZABZI9E6-5SM3R\", \"softwareVersion\": \"2.1\", \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": true, \"keepClientAuthorizationAfterExpiration\": true, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": [], \"spontaneousScopeScriptDns\": [], \"backchannelLogoutUri\": [], \"backchannelLogoutSessionRequired\": true, \"additionalAudience\": [], \"postAuthnScripts\": [], \"consentGatheringScripts\": [], \"introspectionScripts\": [], \"rptClaimsScripts\": [] }, \"backchannelTokenDeliveryMode\": \"ping\", \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": \"PS384\", \"backchannelUserCodeParameter\": false, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } I have changed few things only here to show how to create an OpenID Connect Client. Please make sure that you filled each of the required properties to work the client.","title":"OpenID Connect Configuration"},{"location":"user/using-jans-cli/cli-openid-connect-client-configuration/#openid-connect-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of OpenID Connect Client Configuration: /opt/jans/jans-cli/config-cli.py --info OAuthOpenIDConnectClients Operation ID: get-oauth-openid-clients Description: Gets list of OpenID Connect clients Parameters: limit: Search size - max size of the results to return. [integer] pattern: Search pattern. [string] Operation ID: post-oauth-openid-clients Description: Create new OpenId connect client Schema: /components/schemas/Client Operation ID: put-oauth-openid-clients Description: Update OpenId Connect client. Schema: /components/schemas/Client Operation ID: get-oauth-openid-clients-by-inum Description: Get OpenId Connect Client by Inum. url-suffix: inum Operation ID: delete-oauth-openid-clients-by-inum Description: Delete OpenId Connect client. url-suffix: inum Operation ID: patch-oauth-openid-clients-by-inum Description: Update modified properties of OpenId Connect client by Inum. url-suffix: inum Schema: Array of /components/schemas/PatchRequest To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/PatchRequest","title":"OpenID Connect Configuration"},{"location":"user/using-jans-cli/cli-openid-connect-client-configuration/#get-list-of-openid-clients","text":"To get the openid clients, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-openid-clients Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly [ { \"dn\": \"inum=1801.30bd0499-9dc0-48dc-9eb3-96b80a8da856,ou=clients,o=jans\", \"inum\": \"1801.30bd0499-9dc0-48dc-9eb3-96b80a8da856\", \"clientSecret\": \"zITPCsgIfmDTkKWkonuu+g==\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=CACA-B9D4,ou=scopes,o=jans\", \"inum=CACA-5AA4,ou=scopes,o=jans\", \"inum=CACA-F1E3,ou=scopes,o=jans\", \"inum=CACA-A1BD,ou=scopes,o=jans\", \"inum=CACA-113F,ou=scopes,o=jans\", \"inum=CACA-22E5,ou=scopes,o=jans\", \"inum=CACA-E6DE,ou=scopes,o=jans\", \"inum=CACA-B965,ou=scopes,o=jans\", \"inum=CACA-7FB9,ou=scopes,o=jans\", \"inum=CACA-3B0C,ou=scopes,o=jans\", \"inum=CACA-FD1D,ou=scopes,o=jans\", \"inum=CACA-7419,ou=scopes,o=jans\", \"inum=CACA-55A1,ou=scopes,o=jans\", \"inum=CACA-7B22,ou=scopes,o=jans\", \"inum=CACA-66AE,ou=scopes,o=jans\", \"inum=CACA-8283,ou=scopes,o=jans\", \"inum=CACA-1A74,ou=scopes,o=jans\", \"inum=CACA-CCFC,ou=scopes,o=jans\", \"inum=CACA-EABC,ou=scopes,o=jans\", \"inum=CACA-E7BB,ou=scopes,o=jans\", \"inum=CACA-EF5F,ou=scopes,o=jans\", \"inum=CACA-179E,ou=scopes,o=jans\", \"inum=CACA-174C,ou=scopes,o=jans\", \"inum=CACA-B36D,ou=scopes,o=jans\", \"inum=CACA-88E3,ou=scopes,o=jans\", \"inum=CACA-C1F5,ou=scopes,o=jans\", \"inum=CACA-82B8,ou=scopes,o=jans\", \"inum=CACA-016F,ou=scopes,o=jans\", \"inum=CACA-8F20,ou=scopes,o=jans\", \"inum=CACA-79A1,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.3c40746d-63a6-478e-b06d-8f49bb984e4f,ou=clients,o=jans\", \"inum\": \"1001.3c40746d-63a6-478e-b06d-8f49bb984e4f\", \"clientSecret\": \"eVXRaEojULdohgOUbMeFPA==\", \"frontChannelLogoutUri\": \"https://testjans.imshakil.me/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.imshakil.me/identity/scim/auth\", \"https://testjans.imshakil.me/identity/authcode.htm\", \"https://testjans.imshakil.me/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.imshakil.me/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.imshakil.me/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null }, { \"dn\": \"inum=1202.049eb91f-6339-4e83-ac83-55df359f6c9c,ou=clients,o=jans\", \"inum\": \"1202.049eb91f-6339-4e83-ac83-55df359f6c9c\", \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM Requesting Party Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"0b60383f-13c9-4064-9de1-7946724c0bbc_sig_rs256\\\", \\\"x5c\\\" : [ \\\"MIIDCTCCAfGgAwIBAgIgLJXeu/MFKl144/y6Xj55fqA+RWTWE0VgEhOSb1CmITcwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTNaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCK7v3/S3Qn1puC16XM1mChQa3ygnAMoDQivlDj0AxLmSEO4ulmubVTbsvBFkt45+kKLvDUDozaNFhhNtnX1vZt37Fnd7/lnsODVn7GOrc8pGyiR048MfmPONO77LLqyf/ByrxhMpBYTR22kniRdQMc1+dHjWHIGzvmsQgMuefT2U81fqRpL0dkL2xDs7OEHm6BjQUoJgSXnf5BmWvdf+WiYPe5DXe6g56LdyZwwgN0vcx1IoYSMvmHlZyNjzyOPhCNgLPexXFpniBcFc5b5nGISgpn37yjVm4UIIMMGajv7jNJZKXkKZ+F4KRnuIByTYHwTqiHEwQoleRhlKJpNbthAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQsFAAOCAQEAhYEvDDBZ1Sl8b4Ng0aSXN+zw4nwS7pXBAwj4yLid47D6FnomFw25PYDAghO7YehDW18zjgbON69L5PH9Tqnq/Jzu1qAWpjWpwBVMRogCiGip/Kk59HmQos5/ckm9kgKrWhUw7vEqramHw40uqjXWuDfykWDbSqRYX2rccubSGwRsocMoMEoeFXLtyeBgjqoFY1Uqt4VTMdjTv6ekD+BLVfXOTlhemHSRXBG7GJVpwebYIyN/lx7LFAHYqbBi0adyGTI0/HQBtxMQeu57qy9oP+Q9gKse5QAz5Zesld71bKmUOshSGg4ks1JHH70wtRNPdQOgfdaaHHVzoyZo6FcMqg==\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS256\\\", \\\"n\\\" : \\\"iu79_0t0J9abgtelzNZgoUGt8oJwDKA0Ir5Q49AMS5khDuLpZrm1U27LwRZLeOfpCi7w1A6M2jRYYTbZ19b2bd-xZ3e_5Z7Dg1Z-xjq3PKRsokdOPDH5jzjTu-yy6sn_wcq8YTKQWE0dtpJ4kXUDHNfnR41hyBs75rEIDLnn09lPNX6kaS9HZC9sQ7OzhB5ugY0FKCYEl53-QZlr3X_lomD3uQ13uoOei3cmcMIDdL3MdSKGEjL5h5WcjY88jj4QjYCz3sVxaZ4gXBXOW-ZxiEoKZ9-8o1ZuFCCDDBmo7-4zSWSl5CmfheCkZ7iAck2B8E6ohxMEKJXkYZSiaTW7YQ\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"b3c52773-7377-45a2-97f8-0e8cc3895342_sig_rs384\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAPXe8+Rao043PUbs+WlpDB17Gyq8osq3tl/4d2qb38eTMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTE0WhcNMjIwMTE1MjIzOTIzWjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DJHMKIC9rsPUurwE9aRXJ0YCi0hUrfZJ7CP3bnE5dbjSFgO9jSpFT+BS8SEaEWhTMUsrLAXqANTqPfEz3ITWhVEHdDvBDrSrpjQQWcEksxYP4/ZaScnFg09yt6Y6U3UMzwPijlzvq84xsJ1KWaz2klCSWvb/jQ4RJj6SG4eTApX0A2cHJmHwJ1oM9SwQe+eeKprd+uZj12iouWPjah4ztz2PzzAmYh8l3Wlycw7hs5OQnxU2ZnygSMYh/2V5cKVK22FAp3fE3QxLXYmn4hkmSoHcy0UjRxhSS5Q8m4AcJzdfUauMqpIJ0yL/W9jkAVdsgTMcacjJF9eesVyhcwwgwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAJHB8bKmnQpllotN3dDg1heS2zqdsqyPK7K/5TFBRpXJV2LrIIAHEw5NjIh3vxva/dUwiJD/9uGpi3Xmn9wVFXhIxzYtSAGQmYxFEtkKsZZ7HmndmFbqbeHYv2q266yBQxx1GoZELyU85rrF+hB+/ZSdeMdqjq+Tyr25NwSHwDkGlYui3WAqLH0l0LqIvtSO5bgv6fpqhXe4H8PJ41EUsChN0HrIXNMJLbdvw8tnznJSMbaqKXjKCh0qr9GvHhxvZkDyklWRFTelg8Ct2xiH/eGeu2jwwc/QndcxNq0lqcFzyzp66oTUIdwrQitP9lgipB4c42jefoZjhv6mQaDbuO8=\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS384\\\", \\\"n\\\" : \\\"0DJHMKIC9rsPUurwE9aRXJ0YCi0hUrfZJ7CP3bnE5dbjSFgO9jSpFT-BS8SEaEWhTMUsrLAXqANTqPfEz3ITWhVEHdDvBDrSrpjQQWcEksxYP4_ZaScnFg09yt6Y6U3UMzwPijlzvq84xsJ1KWaz2klCSWvb_jQ4RJj6SG4eTApX0A2cHJmHwJ1oM9SwQe-eeKprd-uZj12iouWPjah4ztz2PzzAmYh8l3Wlycw7hs5OQnxU2ZnygSMYh_2V5cKVK22FAp3fE3QxLXYmn4hkmSoHcy0UjRxhSS5Q8m4AcJzdfUauMqpIJ0yL_W9jkAVdsgTMcacjJF9eesVyhcwwgw\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"bf5b0a2f-c977-4e0d-9a3c-bd8faef18e48_sig_rs512\\\", \\\"x5c\\\" : [ \\\"MIIDCTCCAfGgAwIBAgIgDrTQ+5YMX6eyx/WzSSJqS9gEsHlewOmswtphb3jE4/4wDQYJKoZIhvcNAQENBQAwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTVaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCWfXYlVgDnZpXP7XdEfSYbmJbKgVh0VzhRUzoXc1UTK+FZRM4NNuQBwkfF1X1vMg5x+1Dp1fhNw6anzf5oRjkgog6hEOucWDXq9+jjlkJPnUrYD9/yrinnBQPjsv2NFxWu7qI3KYUIWe96blPiqO1pJjUPk6dybCYoNoxk/0ut07/9uXcf3qVawqypGz4FHeiVz3SUJ1P17h59CS0+nCBT5OkR+rhT4XNc6qcqO3YDX/mj1vahuJijztoQQN82xp31bod9KsBezHIpuW8aM+steNz/aOn49bLYbNxneXV032wPmTZHr0mxxIlS95Vux0y/FVMnt/D1/L5SbWV/SxVDAgMBAAGjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADANBgkqhkiG9w0BAQ0FAAOCAQEAaEMcSaALKCCLjQ9GFyGQT3pOdT5AplJSD4ql+dISq44atxuDGSyrKyGehW07djBlUZFW8aDDMsOnQMjC049RU1LuU77FB9cmFhWAFCGIPTFFDdQrCK+LYB9LwSRX7kqBHsHZhqH9STdRMamakLnNuSJS5YzQNFziCIEUofkg0xe5WsAB4GdJrOfvy7JF0UnmjXhwpvZY/65b/Vv0o28j46QS4w769ltZwxIABKom0jdbfbn41UeLTlwgRftXh2/k59W5ma3lZPO/zi2aOl9nuj+7lXIUQKLoBUgDBYJ+8SyF0HhqDvlWijb29eJlPKKHkFRiQTo5Cbs704GWK8bx1A==\\\" ], \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"RS512\\\", \\\"n\\\" : \\\"ln12JVYA52aVz-13RH0mG5iWyoFYdFc4UVM6F3NVEyvhWUTODTbkAcJHxdV9bzIOcftQ6dX4TcOmp83-aEY5IKIOoRDrnFg16vfo45ZCT51K2A_f8q4p5wUD47L9jRcVru6iNymFCFnvem5T4qjtaSY1D5OncmwmKDaMZP9LrdO__bl3H96lWsKsqRs-BR3olc90lCdT9e4efQktPpwgU-TpEfq4U-FzXOqnKjt2A1_5o9b2obiYo87aEEDfNsad9W6HfSrAXsxyKblvGjPrLXjc_2jp-PWy2GzcZ3l1dN9sD5k2R69JscSJUveVbsdMvxVTJ7fw9fy-Um1lf0sVQw\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-256\\\", \\\"kid\\\" : \\\"fb0ef9a4-3b7f-4880-b896-57449de9ece8_sig_es256\\\", \\\"x5c\\\" : [ \\\"MIIBfTCCASOgAwIBAgIgQgvjjFY0ZMqTJ3pbRsXCrIcHCdP64r+VwPgHUCzhTwgwCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTVaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAT7B1VR+pnR8J0Omavpaeyq5K2aiJZXXQvuHn6piFZd7Gfr0rzzA9hSTgGZ84yOA96ZkV8XS71cuzP24Q72SsCKoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDSAAwRQIgPMWe6opagvCW0nkMASqpy7aQmnOw2cHFk8gqc7ztZyoCIQCK0xN9Kc3my9qGPYM75lUx2AwAzgyhkdWzo80jd+BVkA==\\\" ], \\\"x\\\" : \\\"APsHVVH6mdHwnQ6Zq-lp7KrkrZqIllddC-4efqmIVl3s\\\", \\\"y\\\" : \\\"Z-vSvPMD2FJOAZnzjI4D3pmRXxdLvVy7M_bhDvZKwIo\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES256\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-384\\\", \\\"kid\\\" : \\\"7cc680c6-c7d5-4a5c-885e-1e591dc1511d_sig_es384\\\", \\\"x5c\\\" : [ \\\"MIIBuTCCAUCgAwIBAgIgDPX0NX82/puI5AxdpOoQxPrsODbEGF3usqHUizJFvd4wCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTZaFw0yMjAxMTUyMjM5MjNaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR88zjor1uRqZg+UFFF7VrUyPXrGlkojxw2WiJsk3AKr6IbZNhGasSxjLV24Gjoo8BJUdcwX4DcOufpspU0KBUCaNY0rJjV6UM8kiyqDCYoKW0UpKxx1eXwm5m1AmCjkOSjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNnADBkAjAjyJsnKck1+hkXjAoN5PpLLwua4i6+KfW6fBeOXbwGjN7WkfJ595KstuPMI7GzP/ACMAaHxFdnih0lkfWJ6lwr3IXn4eon/yAskkN24DrK0Q9e1mJkrDU2uc3ybh796+f3IQ==\\\" ], \\\"x\\\" : \\\"fPM46K9bkamYPlBRRe1a1Mj16xpZKI8cNloibJNwCq-iG2TYRmrEsYy1duBo6KPA\\\", \\\"y\\\" : \\\"SVHXMF-A3Drn6bKVNCgVAmjWNKyY1elDPJIsqgwmKCltFKSscdXl8JuZtQJgo5Dk\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES384\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-521\\\", \\\"kid\\\" : \\\"98011bc0-8566-41ec-a64b-e0fca1fb22a2_sig_es512\\\", \\\"x5c\\\" : [ \\\"MIICBjCCAWegAwIBAgIhAM1ik4Lr1/favN6xSF65r92aemqYgpCMfLO9vVAtmOO4MAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTE2WhcNMjIwMTE1MjIzOTIzWjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQAZG1VCPrKI5D9iLqkibhaKHH/j3SmDjhr9em63SIztO6gFXtEFNW4Jqc7oTHHcOv6VpagxX5XTzLinhpUQRuzEFUAw39iGsIJbwvGWarrw5/OCZaKPNRVA/kzAf9dl0I17EMyvGP0ctm6t4qqY8PjqygjA2nBoZWwLnhZu9q54IrdT+6jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBjAAwgYgCQgHydUf16d/5yvFP5NGzBHOYY7sQ5jV0i2ICC+Vdh02jVTcmaAy6f2uraa6eL5X9SrfiwtR9HvkMqB/svMzAv999mQJCAL3LrtobouAY/i4Hxvfgt/H9Sf5G47zbO5QJBoqkOA9Q1OG4paRIVSQ3d1iZFvSPLfmbqwXee0aq8H9CU192+y52\\\" ], \\\"x\\\" : \\\"ZG1VCPrKI5D9iLqkibhaKHH_j3SmDjhr9em63SIztO6gFXtEFNW4Jqc7oTHHcOv6VpagxX5XTzLinhpUQRuzEFU\\\", \\\"y\\\" : \\\"AMN_YhrCCW8Lxlmq68OfzgmWijzUVQP5MwH_XZdCNexDMrxj9HLZureKqmPD46soIwNpwaGVsC54WbvaueCK3U_u\\\", \\\"exp\\\" : 1642286363453, \\\"alg\\\" : \\\"ES512\\\" } ]}\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"private_key_jwt\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null }, { \"dn\": \"inum=1201.95be8034-0b72-4add-959c-3edf98b91af6,ou=clients,o=jans\", \"inum\": \"1201.95be8034-0b72-4add-959c-3edf98b91af6\", \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM Resource Server Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"8e6d654d-2133-45b6-84c4-4fce267d6bee_sig_rs256\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAO4ZTRoknOI/s7Mq9hIT424qwd9tY05Ht2uSgz/CuWmbMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTA5WhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsircewYbwIlSPYt6H3yFoxn26wSpij6sYsFHe6HcWkxSmbgkYSfTF5n+14PorBhsWzKDY+YODqIH9sNfZAjx3yX/VQpqlXn52Uwt1ZGb8tnwaNbbMkFW2848fqZXxtZHrBUVMbN+jiMec1tnI6ONIsDNJlBB4jJgE/wIThMtl5cmys9/RHmfr6YAnEVEZksFtyaDS3W4f3JsrbgWs1IYcY9MGeAQJ+OpXifb5D0qhSUrDjLBbKCOukvRf6Ue3U/Q4NaxpokHYhqbr/YA6jiZ2XPcJl53HKdpU4eO6V4HP0nuiVi7q1nQhb9f4cnuPnIKYaai759bozXTjByoki6YCQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAIyswl5l42DSzAJmJTIwNwJUDGORPPoj3CQlBsaT5pQ2Ykiqv1gqBLjNZw/Em1TYeD2Udm8Gjn5sPUxcwdiiH1zATYPyxk/uv4POkwQBw2n3L8OA4pl0d6So5HVzA1CS23Sy1CSKK0OiRVMym0TxzutYIJB4Usqg2KhgwJBzonoAHY8IXd9QvlV7+4Cb2gE4jpF8kUKgF3dCqQVZybDrEFQ0xf8bDPWp4CBTTVoHsyr/bn7UFpHO1FxKAWJglNa6cNOv1a/1QzjPK2OZGnYciHf/BT6SWRkJukRNs/O3jrfJJsw+LSlQSjpcZPMUwJ3+JJ5Eax41bseue1mLa1js2h4=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS256\\\", \\\"n\\\" : \\\"sircewYbwIlSPYt6H3yFoxn26wSpij6sYsFHe6HcWkxSmbgkYSfTF5n-14PorBhsWzKDY-YODqIH9sNfZAjx3yX_VQpqlXn52Uwt1ZGb8tnwaNbbMkFW2848fqZXxtZHrBUVMbN-jiMec1tnI6ONIsDNJlBB4jJgE_wIThMtl5cmys9_RHmfr6YAnEVEZksFtyaDS3W4f3JsrbgWs1IYcY9MGeAQJ-OpXifb5D0qhSUrDjLBbKCOukvRf6Ue3U_Q4NaxpokHYhqbr_YA6jiZ2XPcJl53HKdpU4eO6V4HP0nuiVi7q1nQhb9f4cnuPnIKYaai759bozXTjByoki6YCQ\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"10a2a7f6-cabf-41c0-9d62-37644f214e1c_sig_rs384\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAPAwaemYVwozpAJBHURxIh6oD+BjzEvhLegWbdsM7/6zMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTEwWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1s5Kx0ltPJswSizHDNTA786pyU3bqT5dym0O/9RUs1ishsp76QjytsYdxRZzzaYB4CcEaVRj5ZIZQwt0JNqbfx/MPiMEvpJhZHEruZRc1EsE3kUCx6yInBIuHk6yKsdYoAKiHa0dJOMirTcElZyCCzq83QBKpYdX7kV+i29kF/lOSvPeAsizN8HSmB29Hhy30nB3GmcYwghHAXCSpG5g467iGBi+gOMxRm7g/Uj/WSYIDc8CyGyd6iHPK9smCyna5cCfRtuGTAf+/fnfiK5IFrGXvDK5ggM+cbKBope7RceSawN28kjVtt+gY6oLvI3JrV0V33qKTC30JnPJCxTZ4wIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBAGT0S+ke7qG9b7VS553n2JLTB13kSlXrBoa1XX4NlhnHnWO/w/YTFAi3jGVmgCesTr+2XBBFAIdOD9bC397Ufi8xd3PEDhNQKpWThhJpasMJvsiVqnXRsmoN+j5sqtzyUwl1Dsk5zdtDvoV7zeJHJ3niEpS5in6Gw8jMakn84VTekvtQvG6NBWwjVwWc4awSN18YVhMJYbs5J1tTSOcXjdwPD4Ee0WQMBrKqLeo7b9W5/F2Jb3DbfgMhkikVA9jRowyLMgFpyMI6VPneMDWyadnS9YrJHeX1Ml6i3m0uN3Jvp817jhgYFS1L74p3gA9oO0Tin6wnS5EZdWp8kCfrCx4=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS384\\\", \\\"n\\\" : \\\"1s5Kx0ltPJswSizHDNTA786pyU3bqT5dym0O_9RUs1ishsp76QjytsYdxRZzzaYB4CcEaVRj5ZIZQwt0JNqbfx_MPiMEvpJhZHEruZRc1EsE3kUCx6yInBIuHk6yKsdYoAKiHa0dJOMirTcElZyCCzq83QBKpYdX7kV-i29kF_lOSvPeAsizN8HSmB29Hhy30nB3GmcYwghHAXCSpG5g467iGBi-gOMxRm7g_Uj_WSYIDc8CyGyd6iHPK9smCyna5cCfRtuGTAf-_fnfiK5IFrGXvDK5ggM-cbKBope7RceSawN28kjVtt-gY6oLvI3JrV0V33qKTC30JnPJCxTZ4w\\\" }, { \\\"kty\\\" : \\\"RSA\\\", \\\"e\\\" : \\\"AQAB\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"\\\", \\\"kid\\\" : \\\"35a9fa3e-56ac-4408-91c3-e959735222b9_sig_rs512\\\", \\\"x5c\\\" : [ \\\"MIIDCjCCAfKgAwIBAgIhAKLT4VuuTD1hb4Gsdd6djKvblI8eSGoksOMt+l2OG01XMA0GCSqGSIb3DQEBDQUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTEwWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAppg3PsDya/MqabJX27lWx/xy/2zWaSF9+AQ1el34ECdf5e2PGjZIY5Nsx4T2K5uPTz9gH1i/3x8ViCNCX+VGjmyU96LQrLqTP0p9/dI1/E9Llr1igVn8ryyMCf0i8o+y9wEuxaRtiSCtUx65KLzwiGefgZGd7UwrAFce6Hy7VvYDdx1z6AcsJt08CXdDUAIU/M5zq3JCfmpyMFQQHPQ6H6UlK8pFeAGxLNp4IUVmZgUaswnZiaKgglMBqVVOh7bGBIQbmjzbwnIOWVoyuZt6vRfdQUoduya+PwxjwkF4WCRNNJr0NRbMp2aXJJvAHLNPcDXr2pntg4Gb2s40DMuimwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQENBQADggEBAIjIpRhEg9fQ9DQXbe7wEtaKpxzTl/FM+BAriQiIek2ZYDy2ux+uHmbTPYwIGNyTpkeAkkqk2xFUjP0QYDo9Q9vqlrWz0mTXDoRDuqyFtHy/4n2xVtAmJSg5us4wFWyBSiSOWyOL3H7TUMlSFjVGLUkweSOTymM29mPYb6xRay/6f1q6jB28LtHCpWm15ZmHa2XdyZTb5WSSD480S7jXcF3ON48AasXBfRxZpZpigF6YLZbxqSU4829RjnexfMJWHy81hVeFH3L+7WUkASpZNfIGlzKSFDqVuK3RncMswCHgMcygdzjem6DDH71qUDpwMVGLIcVQ0ZSjQzFSpd6fKag=\\\" ], \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"RS512\\\", \\\"n\\\" : \\\"ppg3PsDya_MqabJX27lWx_xy_2zWaSF9-AQ1el34ECdf5e2PGjZIY5Nsx4T2K5uPTz9gH1i_3x8ViCNCX-VGjmyU96LQrLqTP0p9_dI1_E9Llr1igVn8ryyMCf0i8o-y9wEuxaRtiSCtUx65KLzwiGefgZGd7UwrAFce6Hy7VvYDdx1z6AcsJt08CXdDUAIU_M5zq3JCfmpyMFQQHPQ6H6UlK8pFeAGxLNp4IUVmZgUaswnZiaKgglMBqVVOh7bGBIQbmjzbwnIOWVoyuZt6vRfdQUoduya-PwxjwkF4WCRNNJr0NRbMp2aXJJvAHLNPcDXr2pntg4Gb2s40DMuimw\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-256\\\", \\\"kid\\\" : \\\"b05a91e8-aa4e-4f6c-860a-3b63f13b16da_sig_es256\\\", \\\"x5c\\\" : [ \\\"MIIBfDCCASOgAwIBAgIgFbx/JYXagj82QeW+8XBk/FcdCinm/kX04q4tBOKiQ+gwCgYIKoZIzj0EAwIwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTFaFw0yMjAxMTUyMjM5MTlaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARNynAgBRUdqdd5/Os3gpG/Y/CozNptimxnUXdGcDrMrLFBOtwVrB6wYk69Z9U2iY6KPTmgxHQ/MxcHiJOsTfuOoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwCgYIKoZIzj0EAwIDRwAwRAIgeohxfVOK3qgJSNZRzk50PvjeZZ6sIJi1uAOlsaYEMpcCIGPLcDJYIaFfNVQbO/UZjymtiDpoZdb8U39GSanA6HfP\\\" ], \\\"x\\\" : \\\"TcpwIAUVHanXefzrN4KRv2PwqMzabYpsZ1F3RnA6zKw\\\", \\\"y\\\" : \\\"ALFBOtwVrB6wYk69Z9U2iY6KPTmgxHQ_MxcHiJOsTfuO\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES256\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-384\\\", \\\"kid\\\" : \\\"30fc8067-9cbd-4a39-8621-6555815e046f_sig_es384\\\", \\\"x5c\\\" : [ \\\"MIIBuzCCAUCgAwIBAgIgAeP45q0dJdlruXGW4aKW/728ttfGj31IHROMLnFa5OQwCgYIKoZIzj0EAwMwJDEiMCAGA1UEAwwZSmFucyBBdXRoIENBIENlcnRpZmljYXRlczAeFw0yMTAxMTUyMjM5MTFaFw0yMjAxMTUyMjM5MTlaMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARHgy8tqS+sfqcL4f0LrTnisvAN6QEgylRR/upFj9+FOc7b5eImEzhO+PMhTmNvbutWN+0pVhZ5IcBY9dFSDyBSs9lkWgUDgcKXyg7HCIhnC7CXQfwPKOzH7ZzoD/2D6SWjJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDAwNpADBmAjEAp1Gof1uj66oNQsIvSaKBhZkgRoAIweQKVbvcXUTKr3P00HOZMdCrkhYwqXEmDmmzAjEA2sk385nNl/uyUzaW3gfciCxXAeMXUQUjmp6ZDrpuPDleL6jo1u6hoURO30EXBNRR\\\" ], \\\"x\\\" : \\\"R4MvLakvrH6nC-H9C6054rLwDekBIMpUUf7qRY_fhTnO2-XiJhM4TvjzIU5jb27r\\\", \\\"y\\\" : \\\"VjftKVYWeSHAWPXRUg8gUrPZZFoFA4HCl8oOxwiIZwuwl0H8Dyjsx-2c6A_9g-kl\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES384\\\" }, { \\\"kty\\\" : \\\"EC\\\", \\\"use\\\" : \\\"sig\\\", \\\"crv\\\" : \\\"P-521\\\", \\\"kid\\\" : \\\"4c1c8652-06a0-4203-bec7-f5e1408f9a71_sig_es512\\\", \\\"x5c\\\" : [ \\\"MIICBTCCAWegAwIBAgIhAOSKu6QwZhmEMffavHu0TX9xI23MKmwdmhS3iFnklzJrMAoGCCqGSM49BAMEMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTExWhcNMjIwMTE1MjIzOTE5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQA79ze+ti5XVPYSVjd5j/pFDMftJC/yKZ67UXMF4hGKYPOpyntzg2DpObgmYwnyituSmE+Nk04aYyMb9wDYPtAKywA4K+G+8M4i3oQ3u2fxxIEcd/k1hl63rAJwaRCHHYSeUuHkDs90aYNkwTotuOta2+IVzLHTFtut78Ifejy41yqG76jJzAlMCMGA1UdJQQcMBoGCCsGAQUFBwMBBggrBgEFBQcDAgYEVR0lADAKBggqhkjOPQQDBAOBiwAwgYcCQSyYB5WGd7N0eutyN4VZFnhivJczXshpkYuz5/XX1HmZwNIwBtc1nTSTclQyZNNNPsadKHW3zrpLmuh7ZJtkAQwjAkIBHOUe7iZNtzzz9o3JX6c3a0GtAkNdV3fDB523Xp+jq6coUzzbUo0qX3tD01iKrxtHh/RY3C7GYNRTOndw9G7efnE=\\\" ], \\\"x\\\" : \\\"AO_c3vrYuV1T2ElY3eY_6RQzH7SQv8imeu1FzBeIRimDzqcp7c4Ng6Tm4JmMJ8orbkphPjZNOGmMjG_cA2D7QCss\\\", \\\"y\\\" : \\\"AOCvhvvDOIt6EN7tn8cSBHHf5NYZet6wCcGkQhx2EnlLh5A7PdGmDZME6LbjrWtviFcyx0xbbre_CH3o8uNcqhu-\\\", \\\"exp\\\" : 1642286359278, \\\"alg\\\" : \\\"ES512\\\" } ]}\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"private_key_jwt\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=6D99,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": null, \"jansId\": null } ] It will show all the openid clients together. To search using parameters: /opt/jans/jans-cli/config-cli.py --operation-id get-oauth-openid-clients --endpoint-args limit:2 It will show two OpenID clients randomly. Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly Calling with params limit=2 [ { \"dn\": \"inum=1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805,ou=clients,o=jans\", \"inum\": \"1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805\", \"clientSecret\": \"KfwZeAfq4jrL\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/admin-ui\", \"http//:localhost:4100\" ], \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1800.F6E877,ou=scopes,o=jans\", \"inum=1800.D4F3E7,ou=scopes,o=jans\", \"inum=1800.2FD7EF,ou=scopes,o=jans\", \"inum=1800.97B23C,ou=scopes,o=jans\", \"inum=1800.8FC2C7,ou=scopes,o=jans\", \"inum=1800.1FFDF2,ou=scopes,o=jans\", \"inum=1800.5CF44C,ou=scopes,o=jans\", \"inum=1800.CCA518,ou=scopes,o=jans\", \"inum=1800.E62D6E,ou=scopes,o=jans\", \"inum=1800.11CB33,ou=scopes,o=jans\", \"inum=1800.781FA2,ou=scopes,o=jans\", \"inum=1800.ADAD8F,ou=scopes,o=jans\", \"inum=1800.40F22F,ou=scopes,o=jans\", \"inum=1800.7619BA,ou=scopes,o=jans\", \"inum=1800.E0DAF5,ou=scopes,o=jans\", \"inum=1800.7F45B0,ou=scopes,o=jans\", \"inum=1800.778C57,ou=scopes,o=jans\", \"inum=1800.E39293,ou=scopes,o=jans\", \"inum=1800.939483,ou=scopes,o=jans\", \"inum=1800.0ED2E8,ou=scopes,o=jans\", \"inum=1800.66CA59,ou=scopes,o=jans\", \"inum=1800.A4DBE5,ou=scopes,o=jans\", \"inum=1800.9AF358,ou=scopes,o=jans\", \"inum=1800.478CCF,ou=scopes,o=jans\", \"inum=1800.450A9A,ou=scopes,o=jans\", \"inum=1800.27A193,ou=scopes,o=jans\", \"inum=1800.3971D5,ou=scopes,o=jans\", \"inum=1800.891693,ou=scopes,o=jans\", \"inum=1800.A35DFD,ou=scopes,o=jans\", \"inum=1800.3516DE,ou=scopes,o=jans\", \"inum=F0C4,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f,ou=clients,o=jans\", \"inum\": \"1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f\", \"clientSecret\": \"4OJLToBXav0P\", \"frontChannelLogoutUri\": \"https://testjans.gluu.com/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/identity/scim/auth\", \"https://testjans.gluu.com/identity/authcode.htm\", \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.gluu.com/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } ]","title":"Get List of OpenID Clients"},{"location":"user/using-jans-cli/cli-openid-connect-client-configuration/#creating-a-new-openid-clients","text":"We can create openid clients as well, Let's see the description. It has a schema file where is defined the properties needs to be filled to create a new openid clients. Operation ID: post-oauth-openid-clients Description: Create new OpenId connect client Schema: /components/schemas/Client To get the schema file: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/Client It contains a lot of properties. But, It's not important to fill each of these properties. We are going to fill these properties: frontChannelLogoutSessionRequired[false, true] applicationType[web, native] clientName subjectType[pairwise, public] includeClaimsInIdToken[false, true] { \"dn\": null, \"inum\": null, \"clientSecret\": null, \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://client.example.org/cb\" ], \"claimRedirectUris\": [], \"responseTypes\": [], \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": [], \"clientName\": \"testOIDC\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": \"{ \\\"keys\\\" : [ { \\\"e\\\" : \\\"AQAB\\\", \\\"n\\\" : \\\"gmlDX_mgMcHX..\\\" ] }\", \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS512\", \"idTokenEncryptedResponseAlg\": \"RSA1_5\", \"idTokenEncryptedResponseEnc\": \"A256GCM\", \"userInfoSignedResponseAlg\": \"PS256\", \"userInfoEncryptedResponseAlg\": \"RSA1_5\", \"userInfoEncryptedResponseEnc\": \"A128GCM\", \"requestObjectSigningAlg\": \"PS512\", \"requestObjectEncryptionAlg\": \"A128KW\", \"requestObjectEncryptionEnc\": \"A256CBC+HS512\", \"tokenEndpointAuthMethod\": \"tls_client_auth\", \"tokenEndpointAuthSigningAlg\": \"PS384\", \"defaultMaxAge\": 1000000, \"requireAuthTime\": true, \"defaultAcrValues\": [], \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://client.example.org/logout/page1\", \"https://client.example.org/logout/page2\", \"https://client.example.org/logout/page3\" ], \"requestUris\": [], \"scopes\": [ \"read write dolphin\" ], \"claims\": [], \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": 100000000, \"accessTokenLifetime\": 100000000, \"customAttributes\": { \"name\": \"name, displayName, birthdate, email\", \"multiValued\": false, \"values\": [] }, \"customObjectClasses\": [], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"ES384\", \"disabled\": false, \"authorizedOrigins\": [], \"softwareId\": \"4NRB1-0XZABZI9E6-5SM3R\", \"softwareVersion\": \"2.1\", \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": true, \"keepClientAuthorizationAfterExpiration\": true, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": [], \"spontaneousScopeScriptDns\": [], \"backchannelLogoutUri\": [], \"backchannelLogoutSessionRequired\": true, \"additionalAudience\": [], \"postAuthnScripts\": [], \"consentGatheringScripts\": [], \"introspectionScripts\": [], \"rptClaimsScripts\": [] }, \"backchannelTokenDeliveryMode\": \"ping\", \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": \"PS384\", \"backchannelUserCodeParameter\": false, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } I have changed few things only here to show how to create an OpenID Connect Client. Please make sure that you filled each of the required properties to work the client.","title":"Creating a New OpenID Clients"},{"location":"user/using-jans-cli/cli-scim/","text":"SCIM-CLI # SCIM is a specification designed to reduce the complexity of user management operations by providing a common user schema and the patterns for exchanging such schema using HTTP in a platform-neutral fashion. The aim of SCIM is achieving interoperability, security, and scalability in the context of identity management. SCIM-CLI which is going to help on performing such SCIM operations on the Janssen Server with ease and more readability. It supports both of the Menu-driven Interactive Mode and Command Line Mode .","title":"SCIM-CLI"},{"location":"user/using-jans-cli/cli-scim/#scim-cli","text":"SCIM is a specification designed to reduce the complexity of user management operations by providing a common user schema and the patterns for exchanging such schema using HTTP in a platform-neutral fashion. The aim of SCIM is achieving interoperability, security, and scalability in the context of identity management. SCIM-CLI which is going to help on performing such SCIM operations on the Janssen Server with ease and more readability. It supports both of the Menu-driven Interactive Mode and Command Line Mode .","title":"SCIM-CLI"},{"location":"user/using-jans-cli/cli-smtp-configuration/","text":"SMTP Configuration # Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of SMTP Configuration using Janssen CLI. /opt/jans/jans-cli/config-cli.py --info ConfigurationSMTP Operation ID: get-config-smtp Description: Returns SMTP server configuration. Operation ID: post-config-smtp Description: Adds SMTP server configuration. Schema: /components/schemas/SmtpConfiguration Operation ID: put-config-smtp Description: Updates SMTP server configuration. Schema: /components/schemas/SmtpConfiguration Operation ID: delete-config-smtp Description: Deletes SMTP server configuration. Operation ID: test-config-smtp Description: Test SMTP server configuration. To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/SmtpConfiguration As we see, we can perform many operations such as update , delete , test , post , etc. Let's do some operations. Find SMTP Server Configuration # To view the current SMTP server configuration, run the following command line: /opt/jans/jans-cli/config-cli.py --operation-id get-config-smtp It will show your SMTP server configuration as below: Getting access token for scope https://jans.io/oauth/config/smtp.readonly { \"host\": \"webmail.gluu.org\", \"port\": 587, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": \"fHze8OEMs1MzkGhWw/29eg==\" } Setup New SMTP Server Configuration # This operation can be performed to update/post a new SMTP configuration on your Janssen server. Let's see the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/SmtpConfiguration > /tmp/smtp.json It will create a .json file. Let's modify this file: nano /tmp/smtp.json You can update each of its properties. To perform this operation, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id post-config-smtp --data /tmp/smtp.json If you run the following command, it will update your janssen smtp server and print on the screen as below. Getting access token for scope https://jans.io/oauth/config/smtp.write Server Response: { \"host\": \"webmail.gluu.org\", \"port\": 587, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": \"fHze8OEMs1MzkGhWw/29eg==\" } Update SMTP Server Configuration # To update smtp server, simply change any information on /tmp/smtp.json file and run the following command: /opt/jans/jans-cli/config-cli.py --operation-id put-config-smtp --data /tmp/smtp.json It will update the information.","title":"SMTP Configuration"},{"location":"user/using-jans-cli/cli-smtp-configuration/#smtp-configuration","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode Let's get the information of SMTP Configuration using Janssen CLI. /opt/jans/jans-cli/config-cli.py --info ConfigurationSMTP Operation ID: get-config-smtp Description: Returns SMTP server configuration. Operation ID: post-config-smtp Description: Adds SMTP server configuration. Schema: /components/schemas/SmtpConfiguration Operation ID: put-config-smtp Description: Updates SMTP server configuration. Schema: /components/schemas/SmtpConfiguration Operation ID: delete-config-smtp Description: Deletes SMTP server configuration. Operation ID: test-config-smtp Description: Test SMTP server configuration. To get sample shema type /opt/jans/jans-cli/config-cli.py --schema <schma>, for example /opt/jans/jans-cli/config-cli.py --schema /components/schemas/SmtpConfiguration As we see, we can perform many operations such as update , delete , test , post , etc. Let's do some operations.","title":"SMTP Configuration"},{"location":"user/using-jans-cli/cli-smtp-configuration/#find-smtp-server-configuration","text":"To view the current SMTP server configuration, run the following command line: /opt/jans/jans-cli/config-cli.py --operation-id get-config-smtp It will show your SMTP server configuration as below: Getting access token for scope https://jans.io/oauth/config/smtp.readonly { \"host\": \"webmail.gluu.org\", \"port\": 587, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": \"fHze8OEMs1MzkGhWw/29eg==\" }","title":"Find SMTP Server Configuration"},{"location":"user/using-jans-cli/cli-smtp-configuration/#setup-new-smtp-server-configuration","text":"This operation can be performed to update/post a new SMTP configuration on your Janssen server. Let's see the schema first: /opt/jans/jans-cli/config-cli.py --schema /components/schemas/SmtpConfiguration > /tmp/smtp.json It will create a .json file. Let's modify this file: nano /tmp/smtp.json You can update each of its properties. To perform this operation, run the following command: /opt/jans/jans-cli/config-cli.py --operation-id post-config-smtp --data /tmp/smtp.json If you run the following command, it will update your janssen smtp server and print on the screen as below. Getting access token for scope https://jans.io/oauth/config/smtp.write Server Response: { \"host\": \"webmail.gluu.org\", \"port\": 587, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": \"fHze8OEMs1MzkGhWw/29eg==\" }","title":"Setup New SMTP Server Configuration"},{"location":"user/using-jans-cli/cli-smtp-configuration/#update-smtp-server-configuration","text":"To update smtp server, simply change any information on /tmp/smtp.json file and run the following command: /opt/jans/jans-cli/config-cli.py --operation-id put-config-smtp --data /tmp/smtp.json It will update the information.","title":"Update SMTP Server Configuration"},{"location":"user/using-jans-cli/cli-user/","text":"User Resources # Prerequisite: Know how to use the Janssen CLI in command-line mode The first thing is to do, Let's get some information for the following task: /opt/jans/jans-cli/scim-cli.py --info User In retrun we get, root@testjans:~# /opt/jans/jans-cli/scim-cli.py --info User Operation ID: get-users Description: Query User resources (see section 3.4.2 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] filter: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644 [string] startIndex: The 1-based index of the first query result [integer] count: Specifies the desired maximum number of query results per page [integer] sortBy: The attribute whose value will be used to order the returned responses [string] sortOrder: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\" [string] Operation ID: create-user Description: Allows creating a User resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/UserResource Schema: /components/schemas/UserResource Operation ID: get-user-by-id Description: Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Operation ID: update-user-by-id Description: Updates a User resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/UserResource Schema: /components/schemas/UserResource Operation ID: delete-user-by-id Description: Deletes a user resource url-suffix: id Parameters: id: Identifier of the resource to delete [string] Operation ID: patch-user-by-id Description: Updates one or more attributes of a User resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest Schema: /components/schemas/PatchRequest Operation ID: search-user Description: Query User resources (see section 3.4.2 of RFC 7644) Schema: /components/schemas/SearchRequest Schema: /components/schemas/SearchRequest To get sample schema type /opt/jans/jans-cli/scim-cli.py --schema <schma>, for example /opt/jans/jans-cli/scim-cli.py Find Users List # This operation is used to get list of the users and its properties. The command line is: /opt/jans/jans-cli/scim-cli.py --operation-id get-users By default, This will return all of the users and their properties. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id get-users Getting access token for scope https://jans.io/scim/users.read { \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-06T18:39:54.087Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } It also supports parameters for the advanced search. Those parameters are: 1. attributes 2. excludeAttributes 3. filter 4. count [ define maximum number of query ] 5. sortBy [ attribute ] 6. sortOrder [ 'ascending', 'descending' ] This is an example with endpoint-args : /opt/jans/jans-cli/scim-cli.py --operation-id get-users --endpoint-args count:1 It returns as below: Getting access token for scope https://jans.io/scim/users.read Calling with params count=1 { \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-06T18:39:54.087Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } Creating an User Resources # This operation can be performed to create user resources. Operation ID: create-user Description: Allows creating a User resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/UserResource As we see, to perform this operation we need to define the schema. So, let's get the schema of this operation. /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/UserResource > /tmp/create-user.json root@testjans:~# cat /tmp/create-user.json { \"externalId\": null, \"userName\": null, \"name\": { \"familyName\": null, \"givenName\": null, \"middleName\": null, \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": null }, \"displayName\": null, \"nickName\": null, \"profileUrl\": null, \"title\": \"Vice President\", \"userType\": \"Contractor\", \"preferredLanguage\": \"en\", \"locale\": \"en-US\", \"timezone\": \"America/Los_Angeles\", \"active\": false, \"password\": null, \"emails\": { \"value\": \"gossow@nsfw.com\", \"display\": null, \"type\": \"work\", \"primary\": true }, \"phoneNumbers\": { \"value\": \"+1-555-555-8377\", \"display\": null, \"type\": \"fax\", \"primary\": true }, \"ims\": { \"value\": null, \"display\": null, \"type\": \"gtalk\", \"primary\": true }, \"photos\": { \"value\": \"https://pics.nsfw.com/gossow.png\", \"display\": null, \"type\": \"thumbnail\", \"primary\": true }, \"addresses\": { \"formatted\": null, \"streetAddress\": \"56 Acacia Avenue\", \"locality\": null, \"region\": null, \"postalCode\": null, \"country\": \"UK\", \"type\": \"home\", \"primary\": false }, \"groups\": { \"value\": \"180ee84f0671b1\", \"$ref\": \"https://nsfw.com/scim/restv1/v2/Groups/180ee84f0671b1\", \"display\": \"Cult managers\", \"type\": \"direct\" }, \"entitlements\": { \"value\": \"Stakeholder\", \"display\": null, \"type\": null, \"primary\": false }, \"roles\": { \"value\": \"Project manager\", \"display\": null, \"type\": null, \"primary\": false }, \"x509Certificates\": { \"value\": null, \"display\": null, \"type\": null, \"primary\": true }, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": {}, \"schemas\": [], \"id\": null, \"meta\": { \"resourceType\": null, \"created\": null, \"lastModified\": null, \"location\": null } } Now it's pretty simple. Fill each of this information, you may skip some of this properties as well. If you look at the schema, some of the properties are already filled with some random value. You can modify them as well or ignore them. let's modify this schema: nano /tmp/create-user.json Finally use below command line, to create an user resources. /opt/jans/jans-cli/scim-cli.py --operation-id create-user --data /tmp/create-user.json It will generate user inum value, metadata and will be added in user resources: Getting access token for scope https://jans.io/scim/users.write Server Response: { \"externalId\": null, \"userName\": \"mhosen\", \"name\": { \"familyName\": \"mobarak\", \"givenName\": \"mobarak\", \"middleName\": null, \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"mobarak mobarak\" }, \"displayName\": \"mobarak\", \"nickName\": null, \"profileUrl\": null, \"title\": \"Vice President\", \"userType\": \"Contractor\", \"preferredLanguage\": \"en\", \"locale\": \"en-US\", \"timezone\": \"America/Los_Angeles\", \"active\": true, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7034663f-dc43-4f8c-8074-e8e75cae9c96\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-04-17T14:54:30.430Z\", \"lastModified\": \"2021-04-17T14:54:30.430Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/7034663f-dc43-4f8c-8074-e8e75cae9c96\" } } root@testjans:~#","title":"User Resources"},{"location":"user/using-jans-cli/cli-user/#user-resources","text":"Prerequisite: Know how to use the Janssen CLI in command-line mode The first thing is to do, Let's get some information for the following task: /opt/jans/jans-cli/scim-cli.py --info User In retrun we get, root@testjans:~# /opt/jans/jans-cli/scim-cli.py --info User Operation ID: get-users Description: Query User resources (see section 3.4.2 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] filter: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644 [string] startIndex: The 1-based index of the first query result [integer] count: Specifies the desired maximum number of query results per page [integer] sortBy: The attribute whose value will be used to order the returned responses [string] sortOrder: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\" [string] Operation ID: create-user Description: Allows creating a User resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/UserResource Schema: /components/schemas/UserResource Operation ID: get-user-by-id Description: Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Operation ID: update-user-by-id Description: Updates a User resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/UserResource Schema: /components/schemas/UserResource Operation ID: delete-user-by-id Description: Deletes a user resource url-suffix: id Parameters: id: Identifier of the resource to delete [string] Operation ID: patch-user-by-id Description: Updates one or more attributes of a User resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 url-suffix: id Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] id: No description is provided for this parameter [string] Schema: /components/schemas/PatchRequest Schema: /components/schemas/PatchRequest Operation ID: search-user Description: Query User resources (see section 3.4.2 of RFC 7644) Schema: /components/schemas/SearchRequest Schema: /components/schemas/SearchRequest To get sample schema type /opt/jans/jans-cli/scim-cli.py --schema <schma>, for example /opt/jans/jans-cli/scim-cli.py","title":"User Resources"},{"location":"user/using-jans-cli/cli-user/#find-users-list","text":"This operation is used to get list of the users and its properties. The command line is: /opt/jans/jans-cli/scim-cli.py --operation-id get-users By default, This will return all of the users and their properties. root@testjans:~# /opt/jans/jans-cli/scim-cli.py --operation-id get-users Getting access token for scope https://jans.io/scim/users.read { \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-06T18:39:54.087Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } It also supports parameters for the advanced search. Those parameters are: 1. attributes 2. excludeAttributes 3. filter 4. count [ define maximum number of query ] 5. sortBy [ attribute ] 6. sortOrder [ 'ascending', 'descending' ] This is an example with endpoint-args : /opt/jans/jans-cli/scim-cli.py --operation-id get-users --endpoint-args count:1 It returns as below: Getting access token for scope https://jans.io/scim/users.read Calling with params count=1 { \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-06T18:39:54.087Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 }","title":"Find Users List"},{"location":"user/using-jans-cli/cli-user/#creating-an-user-resources","text":"This operation can be performed to create user resources. Operation ID: create-user Description: Allows creating a User resource via POST (see section 3.3 of RFC 7644) Parameters: attributes: A comma-separated list of attribute names to return in the response [string] excludedAttributes: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list) [string] Schema: /components/schemas/UserResource As we see, to perform this operation we need to define the schema. So, let's get the schema of this operation. /opt/jans/jans-cli/scim-cli.py --schema /components/schemas/UserResource > /tmp/create-user.json root@testjans:~# cat /tmp/create-user.json { \"externalId\": null, \"userName\": null, \"name\": { \"familyName\": null, \"givenName\": null, \"middleName\": null, \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": null }, \"displayName\": null, \"nickName\": null, \"profileUrl\": null, \"title\": \"Vice President\", \"userType\": \"Contractor\", \"preferredLanguage\": \"en\", \"locale\": \"en-US\", \"timezone\": \"America/Los_Angeles\", \"active\": false, \"password\": null, \"emails\": { \"value\": \"gossow@nsfw.com\", \"display\": null, \"type\": \"work\", \"primary\": true }, \"phoneNumbers\": { \"value\": \"+1-555-555-8377\", \"display\": null, \"type\": \"fax\", \"primary\": true }, \"ims\": { \"value\": null, \"display\": null, \"type\": \"gtalk\", \"primary\": true }, \"photos\": { \"value\": \"https://pics.nsfw.com/gossow.png\", \"display\": null, \"type\": \"thumbnail\", \"primary\": true }, \"addresses\": { \"formatted\": null, \"streetAddress\": \"56 Acacia Avenue\", \"locality\": null, \"region\": null, \"postalCode\": null, \"country\": \"UK\", \"type\": \"home\", \"primary\": false }, \"groups\": { \"value\": \"180ee84f0671b1\", \"$ref\": \"https://nsfw.com/scim/restv1/v2/Groups/180ee84f0671b1\", \"display\": \"Cult managers\", \"type\": \"direct\" }, \"entitlements\": { \"value\": \"Stakeholder\", \"display\": null, \"type\": null, \"primary\": false }, \"roles\": { \"value\": \"Project manager\", \"display\": null, \"type\": null, \"primary\": false }, \"x509Certificates\": { \"value\": null, \"display\": null, \"type\": null, \"primary\": true }, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": {}, \"schemas\": [], \"id\": null, \"meta\": { \"resourceType\": null, \"created\": null, \"lastModified\": null, \"location\": null } } Now it's pretty simple. Fill each of this information, you may skip some of this properties as well. If you look at the schema, some of the properties are already filled with some random value. You can modify them as well or ignore them. let's modify this schema: nano /tmp/create-user.json Finally use below command line, to create an user resources. /opt/jans/jans-cli/scim-cli.py --operation-id create-user --data /tmp/create-user.json It will generate user inum value, metadata and will be added in user resources: Getting access token for scope https://jans.io/scim/users.write Server Response: { \"externalId\": null, \"userName\": \"mhosen\", \"name\": { \"familyName\": \"mobarak\", \"givenName\": \"mobarak\", \"middleName\": null, \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"mobarak mobarak\" }, \"displayName\": \"mobarak\", \"nickName\": null, \"profileUrl\": null, \"title\": \"Vice President\", \"userType\": \"Contractor\", \"preferredLanguage\": \"en\", \"locale\": \"en-US\", \"timezone\": \"America/Los_Angeles\", \"active\": true, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7034663f-dc43-4f8c-8074-e8e75cae9c96\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-04-17T14:54:30.430Z\", \"lastModified\": \"2021-04-17T14:54:30.430Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/7034663f-dc43-4f8c-8074-e8e75cae9c96\" } } root@testjans:~#","title":"Creating an User Resources"},{"location":"user/using-jans-cli/im/im-attribute/","text":"Attribute # Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI , You can perform some quick operations in Attribute . Such as: - view/find list of Attributes in detail. - add new attributes. - update an existing attribute - delete an attribute using its inum etc. For example, to get all attributes to choose 1 from the Main Menu, you will get the following options: To View/Find attributes choose 1, you will be asked to enter Search size , Search pattern and Status of the attribute . For simplicity, leave defaults in our case: Once press Enter, it will retrieve 50 attributes and prints to screen in green color: You can save the result as a file by choosing w in the result screen. To go back enter b , to quit enter q . If you enter a recognized command, it will display valid command. To Add a new attribute, choose 2 (on the Attribute screen). Then enter a value for each type of attribute item, after then it will ask to continue? enter y to continue. If everything is filled in the right way, it will create a new attribute on the list. You can go with to add a new attribute quickly: Obtained Data: { \"dn\": \"ou=attributes,o=jans\", \"inum\": null, \"selected\": false, \"name\": \"testAttrb\", \"displayName\": \"test Attribute\", \"description\": \"testing attribute addition\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"USER\" ], \"viewType\": [ \"ADMIN\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } To update an attribute, choose 3 (on the Attribute screen). It will ask inum of the attribute you are going to update. For example, I want to change the description for an attribute having inum=BCA8 . It will retrieve current data and ask for the modification of each property, just leave defaults if you don't want to change that property. When it comes to an end, it will display modified data and ask if you want to continue (this data just before it sends to a server) Obtained Data: { \"dn\": \"inum=BCA8,ou=attributes,o=jans\", \"inum\": \"BCA8\", \"selected\": false, \"name\": \"transientId\", \"displayName\": \"TransientId\", \"description\": \"TransientId\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:transientId\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.312\", \"urn\": \"mace:shibboleth:1.0:nameIdentifier\", \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } Enter y to perform an update and display updated data on the screen. To update property of an attribute, you can go with partial updates from Attribute Menu. To update partially, you must be asked to enter inum , op , path and value . - inum identity of an attribute where operation to be done. - op means operation to be done: [ replace , move , add , remove , copy , test ] - path chose path where operation will be performed: for example attributeValidation/minLength - value value that you want update. It can be integer, boolean or string. Finally, it will display the updated result. Getting access token for scope https://jans.io/oauth/config/attributes.write Please wait for patching... { \"dn\": \"inum=BCA8,ou=attributes,o=jans\", \"inum\": \"BCA8\", \"selected\": true, \"name\": \"transientId\", \"displayName\": \"TransientId\", \"description\": \"TransientId\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:transientId\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.312\", \"urn\": \"mace:shibboleth:1.0:nameIdentifier\", \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } To delete an attribute, choose option 5 from Attribute Menu. Enter the inum value that you want to delete. Here I chose that I already created in the above: \"inum=0adfeb80-cb57-4f7b-a3a0-944082e4c199\" It will ask for confirmation, enter y to confirm.","title":"Attribute"},{"location":"user/using-jans-cli/im/im-attribute/#attribute","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI , You can perform some quick operations in Attribute . Such as: - view/find list of Attributes in detail. - add new attributes. - update an existing attribute - delete an attribute using its inum etc. For example, to get all attributes to choose 1 from the Main Menu, you will get the following options: To View/Find attributes choose 1, you will be asked to enter Search size , Search pattern and Status of the attribute . For simplicity, leave defaults in our case: Once press Enter, it will retrieve 50 attributes and prints to screen in green color: You can save the result as a file by choosing w in the result screen. To go back enter b , to quit enter q . If you enter a recognized command, it will display valid command. To Add a new attribute, choose 2 (on the Attribute screen). Then enter a value for each type of attribute item, after then it will ask to continue? enter y to continue. If everything is filled in the right way, it will create a new attribute on the list. You can go with to add a new attribute quickly: Obtained Data: { \"dn\": \"ou=attributes,o=jans\", \"inum\": null, \"selected\": false, \"name\": \"testAttrb\", \"displayName\": \"test Attribute\", \"description\": \"testing attribute addition\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": null, \"editType\": [ \"ADMIN\", \"USER\" ], \"viewType\": [ \"ADMIN\", \"USER\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": null, \"saml2Uri\": null, \"urn\": null, \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } To update an attribute, choose 3 (on the Attribute screen). It will ask inum of the attribute you are going to update. For example, I want to change the description for an attribute having inum=BCA8 . It will retrieve current data and ask for the modification of each property, just leave defaults if you don't want to change that property. When it comes to an end, it will display modified data and ask if you want to continue (this data just before it sends to a server) Obtained Data: { \"dn\": \"inum=BCA8,ou=attributes,o=jans\", \"inum\": \"BCA8\", \"selected\": false, \"name\": \"transientId\", \"displayName\": \"TransientId\", \"description\": \"TransientId\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:transientId\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.312\", \"urn\": \"mace:shibboleth:1.0:nameIdentifier\", \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } Enter y to perform an update and display updated data on the screen. To update property of an attribute, you can go with partial updates from Attribute Menu. To update partially, you must be asked to enter inum , op , path and value . - inum identity of an attribute where operation to be done. - op means operation to be done: [ replace , move , add , remove , copy , test ] - path chose path where operation will be performed: for example attributeValidation/minLength - value value that you want update. It can be integer, boolean or string. Finally, it will display the updated result. Getting access token for scope https://jans.io/oauth/config/attributes.write Please wait for patching... { \"dn\": \"inum=BCA8,ou=attributes,o=jans\", \"inum\": \"BCA8\", \"selected\": true, \"name\": \"transientId\", \"displayName\": \"TransientId\", \"description\": \"TransientId\", \"dataType\": \"STRING\", \"status\": \"ACTIVE\", \"lifetime\": null, \"sourceAttribute\": null, \"salt\": null, \"nameIdType\": null, \"origin\": \"jansPerson\", \"editType\": [ \"USER\", \"ADMIN\" ], \"viewType\": [ \"USER\", \"ADMIN\" ], \"usageType\": null, \"claimName\": null, \"seeAlso\": null, \"saml1Uri\": \"urn:mace:dir:attribute-def:transientId\", \"saml2Uri\": \"urn:oid:1.3.6.1.4.1.48710.1.3.312\", \"urn\": \"mace:shibboleth:1.0:nameIdentifier\", \"scimCustomAttr\": false, \"oxMultiValuedAttribute\": false, \"custom\": false, \"requred\": false, \"attributeValidation\": { \"regexp\": null, \"minLength\": null, \"maxLength\": null }, \"tooltip\": null } To delete an attribute, choose option 5 from Attribute Menu. Enter the inum value that you want to delete. Here I chose that I already created in the above: \"inum=0adfeb80-cb57-4f7b-a3a0-944082e4c199\" It will ask for confirmation, enter y to confirm.","title":"Attribute"},{"location":"user/using-jans-cli/im/im-authentication-method/","text":"Default Authentication Method # Prerequisite: Know how to use the Janssen CLI in interactive mode Sometimes It's getting hard to change Default Authentication Method from a web browser if you can't log in using the web interface. Here Janssen CLI is going to help you a lot. View Default Authentication Method. Update Default Authentication Method. Select option 2 from Main Menu to chose Authentication Method. You can see such options as listed above. To View default authentication method select '1' from Authentication Menu, It will show you the current default authentication method of the Janssen server. To update the default authentication method select '2', then enter the default authentication method that you want to update with it. It will ask for the confirmation, y to confirm.","title":"Default Authentication Method"},{"location":"user/using-jans-cli/im/im-authentication-method/#default-authentication-method","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Sometimes It's getting hard to change Default Authentication Method from a web browser if you can't log in using the web interface. Here Janssen CLI is going to help you a lot. View Default Authentication Method. Update Default Authentication Method. Select option 2 from Main Menu to chose Authentication Method. You can see such options as listed above. To View default authentication method select '1' from Authentication Menu, It will show you the current default authentication method of the Janssen server. To update the default authentication method select '2', then enter the default authentication method that you want to update with it. It will ask for the confirmation, y to confirm.","title":"Default Authentication Method"},{"location":"user/using-jans-cli/im/im-cache-configuration/","text":"Cache Configuration # Prerequisite: Know how to use the Janssen CLI in interactive mode In the following Main Menu, Options 3, 4, 5, 6 & 7 are for Cache Configuration . - Cache Configuration - Cache Configuration \u2013 Memcached - Cache Configuration \u2013 Redis - Cache Configuration \u2013 in-Memory - Cache Configuration \u2013 Native-Persistence Select option 3 to enter in Cache Configuration menu. You will get two options as below: Cache Configuration ------------------- 1 Returns cache configuration 2 Partially modifies cache configuration If you want to view cache configuration then choose option 1 from Cache Configuration Menu. It will return cache configuration in details as below: { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32768, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } } To update partially, select option 2. then you will be asked to enter op , path and value . op means operation to be done: [ replace , move , add , remove , copy , test ] path chose path where operation will be performed: for example memcachedConfiguration/bufferSize value value that you want update. It can be integer, boolean or string. At next it will ask Patch another param? you can press y if you want to update multiple parameters at a time otherwise n . After then it will show all the patches that are going to be performed. Continue? If any mistake happens simply press n to abort this operation otherwise press y to go with it. It will show you the updated result. please, see below example, you will get a clear concept on this. Selection: 2 \u00abThe operation to be performed. Type: string\u00bb op: replace \u00abA JSON-Pointer. Type: string\u00bb path: memcachedConfiguration/bufferSize \u00abThe value to be used within the operations. Type: object\u00bb value [{}]: 32777 Patch another param? n [ { \"op\": \"replace\", \"path\": \"/memcachedConfiguration/bufferSize\", \"value\": \"32777\" } ] Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait patching... { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } } Cache Configuration - Memcached # Do You want to update Memcached only? you can go with this option. Memcached have two options: Cache Configuration \u2013 Memcached ------------------------------- 1 Returns Memcached cache configuration 2 Updates Memcached cache configuration Option 1 to get memcached configuration. select 1, and you will get the details: Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" } Option 2 to update memcached configuration. It will ask for each parameter, enter a value or skip to set default. Selection: 2 Returns Memcached cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abServer details separated by spaces. Type: string\u00bb servers [localhost:11211]: \u00abMaximum operation Queue Length. Type: integer\u00bb maxOperationQueueLength [100000]: \u00abBuffer Size. Type: integer\u00bb bufferSize [32777]: \u00abExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abThe MemcachedConnectionFactoryType Type. Type: string\u00bb connectionFactoryType [DEFAULT]: Obtained Data: { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" } Cache Configuration - Redis # To get/update redis configuration, select option 5 to enter the menu. Cache Configuration \u2013 Redis --------------------------- 1 Returns Redis cache configuration 2 Updates Redis cache configuration Option 1 to get redis cache configuration. Selection: 1 Returns Redis cache configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 } Option 2 to update the Redis cache configuration. You can fill each property or keep as empty to set default. Continue? press y to update the Redis configuration. Selection: 2 Returns Redis cache configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abType of connection. Type: string\u00bb redisProviderType [STANDALONE]: \u00abserver details separated by comma e.g. 'server1:8080server2:8081'. Type: string\u00bb servers [localhost:6379]: \u00abRedis password. Type: string\u00bb password: \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abSentinel Master Group Name (required if SENTINEL type of connection is selected). Type: string\u00bb sentinelMasterGroupName: \u00abEnable SSL communication between Gluu Server and Redis cache. Type: boolean\u00bb useSSL [false]: \u00abDirectory Path to Trust Store. Type: string\u00bb sslTrustStoreFilePath: \u00abThe cap on the number of \\idle\\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point. Type: integer\u00bb maxIdleConnections [10]: \u00abThe number of maximum connection instances in the pool. Type: integer\u00bb maxTotalConnections [500]: \u00abConnection time out. Type: integer\u00bb connectionTimeout [3000]: \u00abWith this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout. Type: integer\u00bb soTimeout [3000]: \u00abMaximum retry attempts in case of failure. Type: integer\u00bb maxRetryAttempts [5]: Obtained Data: { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 } Cache Configuration - In-Memory # To enter In-Memory menu select option 6, you will get two options as below: Cache Configuration \u2013 in-Memory ------------------------------- 1 Returns in-Memory cache configuration 2 Updates in-Memory cache configuration Option 1 to get the information of In-Memory cache configuration: Selection: 1 Returns in-Memory cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"defaultPutExpiration\": 60 } Option 2 to update the information of In-Memory cache configuration: Selection: 2 Returns in-Memory cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: Obtained Data: { \"defaultPutExpiration\": 60 } Cache Configuration - Native-Persistence # Cache Configuration \u2013 Native-Persistence ---------------------------------------- 1 Returns native persistence cache configuration 2 Updates native persistence cache configuration Option 1 to get the information of native persistence cache configuration. Selection: 1 Returns native persistence cache configuration ---------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } Option 2 to update the information of native persistence cache configuration. Selection: 2 Returns native persistence cache configuration ---------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abdefaultCleanupBatchSize page size. Type: integer\u00bb defaultCleanupBatchSize [10000]: \u00abType: boolean\u00bb deleteExpiredOnGetRequest [false]: Obtained Data: { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false }","title":"Cache Configuration"},{"location":"user/using-jans-cli/im/im-cache-configuration/#cache-configuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode In the following Main Menu, Options 3, 4, 5, 6 & 7 are for Cache Configuration . - Cache Configuration - Cache Configuration \u2013 Memcached - Cache Configuration \u2013 Redis - Cache Configuration \u2013 in-Memory - Cache Configuration \u2013 Native-Persistence Select option 3 to enter in Cache Configuration menu. You will get two options as below: Cache Configuration ------------------- 1 Returns cache configuration 2 Partially modifies cache configuration If you want to view cache configuration then choose option 1 from Cache Configuration Menu. It will return cache configuration in details as below: { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32768, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } } To update partially, select option 2. then you will be asked to enter op , path and value . op means operation to be done: [ replace , move , add , remove , copy , test ] path chose path where operation will be performed: for example memcachedConfiguration/bufferSize value value that you want update. It can be integer, boolean or string. At next it will ask Patch another param? you can press y if you want to update multiple parameters at a time otherwise n . After then it will show all the patches that are going to be performed. Continue? If any mistake happens simply press n to abort this operation otherwise press y to go with it. It will show you the updated result. please, see below example, you will get a clear concept on this. Selection: 2 \u00abThe operation to be performed. Type: string\u00bb op: replace \u00abA JSON-Pointer. Type: string\u00bb path: memcachedConfiguration/bufferSize \u00abThe value to be used within the operations. Type: object\u00bb value [{}]: 32777 Patch another param? n [ { \"op\": \"replace\", \"path\": \"/memcachedConfiguration/bufferSize\", \"value\": \"32777\" } ] Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait patching... { \"cacheProviderType\": \"NATIVE_PERSISTENCE\", \"memcachedConfiguration\": { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }, \"redisConfiguration\": { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }, \"inMemoryConfiguration\": { \"defaultPutExpiration\": 60 }, \"nativePersistenceConfiguration\": { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } }","title":"Cache Configuration"},{"location":"user/using-jans-cli/im/im-cache-configuration/#cache-configuration-memcached","text":"Do You want to update Memcached only? you can go with this option. Memcached have two options: Cache Configuration \u2013 Memcached ------------------------------- 1 Returns Memcached cache configuration 2 Updates Memcached cache configuration Option 1 to get memcached configuration. select 1, and you will get the details: Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" } Option 2 to update memcached configuration. It will ask for each parameter, enter a value or skip to set default. Selection: 2 Returns Memcached cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abServer details separated by spaces. Type: string\u00bb servers [localhost:11211]: \u00abMaximum operation Queue Length. Type: integer\u00bb maxOperationQueueLength [100000]: \u00abBuffer Size. Type: integer\u00bb bufferSize [32777]: \u00abExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abThe MemcachedConnectionFactoryType Type. Type: string\u00bb connectionFactoryType [DEFAULT]: Obtained Data: { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"servers\": \"localhost:11211\", \"maxOperationQueueLength\": 100000, \"bufferSize\": 32777, \"defaultPutExpiration\": 60, \"connectionFactoryType\": \"DEFAULT\" }","title":"Cache Configuration - Memcached"},{"location":"user/using-jans-cli/im/im-cache-configuration/#cache-configuration-redis","text":"To get/update redis configuration, select option 5 to enter the menu. Cache Configuration \u2013 Redis --------------------------- 1 Returns Redis cache configuration 2 Updates Redis cache configuration Option 1 to get redis cache configuration. Selection: 1 Returns Redis cache configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 } Option 2 to update the Redis cache configuration. You can fill each property or keep as empty to set default. Continue? press y to update the Redis configuration. Selection: 2 Returns Redis cache configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abType of connection. Type: string\u00bb redisProviderType [STANDALONE]: \u00abserver details separated by comma e.g. 'server1:8080server2:8081'. Type: string\u00bb servers [localhost:6379]: \u00abRedis password. Type: string\u00bb password: \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abSentinel Master Group Name (required if SENTINEL type of connection is selected). Type: string\u00bb sentinelMasterGroupName: \u00abEnable SSL communication between Gluu Server and Redis cache. Type: boolean\u00bb useSSL [false]: \u00abDirectory Path to Trust Store. Type: string\u00bb sslTrustStoreFilePath: \u00abThe cap on the number of \\idle\\ instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created. This is a result of the active threads momentarily returning objects faster than they are requesting them causing the number of idle objects to rise above max idle. The best value for max idle for heavily loaded system will vary but the default is a good starting point. Type: integer\u00bb maxIdleConnections [10]: \u00abThe number of maximum connection instances in the pool. Type: integer\u00bb maxTotalConnections [500]: \u00abConnection time out. Type: integer\u00bb connectionTimeout [3000]: \u00abWith this option set to a non-zero timeout a read() call on the InputStream associated with this Socket will block for only this amount of time. If the timeout expires a java.net.SocketTimeoutException is raised though the Socket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be > 0. A timeout of zero is interpreted as an infinite timeout. Type: integer\u00bb soTimeout [3000]: \u00abMaximum retry attempts in case of failure. Type: integer\u00bb maxRetryAttempts [5]: Obtained Data: { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"redisProviderType\": \"STANDALONE\", \"servers\": \"localhost:6379\", \"password\": null, \"defaultPutExpiration\": 60, \"sentinelMasterGroupName\": null, \"useSSL\": false, \"sslTrustStoreFilePath\": null, \"maxIdleConnections\": 10, \"maxTotalConnections\": 500, \"connectionTimeout\": 3000, \"soTimeout\": 3000, \"maxRetryAttempts\": 5 }","title":"Cache Configuration - Redis"},{"location":"user/using-jans-cli/im/im-cache-configuration/#cache-configuration-in-memory","text":"To enter In-Memory menu select option 6, you will get two options as below: Cache Configuration \u2013 in-Memory ------------------------------- 1 Returns in-Memory cache configuration 2 Updates in-Memory cache configuration Option 1 to get the information of In-Memory cache configuration: Selection: 1 Returns in-Memory cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"defaultPutExpiration\": 60 } Option 2 to update the information of In-Memory cache configuration: Selection: 2 Returns in-Memory cache configuration ------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: Obtained Data: { \"defaultPutExpiration\": 60 }","title":"Cache Configuration - In-Memory"},{"location":"user/using-jans-cli/im/im-cache-configuration/#cache-configuration-native-persistence","text":"Cache Configuration \u2013 Native-Persistence ---------------------------------------- 1 Returns native persistence cache configuration 2 Updates native persistence cache configuration Option 1 to get the information of native persistence cache configuration. Selection: 1 Returns native persistence cache configuration ---------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } Option 2 to update the information of native persistence cache configuration. Selection: 2 Returns native persistence cache configuration ---------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/cache.readonly \u00abdefaultPutExpiration timeout value. Type: integer\u00bb defaultPutExpiration [60]: \u00abdefaultCleanupBatchSize page size. Type: integer\u00bb defaultCleanupBatchSize [10000]: \u00abType: boolean\u00bb deleteExpiredOnGetRequest [false]: Obtained Data: { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false } Continue? y Getting access token for scope https://jans.io/oauth/config/cache.write Please wait while posting data ... { \"defaultPutExpiration\": 60, \"defaultCleanupBatchSize\": 10000, \"deleteExpiredOnGetRequest\": false }","title":"Cache Configuration - Native-Persistence"},{"location":"user/using-jans-cli/im/im-couchbase-configuration/","text":"Couchbase Configuration # Prerequisite: Know how to use the Janssen CLI in interactive mode From the main menu, select option 15 to enter into Couchbase configuration menu. You will get the following menu like LDAP configuration. Database - Couchbase configuration ---------------------------------- 1 Gets list of existing Couchbase configurations 2 Adds a new Couchbase configuration 3 Updates Couchbase configuration 4 Gets a Couchbase configurations by name 5 Partially modify an Couchbase configuration 6 Deletes a Couchbase configurations by name 7 Tests a Couchbase configuration","title":"Couchbase Configuration"},{"location":"user/using-jans-cli/im/im-couchbase-configuration/#couchbase-configuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode From the main menu, select option 15 to enter into Couchbase configuration menu. You will get the following menu like LDAP configuration. Database - Couchbase configuration ---------------------------------- 1 Gets list of existing Couchbase configurations 2 Adds a new Couchbase configuration 3 Updates Couchbase configuration 4 Gets a Couchbase configurations by name 5 Partially modify an Couchbase configuration 6 Deletes a Couchbase configurations by name 7 Tests a Couchbase configuration","title":"Couchbase Configuration"},{"location":"user/using-jans-cli/im/im-custom-scripts/","text":"Custom Scripts # Prerequisite: Know how to use the Janssen CLI in interactive mode Interception scripts can be used to implement custom business logic for authentication, authorization, and more in a way that is upgrade-proof and doesn't require forking the Gluu Server code. Using Janssen CLI, you can perform such an operation as listed below: Custom Scripts -------------- 1 Gets a list of custom scripts 2 Adds a new custom script 3 Updates a custom script 4 Deletes a custom script Get list of Custom Scripts # To get the status of each type of script select option 1, you will get the below result in return: Gets a list of custom scripts ----------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/scripts.readonly +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | | scriptType | name | enabled | inum | +====+=====================================+===========================================================+===========+===========+ | 1 | RESOURCE_OWNER_PASSWORD_CREDENTIALS | resource_owner_password_credentials_example | False | 2DAF-AA91 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 2 | INTROSPECTION | introspection_custom_params | False | 2DAF-BA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 3 | UMA_CLAIMS_GATHERING | sampleClaimsGathering | False | 2DAF-F996 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 4 | END_SESSION | frontchannel_logout_sample | False | 2DAF-CA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 5 | UPDATE_TOKEN | update_token_sample | False | 2D3E.5A03 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 6 | INTROSPECTION | introspection_sample | False | 2DAF-AA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 7 | RESOURCE_OWNER_PASSWORD_CREDENTIALS | resource_owner_password_credentials_custom_params_example | False | 2DAF-BA91 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 8 | CIBA_END_USER_NOTIFICATION | firebase_ciba_end_user_notification | False | C1BA-C1BA | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 9 | PERSON_AUTHENTICATION | basic | False | A51E-76DA | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 10 | CONSENT_GATHERING | consent_gathering | False | DAA9-BA60 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 11 | PERSON_AUTHENTICATION | basic_lock | False | 4BBE-C6A8 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 12 | PERSON_AUTHENTICATION | cert | False | 2124-0CF1 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 13 | PERSON_AUTHENTICATION | yubicloud | False | 24FD-B96E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 14 | PERSON_AUTHENTICATION | otp | False | 5018-D4BF | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 15 | PERSON_AUTHENTICATION | smpp | False | 09A0-93D7 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 16 | PERSON_AUTHENTICATION | twilio_sms | False | 09A0-93D6 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 17 | PERSON_AUTHENTICATION | thumb_sign_in | False | 92F0-759E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 18 | PERSON_AUTHENTICATION | u2f | False | 8BAF-80D6 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 19 | PERSON_AUTHENTICATION | duo | False | 5018-F9CF | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 20 | PERSON_AUTHENTICATION | super_gluu | False | 92F0-BF9E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 21 | PERSON_AUTHENTICATION | fido2 | False | 8BAF-80D7 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 22 | PERSON_AUTHENTICATION | uaf | False | 5018-AF9C | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 23 | UMA_RPT_POLICY | scim_access_policy | False | 2DAF-F9A5 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 24 | UMA_RPT_POLICY | uma_rpt_policy | False | 2DAF-F995 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 25 | DYNAMIC_SCOPE | org_name | False | 031C-5621 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 26 | PERSISTENCE_EXTENSION | persistence_extension | False | 8AF7.D82A | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 27 | ID_GENERATOR | id_generator | False | 031C-4A65 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 28 | IDP | idp | False | 8AF7.D82B | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 29 | CACHE_REFRESH | cache_refresh | False | 13D3-E7AD | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 30 | APPLICATION_SESSION | application_session | False | DAA9-B789 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 31 | DYNAMIC_SCOPE | dynamic_permission | True | CB5B-3211 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 32 | SCIM | scim_event_handler | False | A910-56AB | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 33 | CLIENT_REGISTRATION | client_registration | False | DAA9-B788 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 34 | DYNAMIC_SCOPE | work_phone | False | 031C-5622 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ Add a new Custom Script # To add a new script, choose option 2 and fill each property: dn, inum, display name, valid script ScriptType: [PERSON_AUTHENTICATION, INTROSPECTION, RESOURCE_OWNER_PASSWORD_CREDENTIALS, APPLICATION_SESSION, CACHE_REFRESH, CLIENT_REGISTRATION, ID_GENERATOR, UMA_RPT_POLICY, UMA_RPT_CLAIMS, UMA_CLAIMS_GATHERING, CONSENT_GATHERING, DYNAMIC_SCOPE, SPONTANEOUS_SCOPE, END_SESSION, POST_AUTHN, SCIM, CIBA_END_USER_NOTIFICATION, PERSISTENCE_EXTENSION, IDP] Programming Language: [PYTHON, JAVA] Update Custom Scripts # Let update Person Authentication basic by its inum. Select option 3 from custom scripts menu and enter its inum, in my case it's A51E-76DA selecting the field we are gonna update: 4 \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 4 \u00abboolean value indicating if script enabled. Type: boolean\u00bb enabled [false]: true Please enter a(n) boolean value: _true, _false enabled [false]: _true \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 4 \u00abboolean value indicating if script enabled. Type: boolean\u00bb enabled [true]: In this way you can update any field you want. How to delete Custom Scripts? # To delete a custom script, you need an inum of a custom script that you want to delete. It will ask for confirmation when you enter inum , simply enter yes/y to delete it otherwise enter no/n to cancel the operation.","title":"Custom Scripts"},{"location":"user/using-jans-cli/im/im-custom-scripts/#custom-scripts","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Interception scripts can be used to implement custom business logic for authentication, authorization, and more in a way that is upgrade-proof and doesn't require forking the Gluu Server code. Using Janssen CLI, you can perform such an operation as listed below: Custom Scripts -------------- 1 Gets a list of custom scripts 2 Adds a new custom script 3 Updates a custom script 4 Deletes a custom script","title":"Custom Scripts"},{"location":"user/using-jans-cli/im/im-custom-scripts/#get-list-of-custom-scripts","text":"To get the status of each type of script select option 1, you will get the below result in return: Gets a list of custom scripts ----------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/scripts.readonly +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | | scriptType | name | enabled | inum | +====+=====================================+===========================================================+===========+===========+ | 1 | RESOURCE_OWNER_PASSWORD_CREDENTIALS | resource_owner_password_credentials_example | False | 2DAF-AA91 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 2 | INTROSPECTION | introspection_custom_params | False | 2DAF-BA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 3 | UMA_CLAIMS_GATHERING | sampleClaimsGathering | False | 2DAF-F996 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 4 | END_SESSION | frontchannel_logout_sample | False | 2DAF-CA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 5 | UPDATE_TOKEN | update_token_sample | False | 2D3E.5A03 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 6 | INTROSPECTION | introspection_sample | False | 2DAF-AA90 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 7 | RESOURCE_OWNER_PASSWORD_CREDENTIALS | resource_owner_password_credentials_custom_params_example | False | 2DAF-BA91 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 8 | CIBA_END_USER_NOTIFICATION | firebase_ciba_end_user_notification | False | C1BA-C1BA | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 9 | PERSON_AUTHENTICATION | basic | False | A51E-76DA | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 10 | CONSENT_GATHERING | consent_gathering | False | DAA9-BA60 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 11 | PERSON_AUTHENTICATION | basic_lock | False | 4BBE-C6A8 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 12 | PERSON_AUTHENTICATION | cert | False | 2124-0CF1 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 13 | PERSON_AUTHENTICATION | yubicloud | False | 24FD-B96E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 14 | PERSON_AUTHENTICATION | otp | False | 5018-D4BF | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 15 | PERSON_AUTHENTICATION | smpp | False | 09A0-93D7 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 16 | PERSON_AUTHENTICATION | twilio_sms | False | 09A0-93D6 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 17 | PERSON_AUTHENTICATION | thumb_sign_in | False | 92F0-759E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 18 | PERSON_AUTHENTICATION | u2f | False | 8BAF-80D6 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 19 | PERSON_AUTHENTICATION | duo | False | 5018-F9CF | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 20 | PERSON_AUTHENTICATION | super_gluu | False | 92F0-BF9E | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 21 | PERSON_AUTHENTICATION | fido2 | False | 8BAF-80D7 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 22 | PERSON_AUTHENTICATION | uaf | False | 5018-AF9C | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 23 | UMA_RPT_POLICY | scim_access_policy | False | 2DAF-F9A5 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 24 | UMA_RPT_POLICY | uma_rpt_policy | False | 2DAF-F995 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 25 | DYNAMIC_SCOPE | org_name | False | 031C-5621 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 26 | PERSISTENCE_EXTENSION | persistence_extension | False | 8AF7.D82A | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 27 | ID_GENERATOR | id_generator | False | 031C-4A65 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 28 | IDP | idp | False | 8AF7.D82B | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 29 | CACHE_REFRESH | cache_refresh | False | 13D3-E7AD | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 30 | APPLICATION_SESSION | application_session | False | DAA9-B789 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 31 | DYNAMIC_SCOPE | dynamic_permission | True | CB5B-3211 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 32 | SCIM | scim_event_handler | False | A910-56AB | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 33 | CLIENT_REGISTRATION | client_registration | False | DAA9-B788 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+ | 34 | DYNAMIC_SCOPE | work_phone | False | 031C-5622 | +----+-------------------------------------+-----------------------------------------------------------+-----------+-----------+","title":"Get list of Custom Scripts"},{"location":"user/using-jans-cli/im/im-custom-scripts/#add-a-new-custom-script","text":"To add a new script, choose option 2 and fill each property: dn, inum, display name, valid script ScriptType: [PERSON_AUTHENTICATION, INTROSPECTION, RESOURCE_OWNER_PASSWORD_CREDENTIALS, APPLICATION_SESSION, CACHE_REFRESH, CLIENT_REGISTRATION, ID_GENERATOR, UMA_RPT_POLICY, UMA_RPT_CLAIMS, UMA_CLAIMS_GATHERING, CONSENT_GATHERING, DYNAMIC_SCOPE, SPONTANEOUS_SCOPE, END_SESSION, POST_AUTHN, SCIM, CIBA_END_USER_NOTIFICATION, PERSISTENCE_EXTENSION, IDP] Programming Language: [PYTHON, JAVA]","title":"Add a new Custom Script"},{"location":"user/using-jans-cli/im/im-custom-scripts/#update-custom-scripts","text":"Let update Person Authentication basic by its inum. Select option 3 from custom scripts menu and enter its inum, in my case it's A51E-76DA selecting the field we are gonna update: 4 \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 4 \u00abboolean value indicating if script enabled. Type: boolean\u00bb enabled [false]: true Please enter a(n) boolean value: _true, _false enabled [false]: _true \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 4 \u00abboolean value indicating if script enabled. Type: boolean\u00bb enabled [true]: In this way you can update any field you want.","title":"Update Custom Scripts"},{"location":"user/using-jans-cli/im/im-custom-scripts/#how-to-delete-custom-scripts","text":"To delete a custom script, you need an inum of a custom script that you want to delete. It will ask for confirmation when you enter inum , simply enter yes/y to delete it otherwise enter no/n to cancel the operation.","title":"How to delete Custom Scripts?"},{"location":"user/using-jans-cli/im/im-group/","text":"Group Resources # Prerequisite: Know how to use the Janssen CLI in interactive mode Group resources are used to organize user resources. These are the following options: group ----- 1 Query Group resources (see section 3.4.2 of RFC 7644) 2 Allows creating a Group resource via POST (see section 3.3 of RFC 7644) 3 Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) 4 Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. 5 Deletes a group resource (see section 3.6 of RFC 7644) 6 Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 7 Query Group resources (see section 3.4.2 of RFC 7644) Query Group Resources # It shows all the group resources and its perspective user resources. To find list of resources with custom filter, it supports advanced search with few properties: 1. attributes 2. excludeattributes 3. filter 4. startindex 5. count This is an demo example where each of this properties skipped for default value: Query Group resources (see section 3.4.2 of RFC 7644) ----------------------------------------------------- \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: \u00abAn expression specifying the search criteria. See section 3.4.2.2 of RFC 7644. Type: string\u00bb filter: \u00abThe 1-based index of the first query result. Type: integer\u00bb startIndex: \u00abSpecifies the desired maximum number of query results per page. Type: integer\u00bb count: \u00abThe attribute whose value will be used to order the returned responses. Type: string\u00bb sortBy: \u00abOrder in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\". Type: string\u00bb sortOrder: Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } Selection: Update a group Resource: # Updating a group resource works in a replacement fashion and every attribute value found in the payload will replace the one in the existing resource. Attributes those are not passed in the payload will be left as same as before. If you select option 4 it will be asked to enter the id of a group that you may want to update. After then You will get a list of Fields: Fields: 1 displayName 2 id 3 members 4 meta 5 schemas You can select each of these fields to update one by one. Let's select 3rd field to add memebers in the group. It will ask to enter some follow-up questions, like Add Member? [y, n] . Then enter each value of the user attributes: ref: User referral url type: type as a User display: User display Name value: inum of the user As you see below, If you choose y for Add another Member? then similarly you can add resource for another user. But if you choose n then you can select few options: - q: to quit from operations - v: to view changes - l: to display the current list of fields - s: to save changes Please see below result to better understand about how this option really works. ``` \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 3 \u00abRepresents a member of a Group resource. \u00bb Add Member? y \u00abURI of the SCIM resource. Type: string\u00bb ref: https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df \u00abThe type of member. Only \"User\" is allowed. Type: string\u00bb type: User \u00abA human readable name, primarily used for display purposes. Type: string\u00bb display: Default Admin User \u00abIdentifier (ID) of the resource. Type: string\u00bb value: e0b8a6a5-1955-49d7-acba-55a75b2373df Add another Member? n \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: s Changes: members: [{'display': 'Default Admin User', 'ref': 'https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df', 'type': 'User', 'value': 'e0b8a6a5-1955-49d7-acba-55a75b2373df'}] ``` continue? as y to perform the operation: Continue? y Please wait while posting data ... Getting access token for scope https://jans.io/scim/groups.write { \"displayName\": \"Jannsen Test Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-15T14:21:10.715Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } Finally it will make changes in the group resource.","title":"Group Resources"},{"location":"user/using-jans-cli/im/im-group/#group-resources","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Group resources are used to organize user resources. These are the following options: group ----- 1 Query Group resources (see section 3.4.2 of RFC 7644) 2 Allows creating a Group resource via POST (see section 3.3 of RFC 7644) 3 Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644) 4 Updates a Group resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. 5 Deletes a group resource (see section 3.6 of RFC 7644) 6 Updates one or more attributes of a Group resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 7 Query Group resources (see section 3.4.2 of RFC 7644)","title":"Group Resources"},{"location":"user/using-jans-cli/im/im-group/#query-group-resources","text":"It shows all the group resources and its perspective user resources. To find list of resources with custom filter, it supports advanced search with few properties: 1. attributes 2. excludeattributes 3. filter 4. startindex 5. count This is an demo example where each of this properties skipped for default value: Query Group resources (see section 3.4.2 of RFC 7644) ----------------------------------------------------- \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: \u00abAn expression specifying the search criteria. See section 3.4.2.2 of RFC 7644. Type: string\u00bb filter: \u00abThe 1-based index of the first query result. Type: integer\u00bb startIndex: \u00abSpecifies the desired maximum number of query results per page. Type: integer\u00bb count: \u00abThe attribute whose value will be used to order the returned responses. Type: string\u00bb sortBy: \u00abOrder in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\". Type: string\u00bb sortOrder: Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/groups.read { \"Resources\": [ { \"displayName\": \"Jannsen Manager Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"60B7\", \"meta\": { \"resourceType\": \"Group\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } Selection:","title":"Query Group Resources"},{"location":"user/using-jans-cli/im/im-group/#update-a-group-resource","text":"Updating a group resource works in a replacement fashion and every attribute value found in the payload will replace the one in the existing resource. Attributes those are not passed in the payload will be left as same as before. If you select option 4 it will be asked to enter the id of a group that you may want to update. After then You will get a list of Fields: Fields: 1 displayName 2 id 3 members 4 meta 5 schemas You can select each of these fields to update one by one. Let's select 3rd field to add memebers in the group. It will ask to enter some follow-up questions, like Add Member? [y, n] . Then enter each value of the user attributes: ref: User referral url type: type as a User display: User display Name value: inum of the user As you see below, If you choose y for Add another Member? then similarly you can add resource for another user. But if you choose n then you can select few options: - q: to quit from operations - v: to view changes - l: to display the current list of fields - s: to save changes Please see below result to better understand about how this option really works. ``` \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: 3 \u00abRepresents a member of a Group resource. \u00bb Add Member? y \u00abURI of the SCIM resource. Type: string\u00bb ref: https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df \u00abThe type of member. Only \"User\" is allowed. Type: string\u00bb type: User \u00abA human readable name, primarily used for display purposes. Type: string\u00bb display: Default Admin User \u00abIdentifier (ID) of the resource. Type: string\u00bb value: e0b8a6a5-1955-49d7-acba-55a75b2373df Add another Member? n \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: s Changes: members: [{'display': 'Default Admin User', 'ref': 'https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df', 'type': 'User', 'value': 'e0b8a6a5-1955-49d7-acba-55a75b2373df'}] ``` continue? as y to perform the operation: Continue? y Please wait while posting data ... Getting access token for scope https://jans.io/scim/groups.write { \"displayName\": \"Jannsen Test Group\", \"members\": [ { \"$ref\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Users/e0b8a6a5-1955-49d7-acba-55a75b2373df\", \"type\": \"User\", \"display\": \"Default Admin User\", \"value\": \"e0b8a6a5-1955-49d7-acba-55a75b2373df\" } ], \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:Group\" ], \"id\": \"766ffd8c-88a8-4aa8-a430-a5b3ae809c21\", \"meta\": { \"resourceType\": \"Group\", \"created\": \"2021-04-14T19:54:03.091Z\", \"lastModified\": \"2021-04-15T14:21:10.715Z\", \"location\": \"https://testjans.gluu.org/jans-scim/restv1/v2/Groups/766ffd8c-88a8-4aa8-a430-a5b3ae809c21\" } } Finally it will make changes in the group resource.","title":"Update a group Resource:"},{"location":"user/using-jans-cli/im/im-index/","text":"Menu Driven Interactive Mode # We will refer Menu-driven Interactive Mode as IM . To run IM just simply execute jans-cli as follows: /opt/jans/jans-cli/config-cli.py Note: You can supply certificate and key with options --key-file and --cert-file , to disable ssl verification use -noverify . For more information /opt/jans/jans-cli/config-cli.py -h You will see the main menu as below: Using IM is very simple and intuitive. Just make a selection and answer questions. There is a special option to read value for a question from a file using _file tag. This option is the most suitable choice to input the large text (e.g., interception script source code or JSON file content). To use this option input _file /path/of/file e.g. _file /home/user/interceptionscript.py . From the following menu, you can choose an option by selecting its number. IM uses auto-filler for user inputs. When you type, it displays available values. To see all values, press space button. For example: Quick Tips # _ is an escape character for IM mode. For example, you can create a list [\"me\", \"you\"] by entering me_,you _true means boolean True instead of string \"true\" , similarly _false is boolean False instead of string \"false\" _null is comprehended as None (or in json null ) _x exits the current process and go back to the parent menu _file path_to_file the string property will be read ffrom file path_to_file _q refers to quit","title":"Menu Driven Interactive Mode"},{"location":"user/using-jans-cli/im/im-index/#menu-driven-interactive-mode","text":"We will refer Menu-driven Interactive Mode as IM . To run IM just simply execute jans-cli as follows: /opt/jans/jans-cli/config-cli.py Note: You can supply certificate and key with options --key-file and --cert-file , to disable ssl verification use -noverify . For more information /opt/jans/jans-cli/config-cli.py -h You will see the main menu as below: Using IM is very simple and intuitive. Just make a selection and answer questions. There is a special option to read value for a question from a file using _file tag. This option is the most suitable choice to input the large text (e.g., interception script source code or JSON file content). To use this option input _file /path/of/file e.g. _file /home/user/interceptionscript.py . From the following menu, you can choose an option by selecting its number. IM uses auto-filler for user inputs. When you type, it displays available values. To see all values, press space button. For example:","title":"Menu Driven Interactive Mode"},{"location":"user/using-jans-cli/im/im-index/#quick-tips","text":"_ is an escape character for IM mode. For example, you can create a list [\"me\", \"you\"] by entering me_,you _true means boolean True instead of string \"true\" , similarly _false is boolean False instead of string \"false\" _null is comprehended as None (or in json null ) _x exits the current process and go back to the parent menu _file path_to_file the string property will be read ffrom file path_to_file _q refers to quit","title":"Quick Tips"},{"location":"user/using-jans-cli/im/im-jans-authorization-server/","text":"Janssen Authorization Server # Prerequisite: Know how to use the Janssen CLI in interactive mode From the Main Menu choose option 8 to get/modify Jans authorization server configuration properties. Configuration \u2013 Properties -------------------------- 1 Gets all Jans authorization server configuration properties 2 Partially modifies Jans authorization server Application configuration properties Select 1 to get all the details about Jans authorization server configuration. It will show all the properties as below: { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1\", \"authorizationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/authorize\", \"tokenEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/token\", \"tokenRevocationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/revoke\", \"userInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/userinfo\", \"clientInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/clientinfo\", \"checkSessionIFrame\": \"https://testjans.gluu.com/jans-auth/opiframe.htm\", \"endSessionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/end_session\", \"jwksUri\": \"https://testjans.gluu.com/jans-auth/restv1/jwks\", \"registrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/register\", \"openIdDiscoveryEndpoint\": \"https://testjans.gluu.com/.well-known/webfinger\", \"openIdConfigurationEndpoint\": \"https://testjans.gluu.com/.well-known/openid-configuration\", \"idGenerationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/id\", \"introspectionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/introspection\", \"deviceAuthzEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/device_authorization\", \"sessionAsJwt\": false, \"sectorIdentifierCacheLifetimeInMinutes\": 1440, \"umaConfigurationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/uma2-configuration\", \"umaRptAsJwt\": false, \"umaRptLifetime\": 3600, \"umaTicketLifetime\": 3600, \"umaPctLifetime\": 2592000, \"umaResourceLifetime\": 2592000, \"umaAddScopesAutomatically\": true, \"umaValidateClaimToken\": false, \"umaGrantAccessIfNoPolicies\": false, \"umaRestrictResourceToAssociatedClient\": false, \"spontaneousScopeLifetime\": 86400, \"openidSubAttribute\": \"inum\", \"responseTypesSupported\": [ \"['token', 'code']\", \"['id_token']\", \"['token']\", \"['id_token', 'code']\", \"['id_token', 'token', 'code']\", \"['code']\", \"['id_token', 'token']\" ], \"responseModesSupported\": [ \"query\", \"form_post\", \"fragment\" ], \"grantTypesSupported\": [ \"password\", \"client_credentials\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"urn:ietf:params:oauth:grant-type:device_code\", \"implicit\", \"authorization_code\" ], \"subjectTypesSupported\": [ \"public\", \"pairwise\" ], \"defaultSubjectType\": [ \"p\", \"a\", \"i\", \"r\", \"w\", \"i\", \"s\", \"e\" ], \"userInfoSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"userInfoEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"userInfoEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"idTokenSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"idTokenEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"idTokenEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"requestObjectSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"requestObjectEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"requestObjectEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"tokenEndpointAuthMethodsSupported\": [ \"client_secret_basic\", \"client_secret_post\", \"client_secret_jwt\", \"private_key_jwt\", \"tls_client_auth\", \"self_signed_tls_client_auth\" ], \"tokenEndpointAuthSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"dynamicRegistrationCustomAttributes\": null, \"displayValuesSupported\": [ \"page\", \"popup\" ], \"claimTypesSupported\": [ \"normal\" ], \"jwksAlgorithmsSupported\": [ \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\", \"PS256\", \"PS384\", \"PS512\", \"RSA1_5\", \"RSA-OAEP\" ], \"serviceDocumentation\": [ \"h\", \"t\", \"t\", \"p\", \":\", \"/\", \"/\", \"j\", \"a\", \"n\", \"s\", \".\", \"o\", \"r\", \"g\", \"/\", \"d\", \"o\", \"c\", \"s\" ], \"claimsLocalesSupported\": [ \"en\" ], \"idTokenTokenBindingCnfValuesSupported\": [ \"tbh\" ], \"uiLocalesSupported\": [ \"en\", \"bg\", \"de\", \"es\", \"fr\", \"it\", \"ru\", \"tr\" ], \"claimsParameterSupported\": false, \"requestParameterSupported\": true, \"requestUriParameterSupported\": true, \"requestUriHashVerificationEnabled\": false, \"requireRequestUriRegistration\": false, \"opPolicyUri\": \"http://www.jans.io/doku.php?id=jans:policy\", \"opTosUri\": \"http://www.jans.io/doku.php?id=jans:tos\", \"authorizationCodeLifetime\": 60, \"refreshTokenLifetime\": 14400, \"idTokenLifetime\": 3600, \"idTokenFilterClaimsBasedOnAccessToken\": false, \"accessTokenLifetime\": 300, \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"cleanServiceBaseDns\": null, \"keyRegenerationEnabled\": true, \"keyRegenerationInterval\": 48, \"defaultSignatureAlgorithm\": [ \"R\", \"S\", \"2\", \"5\", \"6\" ], \"oxOpenIdConnectVersion\": \"openidconnect-1.0\", \"oxId\": \"https://testjans.gluu.com/oxid/service/jans/inum\", \"dynamicRegistrationEnabled\": true, \"dynamicRegistrationExpirationTime\": -1, \"dynamicRegistrationPersistClientAuthorizations\": true, \"trustedClientEnabled\": true, \"skipAuthorizationForOpenIdScopeAndPairwiseId\": false, \"dynamicRegistrationScopesParamEnabled\": true, \"dynamicRegistrationPasswordGrantTypeEnabled\": false, \"dynamicRegistrationAllowedPasswordGrantScopes\": null, \"dynamicRegistrationCustomObjectClass\": null, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"persistIdTokenInLdap\": false, \"persistRefreshTokenInLdap\": true, \"allowPostLogoutRedirectWithoutValidation\": false, \"invalidateSessionCookiesAfterAuthorizationFlow\": false, \"returnClientSecretOnRead\": true, \"rejectJwtWithNoneAlg\": true, \"expirationNotificatorEnabled\": false, \"useNestedJwtDuringEncryption\": true, \"expirationNotificatorMapSizeLimit\": 100000, \"expirationNotificatorIntervalInSeconds\": 600, \"authenticationFiltersEnabled\": false, \"clientAuthenticationFiltersEnabled\": false, \"clientRegDefaultToCodeFlowWithRefresh\": true, \"authenticationFilters\": [ { \"filter\": \"(&(mail=*{0}*)(inum={1}))\", \"bind\": false, \"bind-password-attribute\": null, \"base-dn\": null }, { \"filter\": \"uid={0}\", \"bind\": true, \"bind-password-attribute\": null, \"base-dn\": null } ], \"clientAuthenticationFilters\": [ { \"filter\": \"myCustomAttr1={0}\", \"bind\": null, \"bind-password-attribute\": null, \"base-dn\": null } ], \"corsConfigurationFilters\": [ { \"filterName\": \"CorsFilter\", \"corsEnabled\": true, \"corsAllowedOrigins\": \"*\", \"corsAllowedMethods\": \"GET,POST,HEAD,OPTIONS\", \"corsAllowedHeaders\": \"Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers\", \"corsExposedHeaders\": null, \"corsSupportCredentials\": true, \"corsLoggingEnabled\": false, \"corsPreflightMaxAge\": 1800, \"corsRequestDecorate\": true } ], \"sessionIdUnusedLifetime\": 86400, \"sessionIdUnauthenticatedUnusedLifetime\": 120, \"sessionIdEnabled\": true, \"sessionIdPersistOnPromptNone\": true, \"sessionIdRequestParameterEnabled\": false, \"changeSessionIdOnAuthentication\": true, \"sessionIdPersistInCache\": false, \"sessionIdLifetime\": 86400, \"serverSessionIdLifetime\": 86400, \"configurationUpdateInterval\": 3600, \"enableClientGrantTypeUpdate\": true, \"dynamicGrantTypeDefault\": [ \"client_credentials\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"urn:ietf:params:oauth:grant-type:device_code\", \"implicit\", \"authorization_code\" ], \"cssLocation\": null, \"jsLocation\": null, \"imgLocation\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"pairwiseIdType\": [ \"a\", \"l\", \"g\", \"o\", \"r\", \"i\", \"t\", \"h\", \"m\", \"i\", \"c\" ], \"pairwiseCalculationKey\": \"sckNNuFhwz3r2fC4xLLlBeVybFw\", \"pairwiseCalculationSalt\": \"USZej6vS3pI7RzFIl3AT\", \"shareSubjectIdBetweenClientsWithSameSectorId\": true, \"webKeysStorage\": \"keystore\", \"dnName\": \"CN=Jans Auth CA Certificates\", \"keyStoreFile\": \"/etc/certs/jans-auth-keys.jks\", \"keyStoreSecret\": \"0EIsfpb6tURD\", \"keySelectionStrategy\": \"OLDER\", \"oxElevenTestModeToken\": null, \"oxElevenGenerateKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/generateKey\", \"oxElevenSignEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/sign\", \"oxElevenVerifySignatureEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/verifySignature\", \"oxElevenDeleteKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/deleteKey\", \"introspectionAccessTokenMustHaveUmaProtectionScope\": false, \"endSessionWithAccessToken\": false, \"cookieDomain\": null, \"enabledOAuthAuditLogging\": null, \"jmsBrokerURISet\": null, \"jmsUserName\": null, \"jmsPassword\": null, \"clientWhiteList\": [ \"*\" ], \"clientBlackList\": [ \"*.attacker.com/*\" ], \"legacyIdTokenClaims\": false, \"customHeadersWithAuthorizationResponse\": true, \"frontChannelLogoutSessionSupported\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"updateUserLastLogonTime\": false, \"updateClientAccessTime\": false, \"logClientIdOnClientAuthentication\": true, \"logClientNameOnClientAuthentication\": false, \"disableJdkLogger\": true, \"authorizationRequestCustomAllowedParameters\": [ \"customParam2\", \"customParam3\", \"customParam1\" ], \"legacyDynamicRegistrationScopeParam\": false, \"openidScopeBackwardCompatibility\": false, \"disableU2fEndpoint\": false, \"useLocalCache\": true, \"fapiCompatibility\": false, \"forceIdTokenHintPrecense\": false, \"forceOfflineAccessScopeToEnableRefreshToken\": true, \"errorReasonEnabled\": false, \"removeRefreshTokensForClientOnLogout\": true, \"skipRefreshTokenDuringRefreshing\": false, \"refreshTokenExtendLifetimeOnRotation\": false, \"consentGatheringScriptBackwardCompatibility\": false, \"introspectionScriptBackwardCompatibility\": false, \"introspectionResponseScopesBackwardCompatibility\": false, \"softwareStatementValidationType\": \"script\", \"softwareStatementValidationClaimName\": null, \"authenticationProtectionConfiguration\": { \"attemptExpiration\": 15, \"maximumAllowedAttemptsWithoutDelay\": 4, \"delayTime\": 2, \"bruteForceProtectionEnabled\": false }, \"errorHandlingMethod\": \"internal\", \"keepAuthenticatorAttributesOnAcrChange\": false, \"deviceAuthzRequestExpiresIn\": 1800, \"deviceAuthzTokenPollInterval\": 5, \"deviceAuthzResponseTypeToProcessAuthz\": \"code\", \"backchannelClientId\": null, \"backchannelRedirectUri\": \"https://testjans.gluu.com/jans-auth/ciba/home.htm\", \"backchannelAuthenticationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-authorize\", \"backchannelDeviceRegistrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-deviceRegistration\", \"backchannelTokenDeliveryModesSupported\": [ \"poll\", \"ping\", \"push\" ], \"backchannelAuthenticationRequestSigningAlgValuesSupported\": null, \"backchannelUserCodeParameterSupported\": false, \"backchannelBindingMessagePattern\": \"^[a-zA-Z0-9]{4,8}$\", \"backchannelAuthenticationResponseExpiresIn\": 3600, \"backchannelAuthenticationResponseInterval\": 2, \"backchannelLoginHintClaims\": [ \"inum\", \"uid\", \"mail\" ], \"cibaEndUserNotificationConfig\": { \"apiKey\": null, \"authDomain\": null, \"databaseURL\": null, \"projectId\": null, \"storageBucket\": null, \"messagingSenderId\": null, \"appId\": null, \"notificationUrl\": null, \"notificationKey\": null, \"publicVapidKey\": null }, \"backchannelRequestsProcessorJobIntervalSec\": 5, \"backchannelRequestsProcessorJobChunkSize\": 100, \"cibaGrantLifeExtraTimeSec\": 180, \"cibaMaxExpirationTimeAllowedSec\": 1800, \"cibaEnabled\": false, \"discoveryCacheLifetimeInMinutes\": 60, \"httpLoggingEnabled\": false, \"httpLoggingExcludePaths\": null, \"externalLoggerConfiguration\": null, \"redirectUrisRegexEnabled\": false, \"useHighestLevelScriptIfAcrScriptNotFound\": true } By selecting the 2nd option, you can modify its properties partially. At the end, it will show the updated result.","title":"Janssen Authorization Server"},{"location":"user/using-jans-cli/im/im-jans-authorization-server/#janssen-authorization-server","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode From the Main Menu choose option 8 to get/modify Jans authorization server configuration properties. Configuration \u2013 Properties -------------------------- 1 Gets all Jans authorization server configuration properties 2 Partially modifies Jans authorization server Application configuration properties Select 1 to get all the details about Jans authorization server configuration. It will show all the properties as below: { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1\", \"authorizationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/authorize\", \"tokenEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/token\", \"tokenRevocationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/revoke\", \"userInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/userinfo\", \"clientInfoEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/clientinfo\", \"checkSessionIFrame\": \"https://testjans.gluu.com/jans-auth/opiframe.htm\", \"endSessionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/end_session\", \"jwksUri\": \"https://testjans.gluu.com/jans-auth/restv1/jwks\", \"registrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/register\", \"openIdDiscoveryEndpoint\": \"https://testjans.gluu.com/.well-known/webfinger\", \"openIdConfigurationEndpoint\": \"https://testjans.gluu.com/.well-known/openid-configuration\", \"idGenerationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/id\", \"introspectionEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/introspection\", \"deviceAuthzEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/device_authorization\", \"sessionAsJwt\": false, \"sectorIdentifierCacheLifetimeInMinutes\": 1440, \"umaConfigurationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/uma2-configuration\", \"umaRptAsJwt\": false, \"umaRptLifetime\": 3600, \"umaTicketLifetime\": 3600, \"umaPctLifetime\": 2592000, \"umaResourceLifetime\": 2592000, \"umaAddScopesAutomatically\": true, \"umaValidateClaimToken\": false, \"umaGrantAccessIfNoPolicies\": false, \"umaRestrictResourceToAssociatedClient\": false, \"spontaneousScopeLifetime\": 86400, \"openidSubAttribute\": \"inum\", \"responseTypesSupported\": [ \"['token', 'code']\", \"['id_token']\", \"['token']\", \"['id_token', 'code']\", \"['id_token', 'token', 'code']\", \"['code']\", \"['id_token', 'token']\" ], \"responseModesSupported\": [ \"query\", \"form_post\", \"fragment\" ], \"grantTypesSupported\": [ \"password\", \"client_credentials\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"urn:ietf:params:oauth:grant-type:device_code\", \"implicit\", \"authorization_code\" ], \"subjectTypesSupported\": [ \"public\", \"pairwise\" ], \"defaultSubjectType\": [ \"p\", \"a\", \"i\", \"r\", \"w\", \"i\", \"s\", \"e\" ], \"userInfoSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"userInfoEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"userInfoEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"idTokenSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"idTokenEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"idTokenEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"requestObjectSigningAlgValuesSupported\": [ \"none\", \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"requestObjectEncryptionAlgValuesSupported\": [ \"RSA1_5\", \"RSA-OAEP\", \"A128KW\", \"A256KW\" ], \"requestObjectEncryptionEncValuesSupported\": [ \"A128CBC+HS256\", \"A256CBC+HS512\", \"A128GCM\", \"A256GCM\" ], \"tokenEndpointAuthMethodsSupported\": [ \"client_secret_basic\", \"client_secret_post\", \"client_secret_jwt\", \"private_key_jwt\", \"tls_client_auth\", \"self_signed_tls_client_auth\" ], \"tokenEndpointAuthSigningAlgValuesSupported\": [ \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\" ], \"dynamicRegistrationCustomAttributes\": null, \"displayValuesSupported\": [ \"page\", \"popup\" ], \"claimTypesSupported\": [ \"normal\" ], \"jwksAlgorithmsSupported\": [ \"RS256\", \"RS384\", \"RS512\", \"ES256\", \"ES384\", \"ES512\", \"PS256\", \"PS384\", \"PS512\", \"RSA1_5\", \"RSA-OAEP\" ], \"serviceDocumentation\": [ \"h\", \"t\", \"t\", \"p\", \":\", \"/\", \"/\", \"j\", \"a\", \"n\", \"s\", \".\", \"o\", \"r\", \"g\", \"/\", \"d\", \"o\", \"c\", \"s\" ], \"claimsLocalesSupported\": [ \"en\" ], \"idTokenTokenBindingCnfValuesSupported\": [ \"tbh\" ], \"uiLocalesSupported\": [ \"en\", \"bg\", \"de\", \"es\", \"fr\", \"it\", \"ru\", \"tr\" ], \"claimsParameterSupported\": false, \"requestParameterSupported\": true, \"requestUriParameterSupported\": true, \"requestUriHashVerificationEnabled\": false, \"requireRequestUriRegistration\": false, \"opPolicyUri\": \"http://www.jans.io/doku.php?id=jans:policy\", \"opTosUri\": \"http://www.jans.io/doku.php?id=jans:tos\", \"authorizationCodeLifetime\": 60, \"refreshTokenLifetime\": 14400, \"idTokenLifetime\": 3600, \"idTokenFilterClaimsBasedOnAccessToken\": false, \"accessTokenLifetime\": 300, \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"cleanServiceBaseDns\": null, \"keyRegenerationEnabled\": true, \"keyRegenerationInterval\": 48, \"defaultSignatureAlgorithm\": [ \"R\", \"S\", \"2\", \"5\", \"6\" ], \"oxOpenIdConnectVersion\": \"openidconnect-1.0\", \"oxId\": \"https://testjans.gluu.com/oxid/service/jans/inum\", \"dynamicRegistrationEnabled\": true, \"dynamicRegistrationExpirationTime\": -1, \"dynamicRegistrationPersistClientAuthorizations\": true, \"trustedClientEnabled\": true, \"skipAuthorizationForOpenIdScopeAndPairwiseId\": false, \"dynamicRegistrationScopesParamEnabled\": true, \"dynamicRegistrationPasswordGrantTypeEnabled\": false, \"dynamicRegistrationAllowedPasswordGrantScopes\": null, \"dynamicRegistrationCustomObjectClass\": null, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"persistIdTokenInLdap\": false, \"persistRefreshTokenInLdap\": true, \"allowPostLogoutRedirectWithoutValidation\": false, \"invalidateSessionCookiesAfterAuthorizationFlow\": false, \"returnClientSecretOnRead\": true, \"rejectJwtWithNoneAlg\": true, \"expirationNotificatorEnabled\": false, \"useNestedJwtDuringEncryption\": true, \"expirationNotificatorMapSizeLimit\": 100000, \"expirationNotificatorIntervalInSeconds\": 600, \"authenticationFiltersEnabled\": false, \"clientAuthenticationFiltersEnabled\": false, \"clientRegDefaultToCodeFlowWithRefresh\": true, \"authenticationFilters\": [ { \"filter\": \"(&(mail=*{0}*)(inum={1}))\", \"bind\": false, \"bind-password-attribute\": null, \"base-dn\": null }, { \"filter\": \"uid={0}\", \"bind\": true, \"bind-password-attribute\": null, \"base-dn\": null } ], \"clientAuthenticationFilters\": [ { \"filter\": \"myCustomAttr1={0}\", \"bind\": null, \"bind-password-attribute\": null, \"base-dn\": null } ], \"corsConfigurationFilters\": [ { \"filterName\": \"CorsFilter\", \"corsEnabled\": true, \"corsAllowedOrigins\": \"*\", \"corsAllowedMethods\": \"GET,POST,HEAD,OPTIONS\", \"corsAllowedHeaders\": \"Origin,Authorization,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers\", \"corsExposedHeaders\": null, \"corsSupportCredentials\": true, \"corsLoggingEnabled\": false, \"corsPreflightMaxAge\": 1800, \"corsRequestDecorate\": true } ], \"sessionIdUnusedLifetime\": 86400, \"sessionIdUnauthenticatedUnusedLifetime\": 120, \"sessionIdEnabled\": true, \"sessionIdPersistOnPromptNone\": true, \"sessionIdRequestParameterEnabled\": false, \"changeSessionIdOnAuthentication\": true, \"sessionIdPersistInCache\": false, \"sessionIdLifetime\": 86400, \"serverSessionIdLifetime\": 86400, \"configurationUpdateInterval\": 3600, \"enableClientGrantTypeUpdate\": true, \"dynamicGrantTypeDefault\": [ \"client_credentials\", \"refresh_token\", \"urn:ietf:params:oauth:grant-type:uma-ticket\", \"urn:ietf:params:oauth:grant-type:device_code\", \"implicit\", \"authorization_code\" ], \"cssLocation\": null, \"jsLocation\": null, \"imgLocation\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"pairwiseIdType\": [ \"a\", \"l\", \"g\", \"o\", \"r\", \"i\", \"t\", \"h\", \"m\", \"i\", \"c\" ], \"pairwiseCalculationKey\": \"sckNNuFhwz3r2fC4xLLlBeVybFw\", \"pairwiseCalculationSalt\": \"USZej6vS3pI7RzFIl3AT\", \"shareSubjectIdBetweenClientsWithSameSectorId\": true, \"webKeysStorage\": \"keystore\", \"dnName\": \"CN=Jans Auth CA Certificates\", \"keyStoreFile\": \"/etc/certs/jans-auth-keys.jks\", \"keyStoreSecret\": \"0EIsfpb6tURD\", \"keySelectionStrategy\": \"OLDER\", \"oxElevenTestModeToken\": null, \"oxElevenGenerateKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/generateKey\", \"oxElevenSignEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/sign\", \"oxElevenVerifySignatureEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/verifySignature\", \"oxElevenDeleteKeyEndpoint\": \"https://testjans.gluu.com/oxeleven/rest/oxeleven/deleteKey\", \"introspectionAccessTokenMustHaveUmaProtectionScope\": false, \"endSessionWithAccessToken\": false, \"cookieDomain\": null, \"enabledOAuthAuditLogging\": null, \"jmsBrokerURISet\": null, \"jmsUserName\": null, \"jmsPassword\": null, \"clientWhiteList\": [ \"*\" ], \"clientBlackList\": [ \"*.attacker.com/*\" ], \"legacyIdTokenClaims\": false, \"customHeadersWithAuthorizationResponse\": true, \"frontChannelLogoutSessionSupported\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"updateUserLastLogonTime\": false, \"updateClientAccessTime\": false, \"logClientIdOnClientAuthentication\": true, \"logClientNameOnClientAuthentication\": false, \"disableJdkLogger\": true, \"authorizationRequestCustomAllowedParameters\": [ \"customParam2\", \"customParam3\", \"customParam1\" ], \"legacyDynamicRegistrationScopeParam\": false, \"openidScopeBackwardCompatibility\": false, \"disableU2fEndpoint\": false, \"useLocalCache\": true, \"fapiCompatibility\": false, \"forceIdTokenHintPrecense\": false, \"forceOfflineAccessScopeToEnableRefreshToken\": true, \"errorReasonEnabled\": false, \"removeRefreshTokensForClientOnLogout\": true, \"skipRefreshTokenDuringRefreshing\": false, \"refreshTokenExtendLifetimeOnRotation\": false, \"consentGatheringScriptBackwardCompatibility\": false, \"introspectionScriptBackwardCompatibility\": false, \"introspectionResponseScopesBackwardCompatibility\": false, \"softwareStatementValidationType\": \"script\", \"softwareStatementValidationClaimName\": null, \"authenticationProtectionConfiguration\": { \"attemptExpiration\": 15, \"maximumAllowedAttemptsWithoutDelay\": 4, \"delayTime\": 2, \"bruteForceProtectionEnabled\": false }, \"errorHandlingMethod\": \"internal\", \"keepAuthenticatorAttributesOnAcrChange\": false, \"deviceAuthzRequestExpiresIn\": 1800, \"deviceAuthzTokenPollInterval\": 5, \"deviceAuthzResponseTypeToProcessAuthz\": \"code\", \"backchannelClientId\": null, \"backchannelRedirectUri\": \"https://testjans.gluu.com/jans-auth/ciba/home.htm\", \"backchannelAuthenticationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-authorize\", \"backchannelDeviceRegistrationEndpoint\": \"https://testjans.gluu.com/jans-auth/restv1/bc-deviceRegistration\", \"backchannelTokenDeliveryModesSupported\": [ \"poll\", \"ping\", \"push\" ], \"backchannelAuthenticationRequestSigningAlgValuesSupported\": null, \"backchannelUserCodeParameterSupported\": false, \"backchannelBindingMessagePattern\": \"^[a-zA-Z0-9]{4,8}$\", \"backchannelAuthenticationResponseExpiresIn\": 3600, \"backchannelAuthenticationResponseInterval\": 2, \"backchannelLoginHintClaims\": [ \"inum\", \"uid\", \"mail\" ], \"cibaEndUserNotificationConfig\": { \"apiKey\": null, \"authDomain\": null, \"databaseURL\": null, \"projectId\": null, \"storageBucket\": null, \"messagingSenderId\": null, \"appId\": null, \"notificationUrl\": null, \"notificationKey\": null, \"publicVapidKey\": null }, \"backchannelRequestsProcessorJobIntervalSec\": 5, \"backchannelRequestsProcessorJobChunkSize\": 100, \"cibaGrantLifeExtraTimeSec\": 180, \"cibaMaxExpirationTimeAllowedSec\": 1800, \"cibaEnabled\": false, \"discoveryCacheLifetimeInMinutes\": 60, \"httpLoggingEnabled\": false, \"httpLoggingExcludePaths\": null, \"externalLoggerConfiguration\": null, \"redirectUrisRegexEnabled\": false, \"useHighestLevelScriptIfAcrScriptNotFound\": true } By selecting the 2nd option, you can modify its properties partially. At the end, it will show the updated result.","title":"Janssen Authorization Server"},{"location":"user/using-jans-cli/im/im-janssen-fido2/","text":"Janssen FIDO2 Configuration # Prerequisite: Know how to use the Janssen CLI in interactive mode Janssen includes a FIDO2 component to implement a two-step, two-factor authentication (2FA) with a username/password as the first step, and any FIDO2 device as the second step. During Janssen installation, the administrator will have an option to install the FIDO2 component. Using Janssen CLI, you can view/update details of the FIDO2 configuration. From the main menu select option 9, you will get two options. Configuration \u2013 Fido2 --------------------- 1 Gets Jans Authorization Server Fido2 configuration properties 2 Updates Fido2 configuration properties If you chose the first option, You will get some details of fido2 configuration properties: { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": true, \"disableJdkLogger\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": \"\", \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": true, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": \"/etc/jans/conf/fido2/authenticator_cert\", \"mdsCertsFolder\": \"/etc/jans/conf/fido2/mds/cert\", \"mdsTocsFolder\": \"/etc/jans/conf/fido2/mds/toc\", \"serverMetadataFolder\": \"/etc/jans/conf/fido2/server_metadata\", \"requestedParties\": [ { \"name\": \"https://testjans.gluu.com\", \"domains\": [ \"testjans.gluu.com\" ] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": 180, \"authenticationHistoryExpiration\": 1296000, \"requestedCredentialTypes\": [ \"RS256\", \"ES256\" ] } } If you want to update the fido2 configuration, you can choose the 2nd option. It will ask to fill each property, skip for default values. For example, if you want to change logginglevel INFO to DEBUG , simply enter DEBUG when it will ask to enter a value. Add RequestedParties? ; If you want to add any requested domains then enter y , it will ask name and domains information of requested parties. Otherwise, enter n to skip. Continue? y Getting access token for scope https://jans.io/oauth/config/fido2.write Please wait while posting data ... { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": [] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } }","title":"Janssen FIDO2 Configuration"},{"location":"user/using-jans-cli/im/im-janssen-fido2/#janssen-fido2-configuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Janssen includes a FIDO2 component to implement a two-step, two-factor authentication (2FA) with a username/password as the first step, and any FIDO2 device as the second step. During Janssen installation, the administrator will have an option to install the FIDO2 component. Using Janssen CLI, you can view/update details of the FIDO2 configuration. From the main menu select option 9, you will get two options. Configuration \u2013 Fido2 --------------------- 1 Gets Jans Authorization Server Fido2 configuration properties 2 Updates Fido2 configuration properties If you chose the first option, You will get some details of fido2 configuration properties: { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": true, \"disableJdkLogger\": true, \"loggingLevel\": \"INFO\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": \"\", \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": true, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": \"/etc/jans/conf/fido2/authenticator_cert\", \"mdsCertsFolder\": \"/etc/jans/conf/fido2/mds/cert\", \"mdsTocsFolder\": \"/etc/jans/conf/fido2/mds/toc\", \"serverMetadataFolder\": \"/etc/jans/conf/fido2/server_metadata\", \"requestedParties\": [ { \"name\": \"https://testjans.gluu.com\", \"domains\": [ \"testjans.gluu.com\" ] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": 180, \"authenticationHistoryExpiration\": 1296000, \"requestedCredentialTypes\": [ \"RS256\", \"ES256\" ] } } If you want to update the fido2 configuration, you can choose the 2nd option. It will ask to fill each property, skip for default values. For example, if you want to change logginglevel INFO to DEBUG , simply enter DEBUG when it will ask to enter a value. Add RequestedParties? ; If you want to add any requested domains then enter y , it will ask name and domains information of requested parties. Otherwise, enter n to skip. Continue? y Getting access token for scope https://jans.io/oauth/config/fido2.write Please wait while posting data ... { \"issuer\": \"https://testjans.gluu.com\", \"baseEndpoint\": \"https://testjans.gluu.com/fido2/restv1\", \"cleanServiceInterval\": 60, \"cleanServiceBatchChunkSize\": 10000, \"useLocalCache\": false, \"disableJdkLogger\": false, \"loggingLevel\": \"DEBUG\", \"loggingLayout\": \"text\", \"externalLoggerConfiguration\": null, \"metricReporterInterval\": 300, \"metricReporterKeepDataDays\": 15, \"metricReporterEnabled\": false, \"personCustomObjectClassList\": [ \"jansCustomPerson\", \"jansPerson\" ], \"fido2Configuration\": { \"authenticatorCertsFolder\": null, \"mdsCertsFolder\": null, \"mdsTocsFolder\": null, \"serverMetadataFolder\": null, \"requestedParties\": [ { \"name\": null, \"domains\": [] } ], \"userAutoEnrollment\": false, \"unfinishedRequestExpiration\": null, \"authenticationHistoryExpiration\": null, \"requestedCredentialTypes\": [] } }","title":"Janssen FIDO2 Configuration"},{"location":"user/using-jans-cli/im/im-janssen-logging-configuration/","text":"Log Management # Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI, you can easily update the logging configuration. Just go with option 11 from Main Menu, It will display two options. Configuration \u2013 Logging ----------------------- 1 Returns Jans Authorization Server logging settings 2 Updates Jans Authorization Server logging settings The first option returns the current logging configuration. Re turns Ja ns Au t horiza t io n Server loggi n g se tt i n gs -------------------------------------------------- Please wai t while re tre ivi n g da ta ... Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.readonly { \"loggingLevel\" : \"INFO\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : false , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null } To update the current logging configuration select option 2. For example, I have updated logging level INFO to DEBUG and enabled enabledOAuthAuditLogging . Re turns Ja ns Au t horiza t io n Server loggi n g se tt i n gs -------------------------------------------------- Please wai t while re tre ivi n g da ta ... Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.readonly \u00abLoggi n g level f or Ja ns Au t horiza t io n Server logger. Type : s tr i n g\u00bb loggi n gLevel [ INFO ]: DEBUG \u00abLoggi n g layou t used f or Ja ns Au t horiza t io n Server loggers. Type : s tr i n g\u00bb loggi n gLayou t [ te x t ]: \u00abTo e na ble h tt p reques t /respo nse loggi n g. Type : boolea n \u00bb h tt pLoggi n gE na bled [ false ]: \u00abTo e na ble/disable Jdk loggi n g. Type : boolea n \u00bb disableJdkLogger [ true ]: \u00abTo e na ble/disable OAu t h audi t loggi n g. Type : boolea n \u00bb e na bledOAu t hAudi t Loggi n g [ false ]: true Please e nter a( n ) boolea n value : _ true , _ false e na bledOAu t hAudi t Loggi n g [ false ]: _ true \u00abPa t h t o ex ternal log 4 j 2 co nf igura t io n f ile. Type : s tr i n g\u00bb ex ternal LoggerCo nf igura t io n : \u00abLis t o f pa t hs t o exclude fr om logger. Type : array o f s tr i n g separa te d by _ , \u00bb Example : /au t h/img , /au t h/s t yleshee t h tt pLoggi n gExcludePa t hs : Ob ta i ne d Da ta : { \"loggingLevel\" : \"DEBUG\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : true , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null } Co nt i nue ? y Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.write Please wai t while pos t i n g da ta ... { \"loggingLevel\" : \"DEBUG\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : true , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null }","title":"Log Management"},{"location":"user/using-jans-cli/im/im-janssen-logging-configuration/#log-management","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI, you can easily update the logging configuration. Just go with option 11 from Main Menu, It will display two options. Configuration \u2013 Logging ----------------------- 1 Returns Jans Authorization Server logging settings 2 Updates Jans Authorization Server logging settings The first option returns the current logging configuration. Re turns Ja ns Au t horiza t io n Server loggi n g se tt i n gs -------------------------------------------------- Please wai t while re tre ivi n g da ta ... Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.readonly { \"loggingLevel\" : \"INFO\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : false , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null } To update the current logging configuration select option 2. For example, I have updated logging level INFO to DEBUG and enabled enabledOAuthAuditLogging . Re turns Ja ns Au t horiza t io n Server loggi n g se tt i n gs -------------------------------------------------- Please wai t while re tre ivi n g da ta ... Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.readonly \u00abLoggi n g level f or Ja ns Au t horiza t io n Server logger. Type : s tr i n g\u00bb loggi n gLevel [ INFO ]: DEBUG \u00abLoggi n g layou t used f or Ja ns Au t horiza t io n Server loggers. Type : s tr i n g\u00bb loggi n gLayou t [ te x t ]: \u00abTo e na ble h tt p reques t /respo nse loggi n g. Type : boolea n \u00bb h tt pLoggi n gE na bled [ false ]: \u00abTo e na ble/disable Jdk loggi n g. Type : boolea n \u00bb disableJdkLogger [ true ]: \u00abTo e na ble/disable OAu t h audi t loggi n g. Type : boolea n \u00bb e na bledOAu t hAudi t Loggi n g [ false ]: true Please e nter a( n ) boolea n value : _ true , _ false e na bledOAu t hAudi t Loggi n g [ false ]: _ true \u00abPa t h t o ex ternal log 4 j 2 co nf igura t io n f ile. Type : s tr i n g\u00bb ex ternal LoggerCo nf igura t io n : \u00abLis t o f pa t hs t o exclude fr om logger. Type : array o f s tr i n g separa te d by _ , \u00bb Example : /au t h/img , /au t h/s t yleshee t h tt pLoggi n gExcludePa t hs : Ob ta i ne d Da ta : { \"loggingLevel\" : \"DEBUG\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : true , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null } Co nt i nue ? y Ge tt i n g access t oke n f or scope h tt ps : //jans.io/oauth/config/logging.write Please wai t while pos t i n g da ta ... { \"loggingLevel\" : \"DEBUG\" , \"loggingLayout\" : \"text\" , \"httpLoggingEnabled\" : false , \"disableJdkLogger\" : true , \"enabledOAuthAuditLogging\" : true , \"externalLoggerConfiguration\" : null , \"httpLoggingExcludePaths\" : null }","title":"Log Management"},{"location":"user/using-jans-cli/im/im-json-web-key/","text":"JWT Management # Prerequisite: Know how to use the Janssen CLI in interactive mode This operation is used to get the JSON Web Key Set (JWKS) from OP host. The JWKS is a set of keys containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. From the Main Menu, select option 12, It returns some options as stated below: Configuration \u2013 JWK - JSON Web Key (JWK) ---------------------------------------- 1 Gets a list of JSON Web Key (JWK) used by a server 2 Puts/replaces JWKS 3 Patch JWKS You can view the list of JSON Web Key, add/replace and patch using Janssen CLI. Get list of JSON Web Key # Select option 1 from JSON Web Key Menu and it will return a list of key with details information as below: Gets list of JSON Web Key (JWK) used by server Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. --------------------------------------------------------------------------------------------------------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/jwks.readonly { \"keys\": [ { \"kid\": \"a1d120af-d4c1-45aa-8cff-034e00f13d2b_sig_rs256\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS256\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAKefzbtkilZu5nn6G1WHSbJZu/PIdKpR9U5QA58DXN6GMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzODU5WhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxmm58zzhORBJkyxcjyfFUrRO06V4PwDZT/ObroQOQDuN8KbOzqkGdZX6BkZiFPNHuWdnUp0/2Fxf2LM1z5nhyCG4Wy92rUqHL6ispNtPfWOe3mWwQlFJk/Z/87gqJZ00ss3vnSk+05j4AsgvnPoKZJtgJPAEjZ8+bBSNExpqWdHBFcqJJsLhyjE5o7hQFQplMevQLyVvrzxsY8YwZuoTZA+bUo7//vsrHUe/PyZP0+0FHRbFzwo+ArxrdFcFlEhTqjKijo7pyh8gmZkgvXG8D1Zi1Fmstnf9yiF36ZBlN+RSr+JHxPAvwU2O/aMmFhvZNJ9aOzP0dienSZo72xSiRwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAGB6JFBWpIAux87xE1GL1iY+LrcxC7T6ITRb+mwhtsA0bOTx9CISNLhuFUIcOBrB+2LQD7asVvbo7I2zJ9enIR0QJbO4Z3niSCVULWeBhPACh5a+HgkpZ7mlFLJyD1hpw+pEfobasvoJLzvyuVpL/EXCgMYoi0qmrkwZfYXoajjZAhsT6Y5mTBd25xYGcatglQZutaVOgneQxZb2vjAH4h3H14EHdKPh3viXbpyXe6MP+DqX1kIqFHX3rYbhvLXdALHkRsqlcoHMW7jQuQyyfXNbwddg6H/IR0VV5yliOsoHP8BxHS9vIGHroGpZarpCwkxgsRKL+Uib1+wBN1GLu6o=\" ], \"n\": \"xmm58zzhORBJkyxcjyfFUrRO06V4PwDZT_ObroQOQDuN8KbOzqkGdZX6BkZiFPNHuWdnUp0_2Fxf2LM1z5nhyCG4Wy92rUqHL6ispNtPfWOe3mWwQlFJk_Z_87gqJZ00ss3vnSk-05j4AsgvnPoKZJtgJPAEjZ8-bBSNExpqWdHBFcqJJsLhyjE5o7hQFQplMevQLyVvrzxsY8YwZuoTZA-bUo7__vsrHUe_PyZP0-0FHRbFzwo-ArxrdFcFlEhTqjKijo7pyh8gmZkgvXG8D1Zi1Fmstnf9yiF36ZBlN-RSr-JHxPAvwU2O_aMmFhvZNJ9aOzP0dienSZo72xSiRw\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"5841b726-4a62-4a91-9b14-2c4e774b8187_sig_rs384\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS384\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAK29kWeoIZxzuN9D5Bi+TJOSkxSMyK+9O6sFHH9UG6KTMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTAwWhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtegG/5p4hXBV8BhPE7bUYgCXYnwFY9J9yVNjMI306qnN1sRrTvqH88SCLg2/sY2gWI+Y8lmqXYsLbsmCoCXMUAHU6ujqrwWZsiubucyb6wmE2yWdkSgIcT1jpepnfvm4oyKnhZVqn6hOuDx+/vBNk/RJfPibBrhJp/+uiZFc86at3JIgqXB5RqV9ryXGSXpL7tj5cST2HFU+2WzoutHRze7T3XLcA0bIiiQUfHzssxElfSbrUZRY36mpoaqm2WDMEhBEwu2B1L2Jwx76LIn7dWszwaIHkqLMy7PSl3Hit0MdO7SD5bqHnMHHmSjj+9XmYBg5oErfOKJOWAevLlksgQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBACSX/4j+sd5TGsM1e3ISJHxjDlWhvsurPQhadaDu49NdCP/9hrwo7Th48q8Q8o99DnDBOIV0AE7VORYC4xRWHXlGJV84YAQRhHi1rL8L5YWheNeR0/ibanLhaTMb4Ecw8CRJWplslKmt78bn/J1xl4cWilDTVeB+LAYrpmDJNXSx/3QHtIc2PoIKn3dE8cHhHvQ+zHmd52TxGdBR08+TqZDcwZT9XvjrOwyUkk5LIXp8Di9oqPtcDM2vqrgZna40cZAtXHzY1x6PKlwRoMSEZ+olYjjy2OlqsotORc+fbQIkLkUUnhyHTAiobZT1N55LjYkhwjXV+Ps1Qm0Q2px9uMs=\" ], \"n\": \"tegG_5p4hXBV8BhPE7bUYgCXYnwFY9J9yVNjMI306qnN1sRrTvqH88SCLg2_sY2gWI-Y8lmqXYsLbsmCoCXMUAHU6ujqrwWZsiubucyb6wmE2yWdkSgIcT1jpepnfvm4oyKnhZVqn6hOuDx-_vBNk_RJfPibBrhJp_-uiZFc86at3JIgqXB5RqV9ryXGSXpL7tj5cST2HFU-2WzoutHRze7T3XLcA0bIiiQUfHzssxElfSbrUZRY36mpoaqm2WDMEhBEwu2B1L2Jwx76LIn7dWszwaIHkqLMy7PSl3Hit0MdO7SD5bqHnMHHmSjj-9XmYBg5oErfOKJOWAevLlksgQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, ... ... ... { \"kid\": \"e6e8ccc4-708b-4a83-bbd2-7a9e0181734f_enc_rsa-oaep\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAIfkfNwuxlcdhdiAKvWrX+LbYKvZwRC9aEn9tOqCZLunMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTAyWhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw6p2QLwHKwPA+W9oTjTAkYn1iRQVXdPsNIu18Lao11Fbp0krMKSsnVcBIuO8zjsERf8b/awTN9zJQpKO3LqHHcGIjZJdAfH42CPgyUMjn6laF8iO0S+kI8RCocRLoPP2PVbqPjYD6kvK0mlSSLu+t9bU7mgEsYF5y8r05hX1ROdLUTFuHMa2g4cuD0HEEJMzewK1TzPikNiThsQv0yzwkwGZrBldWeB1E8BGWha2jwVom/Noo6vimtN8Le1XeYq5PvRVaS4AtLup4K0SaVetL0mAiCWKUTudWNDCRWB/Z4lJCJGOCCfk6bPp0TsjOcDjGkPzP05G9FFWndOpQ49UcwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAJ6zGYZqI4rwBJri7v3XSLvKrUgU19xLq6aik6h3DMylzHFEydnMdgyYU23GWP/rcvM1K4whhiopUcoj/FHQ0uaQV67zb6/NvCbIxiGjQs08ZcYnMtZ0zwm9hj7YeafsVQVI3qo1VdJfPWYHEW4IUfaqIlWdsj/CW1HeKWOrw0+WC1JYwD5Ka13bwYtC3jgt8yHwn3XoOhbINzFsVdRA5pfJKCvZN5IteHhpkmeOkvOlRFaPrqlGM2rukCzo2aBakC8F8SwaQje6prm2wSRJp/qjJKxKO8fMklcBT/FMD2zdYeHb4+YFRo8/CzjRNPEmMSI4LHdFkmjGDrLQYjrxOsY=\" ], \"n\": \"w6p2QLwHKwPA-W9oTjTAkYn1iRQVXdPsNIu18Lao11Fbp0krMKSsnVcBIuO8zjsERf8b_awTN9zJQpKO3LqHHcGIjZJdAfH42CPgyUMjn6laF8iO0S-kI8RCocRLoPP2PVbqPjYD6kvK0mlSSLu-t9bU7mgEsYF5y8r05hX1ROdLUTFuHMa2g4cuD0HEEJMzewK1TzPikNiThsQv0yzwkwGZrBldWeB1E8BGWha2jwVom_Noo6vimtN8Le1XeYq5PvRVaS4AtLup4K0SaVetL0mAiCWKUTudWNDCRWB_Z4lJCJGOCCfk6bPp0TsjOcDjGkPzP05G9FFWndOpQ49Ucw\", \"e\": \"AQAB\", \"x\": null, \"y\": null } ] } Creating or Replacing - JWK # You can add a new JWK or replace an old JWK with new value through this Interactive Mode option. When it will ask Add JwonWebKey? just press y to confirm. Fill each property with a value, keep empty to skip. kid : Unique Key Identifier [String]. kty : Cryptographic algorithm name used with the key [String]. use : Key usage, [enc, sig,..] alg : The cryptographic algorithm name that is going to be used. exp : time validation Gets list of JSON Web Key (JWK) used by server Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. --------------------------------------------------------------------------------------------------------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/jwks.readonly \u00abJsonWebKey. \u00bb Add JsonWebKey? y \u00abThe unique identifier for the key. Type: string\u00bb kid: aabb \u00abThe family of cryptographic algorithms used with the key. Type: string\u00bb kty: RSA \u00abHow the key was meant to be used; sig represents the signature. Type: string\u00bb use: enc \u00abThe specific cryptographic algorithm used with the key. Type: string\u00bb alg: RSA-OAEP \u00abThe crv member identifies the cryptographic curve used with the key. Values defined by this specification are P-256, P-384 and P-521. Additional crv values MAY be used, provided they are understood by implementations using that Elliptic Curve key. The crv value is case sensitive. Type: string\u00bb crv: \u00abContains the token expiration timestamp. Type: integer\u00bb exp: \u00abThe x.509 certificate chain. The first entry in the array is the certificate to use for token verification; the other certificates can be used to verify this first certificate. Type: array of string separated by _,\u00bb x5c: \u00abThe modulus for the RSA public key. Type: string\u00bb n: \u00abThe exponent for the RSA public key. Type: string\u00bb e: \u00abThe x member contains the x coordinate for the elliptic curve point. It is represented as the base64url encoding of the coordinate's big endian representation. Type: string\u00bb x: \u00abThe y member contains the y coordinate for the elliptic curve point. It is represented as the base64url encoding of the coordinate's big endian representation. Type: string\u00bb y: Add another JsonWebKey? n Obtained Data: { \"keys\": [ { \"kid\": \"aabb\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": null, \"exp\": null, \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } ] } Continue? y Getting access token for scope https://jans.io/oauth/config/jwks.write Please wait while posting data ... { \"keys\": [ { \"kid\": \"aabb\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": null, \"x5c\": null, \"n\": null, \"e\": null, \"x\": null, \"y\": null } ] } Update an Existing JWK Configuration # Just choose this option and fill the value for op , path , and value to patch JSON Web Key.","title":"JWT Management"},{"location":"user/using-jans-cli/im/im-json-web-key/#jwt-management","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode This operation is used to get the JSON Web Key Set (JWKS) from OP host. The JWKS is a set of keys containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. From the Main Menu, select option 12, It returns some options as stated below: Configuration \u2013 JWK - JSON Web Key (JWK) ---------------------------------------- 1 Gets a list of JSON Web Key (JWK) used by a server 2 Puts/replaces JWKS 3 Patch JWKS You can view the list of JSON Web Key, add/replace and patch using Janssen CLI.","title":"JWT Management"},{"location":"user/using-jans-cli/im/im-json-web-key/#get-list-of-json-web-key","text":"Select option 1 from JSON Web Key Menu and it will return a list of key with details information as below: Gets list of JSON Web Key (JWK) used by server Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. --------------------------------------------------------------------------------------------------------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/jwks.readonly { \"keys\": [ { \"kid\": \"a1d120af-d4c1-45aa-8cff-034e00f13d2b_sig_rs256\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS256\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAKefzbtkilZu5nn6G1WHSbJZu/PIdKpR9U5QA58DXN6GMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzODU5WhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxmm58zzhORBJkyxcjyfFUrRO06V4PwDZT/ObroQOQDuN8KbOzqkGdZX6BkZiFPNHuWdnUp0/2Fxf2LM1z5nhyCG4Wy92rUqHL6ispNtPfWOe3mWwQlFJk/Z/87gqJZ00ss3vnSk+05j4AsgvnPoKZJtgJPAEjZ8+bBSNExpqWdHBFcqJJsLhyjE5o7hQFQplMevQLyVvrzxsY8YwZuoTZA+bUo7//vsrHUe/PyZP0+0FHRbFzwo+ArxrdFcFlEhTqjKijo7pyh8gmZkgvXG8D1Zi1Fmstnf9yiF36ZBlN+RSr+JHxPAvwU2O/aMmFhvZNJ9aOzP0dienSZo72xSiRwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAGB6JFBWpIAux87xE1GL1iY+LrcxC7T6ITRb+mwhtsA0bOTx9CISNLhuFUIcOBrB+2LQD7asVvbo7I2zJ9enIR0QJbO4Z3niSCVULWeBhPACh5a+HgkpZ7mlFLJyD1hpw+pEfobasvoJLzvyuVpL/EXCgMYoi0qmrkwZfYXoajjZAhsT6Y5mTBd25xYGcatglQZutaVOgneQxZb2vjAH4h3H14EHdKPh3viXbpyXe6MP+DqX1kIqFHX3rYbhvLXdALHkRsqlcoHMW7jQuQyyfXNbwddg6H/IR0VV5yliOsoHP8BxHS9vIGHroGpZarpCwkxgsRKL+Uib1+wBN1GLu6o=\" ], \"n\": \"xmm58zzhORBJkyxcjyfFUrRO06V4PwDZT_ObroQOQDuN8KbOzqkGdZX6BkZiFPNHuWdnUp0_2Fxf2LM1z5nhyCG4Wy92rUqHL6ispNtPfWOe3mWwQlFJk_Z_87gqJZ00ss3vnSk-05j4AsgvnPoKZJtgJPAEjZ8-bBSNExpqWdHBFcqJJsLhyjE5o7hQFQplMevQLyVvrzxsY8YwZuoTZA-bUo7__vsrHUe_PyZP0-0FHRbFzwo-ArxrdFcFlEhTqjKijo7pyh8gmZkgvXG8D1Zi1Fmstnf9yiF36ZBlN-RSr-JHxPAvwU2O_aMmFhvZNJ9aOzP0dienSZo72xSiRw\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, { \"kid\": \"5841b726-4a62-4a91-9b14-2c4e774b8187_sig_rs384\", \"kty\": \"RSA\", \"use\": \"sig\", \"alg\": \"RS384\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAK29kWeoIZxzuN9D5Bi+TJOSkxSMyK+9O6sFHH9UG6KTMA0GCSqGSIb3DQEBDAUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTAwWhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtegG/5p4hXBV8BhPE7bUYgCXYnwFY9J9yVNjMI306qnN1sRrTvqH88SCLg2/sY2gWI+Y8lmqXYsLbsmCoCXMUAHU6ujqrwWZsiubucyb6wmE2yWdkSgIcT1jpepnfvm4oyKnhZVqn6hOuDx+/vBNk/RJfPibBrhJp/+uiZFc86at3JIgqXB5RqV9ryXGSXpL7tj5cST2HFU+2WzoutHRze7T3XLcA0bIiiQUfHzssxElfSbrUZRY36mpoaqm2WDMEhBEwu2B1L2Jwx76LIn7dWszwaIHkqLMy7PSl3Hit0MdO7SD5bqHnMHHmSjj+9XmYBg5oErfOKJOWAevLlksgQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQEMBQADggEBACSX/4j+sd5TGsM1e3ISJHxjDlWhvsurPQhadaDu49NdCP/9hrwo7Th48q8Q8o99DnDBOIV0AE7VORYC4xRWHXlGJV84YAQRhHi1rL8L5YWheNeR0/ibanLhaTMb4Ecw8CRJWplslKmt78bn/J1xl4cWilDTVeB+LAYrpmDJNXSx/3QHtIc2PoIKn3dE8cHhHvQ+zHmd52TxGdBR08+TqZDcwZT9XvjrOwyUkk5LIXp8Di9oqPtcDM2vqrgZna40cZAtXHzY1x6PKlwRoMSEZ+olYjjy2OlqsotORc+fbQIkLkUUnhyHTAiobZT1N55LjYkhwjXV+Ps1Qm0Q2px9uMs=\" ], \"n\": \"tegG_5p4hXBV8BhPE7bUYgCXYnwFY9J9yVNjMI306qnN1sRrTvqH88SCLg2_sY2gWI-Y8lmqXYsLbsmCoCXMUAHU6ujqrwWZsiubucyb6wmE2yWdkSgIcT1jpepnfvm4oyKnhZVqn6hOuDx-_vBNk_RJfPibBrhJp_-uiZFc86at3JIgqXB5RqV9ryXGSXpL7tj5cST2HFU-2WzoutHRze7T3XLcA0bIiiQUfHzssxElfSbrUZRY36mpoaqm2WDMEhBEwu2B1L2Jwx76LIn7dWszwaIHkqLMy7PSl3Hit0MdO7SD5bqHnMHHmSjj-9XmYBg5oErfOKJOWAevLlksgQ\", \"e\": \"AQAB\", \"x\": null, \"y\": null }, ... ... ... { \"kid\": \"e6e8ccc4-708b-4a83-bbd2-7a9e0181734f_enc_rsa-oaep\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": 1610923149000, \"x5c\": [ \"MIIDCjCCAfKgAwIBAgIhAIfkfNwuxlcdhdiAKvWrX+LbYKvZwRC9aEn9tOqCZLunMA0GCSqGSIb3DQEBCwUAMCQxIjAgBgNVBAMMGUphbnMgQXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjEwMTE1MjIzOTAyWhcNMjEwMTE3MjIzOTA5WjAkMSIwIAYDVQQDDBlKYW5zIEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw6p2QLwHKwPA+W9oTjTAkYn1iRQVXdPsNIu18Lao11Fbp0krMKSsnVcBIuO8zjsERf8b/awTN9zJQpKO3LqHHcGIjZJdAfH42CPgyUMjn6laF8iO0S+kI8RCocRLoPP2PVbqPjYD6kvK0mlSSLu+t9bU7mgEsYF5y8r05hX1ROdLUTFuHMa2g4cuD0HEEJMzewK1TzPikNiThsQv0yzwkwGZrBldWeB1E8BGWha2jwVom/Noo6vimtN8Le1XeYq5PvRVaS4AtLup4K0SaVetL0mAiCWKUTudWNDCRWB/Z4lJCJGOCCfk6bPp0TsjOcDjGkPzP05G9FFWndOpQ49UcwIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBAJ6zGYZqI4rwBJri7v3XSLvKrUgU19xLq6aik6h3DMylzHFEydnMdgyYU23GWP/rcvM1K4whhiopUcoj/FHQ0uaQV67zb6/NvCbIxiGjQs08ZcYnMtZ0zwm9hj7YeafsVQVI3qo1VdJfPWYHEW4IUfaqIlWdsj/CW1HeKWOrw0+WC1JYwD5Ka13bwYtC3jgt8yHwn3XoOhbINzFsVdRA5pfJKCvZN5IteHhpkmeOkvOlRFaPrqlGM2rukCzo2aBakC8F8SwaQje6prm2wSRJp/qjJKxKO8fMklcBT/FMD2zdYeHb4+YFRo8/CzjRNPEmMSI4LHdFkmjGDrLQYjrxOsY=\" ], \"n\": \"w6p2QLwHKwPA-W9oTjTAkYn1iRQVXdPsNIu18Lao11Fbp0krMKSsnVcBIuO8zjsERf8b_awTN9zJQpKO3LqHHcGIjZJdAfH42CPgyUMjn6laF8iO0S-kI8RCocRLoPP2PVbqPjYD6kvK0mlSSLu-t9bU7mgEsYF5y8r05hX1ROdLUTFuHMa2g4cuD0HEEJMzewK1TzPikNiThsQv0yzwkwGZrBldWeB1E8BGWha2jwVom_Noo6vimtN8Le1XeYq5PvRVaS4AtLup4K0SaVetL0mAiCWKUTudWNDCRWB_Z4lJCJGOCCfk6bPp0TsjOcDjGkPzP05G9FFWndOpQ49Ucw\", \"e\": \"AQAB\", \"x\": null, \"y\": null } ] }","title":"Get list of JSON Web Key"},{"location":"user/using-jans-cli/im/im-json-web-key/#creating-or-replacing-jwk","text":"You can add a new JWK or replace an old JWK with new value through this Interactive Mode option. When it will ask Add JwonWebKey? just press y to confirm. Fill each property with a value, keep empty to skip. kid : Unique Key Identifier [String]. kty : Cryptographic algorithm name used with the key [String]. use : Key usage, [enc, sig,..] alg : The cryptographic algorithm name that is going to be used. exp : time validation Gets list of JSON Web Key (JWK) used by server Gets list of JSON Web Key (JWK) used by server. JWK is a JSON data structure that represents a set of public keys as a JSON object [RFC4627]. --------------------------------------------------------------------------------------------------------------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/jwks.readonly \u00abJsonWebKey. \u00bb Add JsonWebKey? y \u00abThe unique identifier for the key. Type: string\u00bb kid: aabb \u00abThe family of cryptographic algorithms used with the key. Type: string\u00bb kty: RSA \u00abHow the key was meant to be used; sig represents the signature. Type: string\u00bb use: enc \u00abThe specific cryptographic algorithm used with the key. Type: string\u00bb alg: RSA-OAEP \u00abThe crv member identifies the cryptographic curve used with the key. Values defined by this specification are P-256, P-384 and P-521. Additional crv values MAY be used, provided they are understood by implementations using that Elliptic Curve key. The crv value is case sensitive. Type: string\u00bb crv: \u00abContains the token expiration timestamp. Type: integer\u00bb exp: \u00abThe x.509 certificate chain. The first entry in the array is the certificate to use for token verification; the other certificates can be used to verify this first certificate. Type: array of string separated by _,\u00bb x5c: \u00abThe modulus for the RSA public key. Type: string\u00bb n: \u00abThe exponent for the RSA public key. Type: string\u00bb e: \u00abThe x member contains the x coordinate for the elliptic curve point. It is represented as the base64url encoding of the coordinate's big endian representation. Type: string\u00bb x: \u00abThe y member contains the y coordinate for the elliptic curve point. It is represented as the base64url encoding of the coordinate's big endian representation. Type: string\u00bb y: Add another JsonWebKey? n Obtained Data: { \"keys\": [ { \"kid\": \"aabb\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": null, \"exp\": null, \"x5c\": [], \"n\": null, \"e\": null, \"x\": null, \"y\": null } ] } Continue? y Getting access token for scope https://jans.io/oauth/config/jwks.write Please wait while posting data ... { \"keys\": [ { \"kid\": \"aabb\", \"kty\": \"RSA\", \"use\": \"enc\", \"alg\": \"RSA-OAEP\", \"crv\": \"\", \"exp\": null, \"x5c\": null, \"n\": null, \"e\": null, \"x\": null, \"y\": null } ] }","title":"Creating or Replacing - JWK"},{"location":"user/using-jans-cli/im/im-json-web-key/#update-an-existing-jwk-configuration","text":"Just choose this option and fill the value for op , path , and value to patch JSON Web Key.","title":"Update an Existing JWK Configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/","text":"LDAP Configuration # Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI, the Following list of actions can be performed in LDAP. Database - LDAP configuration ----------------------------- 1 Gets list of existing LDAP configurations 2 Adds a new LDAP configuration 3 Updates LDAP configuration 4 Gets an LDAP configuration by name 5 Deletes an LDAP configuration 6 Partially modify an LDAP configuration 7 Tests an LDAP configuration Gets List of Existing LDAP Configuration # To get a list of existing LDAP configurations, select option 1 and press enter, you will get a list of existing LDAP configurations in your Janssen server. Gets list of existing LDAP configurations ----------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/database/ldap.readonly [ { \"configId\": \"auth_ldap_server\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"gD63aUTvvS4=\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } ] Adding new LDAP Configuration # To add a new LDAP configuration, choose option 2 and add the following properties: { \"configId\":, \"bindDN\": , \"bindPassword\":, \"servers\": [], \"maxConnections\": 2, \"useSSL\": false, \"baseDNs\": [], \"primaryKey\":, \"localPrimaryKey\":, \"useAnonymousBind\": false, \"enabled\": false, \"version\": null, \"level\": null } Then enter y to confirm. Update an Existing LDAP configuration # To update an existing LDAP configuration, select option 3 and enter the LDAP configuration name. If it matches to the existing configuration then It will ask to enter a value for each properties. Delete an Existing LDAP configuration # To delete an existing ldap configuration, enter a name of an existing ldap configuration and enter yes/y to confirm.","title":"LDAP Configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/#ldap-configuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Using Janssen CLI, the Following list of actions can be performed in LDAP. Database - LDAP configuration ----------------------------- 1 Gets list of existing LDAP configurations 2 Adds a new LDAP configuration 3 Updates LDAP configuration 4 Gets an LDAP configuration by name 5 Deletes an LDAP configuration 6 Partially modify an LDAP configuration 7 Tests an LDAP configuration","title":"LDAP Configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/#gets-list-of-existing-ldap-configuration","text":"To get a list of existing LDAP configurations, select option 1 and press enter, you will get a list of existing LDAP configurations in your Janssen server. Gets list of existing LDAP configurations ----------------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/database/ldap.readonly [ { \"configId\": \"auth_ldap_server\", \"bindDN\": \"cn=directory manager\", \"bindPassword\": \"gD63aUTvvS4=\", \"servers\": [ \"localhost:1636\" ], \"maxConnections\": 1000, \"useSSL\": true, \"baseDNs\": [ \"ou=people,o=jans\" ], \"primaryKey\": \"uid\", \"localPrimaryKey\": \"uid\", \"useAnonymousBind\": false, \"enabled\": false, \"version\": 0, \"level\": 0 } ]","title":"Gets List of Existing LDAP Configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/#adding-new-ldap-configuration","text":"To add a new LDAP configuration, choose option 2 and add the following properties: { \"configId\":, \"bindDN\": , \"bindPassword\":, \"servers\": [], \"maxConnections\": 2, \"useSSL\": false, \"baseDNs\": [], \"primaryKey\":, \"localPrimaryKey\":, \"useAnonymousBind\": false, \"enabled\": false, \"version\": null, \"level\": null } Then enter y to confirm.","title":"Adding new LDAP Configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/#update-an-existing-ldap-configuration","text":"To update an existing LDAP configuration, select option 3 and enter the LDAP configuration name. If it matches to the existing configuration then It will ask to enter a value for each properties.","title":"Update an Existing LDAP configuration"},{"location":"user/using-jans-cli/im/im-ldap-configuration/#delete-an-existing-ldap-configuration","text":"To delete an existing ldap configuration, enter a name of an existing ldap configuration and enter yes/y to confirm.","title":"Delete an Existing LDAP configuration"},{"location":"user/using-jans-cli/im/im-oauth-scopes/","text":"OAuth Scopes # Prerequisite: Know how to use the Janssen CLI in interactive mode In OAuth, scopes are used to specify the extent of access. For an OpenID Connect sign-in flow, scopes correspond to the release of user claims. jans-cli supports the following operations through Interactive Mode. OAuth - Scopes -------------- 1 Gets list of Scopes 2 Create Scope 3 Updates existing Scope 4 Get Scope by Inum 5 Delete Scope 6 Update modified attributes of existing Scope by Inum Selection: Gets list of Scopes # To view the current list of scopes of the Janssen Server, choose the first option from the following menu. It will ask to enter type , limit & pattern to filter in searching. You may skip by pressing 'Enter' key to get all the scopes of the server. In my case, I have set limit upto 5. \u00abScope type. Type: string\u00bb type: \u00abSearch size - max size of the results to return. Type: integer\u00bb limit [50]: 5 \u00abSearch pattern. Type: string\u00bb pattern: Calling Api with parameters: {'limit': 5} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/scopes.readonly [ { \"dn\": \"inum=F0C4,ou=scopes,o=jans\", \"inum\": \"F0C4\", \"displayName\": \"authenticate_openid_connect\", \"id\": \"openid\", \"iconUrl\": null, \"description\": \"Authenticate using OpenID Connect.\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=43F1,ou=scopes,o=jans\", \"inum\": \"43F1\", \"displayName\": \"view_profile\", \"id\": \"profile\", \"iconUrl\": null, \"description\": \"View your basic profile info.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=2B29,ou=attributes,o=jans\", \"inum=0C85,ou=attributes,o=jans\", \"inum=B4B0,ou=attributes,o=jans\", \"inum=A0E8,ou=attributes,o=jans\", \"inum=5EC6,ou=attributes,o=jans\", \"inum=B52A,ou=attributes,o=jans\", \"inum=64A0,ou=attributes,o=jans\", \"inum=EC3A,ou=attributes,o=jans\", \"inum=3B47,ou=attributes,o=jans\", \"inum=3692,ou=attributes,o=jans\", \"inum=98FC,ou=attributes,o=jans\", \"inum=A901,ou=attributes,o=jans\", \"inum=36D9,ou=attributes,o=jans\", \"inum=BE64,ou=attributes,o=jans\", \"inum=6493,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=D491,ou=scopes,o=jans\", \"inum\": \"D491\", \"displayName\": \"view_phone_number\", \"id\": \"phone\", \"iconUrl\": null, \"description\": \"View your phone number.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=B17A,ou=attributes,o=jans\", \"inum=0C18,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=C17A,ou=scopes,o=jans\", \"inum\": \"C17A\", \"displayName\": \"view_address\", \"id\": \"address\", \"iconUrl\": null, \"description\": \"View your address.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=27DB,ou=attributes,o=jans\", \"inum=2A3D,ou=attributes,o=jans\", \"inum=6609,ou=attributes,o=jans\", \"inum=6EEB,ou=attributes,o=jans\", \"inum=BCE8,ou=attributes,o=jans\", \"inum=D90B,ou=attributes,o=jans\", \"inum=E6B8,ou=attributes,o=jans\", \"inum=E999,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=764C,ou=scopes,o=jans\", \"inum\": \"764C\", \"displayName\": \"view_email_address\", \"id\": \"email\", \"iconUrl\": null, \"description\": \"View your email address.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=8F88,ou=attributes,o=jans\", \"inum=CAE3,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } ] Selection: Creating Scopes # You can create a scope through the command line interface. It will ask to enter value for each property. Selection: 2 \u00abA human-readable name of the scope. Type: string\u00bb displayName: testScope \u00abThe base64url encoded id. Type: string\u00bb id: tScope \u00abA human-readable string describing the scope. Type: string\u00bb description: creating scope \u00abThe scopes type associated with Access Tokens determine what resources will. Type: string\u00bb scopeType: openid Populate optional fields? n Obtained Data: { \"dn\": null, \"inum\": null, \"displayName\": \"testScope\", \"id\": \"tScope\", \"iconUrl\": null, \"description\": \"creating scope\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": null, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": null, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } Continue? y Getting access token for scope https://jans.io/oauth/config/scopes.write Please wait while posting data ... { \"dn\": \"inum=070daa9e-4a8f-423a-8681-f578673a2781,ou=scopes,o=jans\", \"inum\": \"070daa9e-4a8f-423a-8681-f578673a2781\", \"displayName\": \"testScope\", \"id\": \"tScope\", \"iconUrl\": null, \"description\": \"creating scope\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": null, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } Selection:","title":"OAuth Scopes"},{"location":"user/using-jans-cli/im/im-oauth-scopes/#oauth-scopes","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode In OAuth, scopes are used to specify the extent of access. For an OpenID Connect sign-in flow, scopes correspond to the release of user claims. jans-cli supports the following operations through Interactive Mode. OAuth - Scopes -------------- 1 Gets list of Scopes 2 Create Scope 3 Updates existing Scope 4 Get Scope by Inum 5 Delete Scope 6 Update modified attributes of existing Scope by Inum Selection:","title":"OAuth Scopes"},{"location":"user/using-jans-cli/im/im-oauth-scopes/#gets-list-of-scopes","text":"To view the current list of scopes of the Janssen Server, choose the first option from the following menu. It will ask to enter type , limit & pattern to filter in searching. You may skip by pressing 'Enter' key to get all the scopes of the server. In my case, I have set limit upto 5. \u00abScope type. Type: string\u00bb type: \u00abSearch size - max size of the results to return. Type: integer\u00bb limit [50]: 5 \u00abSearch pattern. Type: string\u00bb pattern: Calling Api with parameters: {'limit': 5} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/scopes.readonly [ { \"dn\": \"inum=F0C4,ou=scopes,o=jans\", \"inum\": \"F0C4\", \"displayName\": \"authenticate_openid_connect\", \"id\": \"openid\", \"iconUrl\": null, \"description\": \"Authenticate using OpenID Connect.\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": true, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=43F1,ou=scopes,o=jans\", \"inum\": \"43F1\", \"displayName\": \"view_profile\", \"id\": \"profile\", \"iconUrl\": null, \"description\": \"View your basic profile info.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=2B29,ou=attributes,o=jans\", \"inum=0C85,ou=attributes,o=jans\", \"inum=B4B0,ou=attributes,o=jans\", \"inum=A0E8,ou=attributes,o=jans\", \"inum=5EC6,ou=attributes,o=jans\", \"inum=B52A,ou=attributes,o=jans\", \"inum=64A0,ou=attributes,o=jans\", \"inum=EC3A,ou=attributes,o=jans\", \"inum=3B47,ou=attributes,o=jans\", \"inum=3692,ou=attributes,o=jans\", \"inum=98FC,ou=attributes,o=jans\", \"inum=A901,ou=attributes,o=jans\", \"inum=36D9,ou=attributes,o=jans\", \"inum=BE64,ou=attributes,o=jans\", \"inum=6493,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=D491,ou=scopes,o=jans\", \"inum\": \"D491\", \"displayName\": \"view_phone_number\", \"id\": \"phone\", \"iconUrl\": null, \"description\": \"View your phone number.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=B17A,ou=attributes,o=jans\", \"inum=0C18,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=C17A,ou=scopes,o=jans\", \"inum\": \"C17A\", \"displayName\": \"view_address\", \"id\": \"address\", \"iconUrl\": null, \"description\": \"View your address.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=27DB,ou=attributes,o=jans\", \"inum=2A3D,ou=attributes,o=jans\", \"inum=6609,ou=attributes,o=jans\", \"inum=6EEB,ou=attributes,o=jans\", \"inum=BCE8,ou=attributes,o=jans\", \"inum=D90B,ou=attributes,o=jans\", \"inum=E6B8,ou=attributes,o=jans\", \"inum=E999,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": true, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null }, { \"dn\": \"inum=764C,ou=scopes,o=jans\", \"inum\": \"764C\", \"displayName\": \"view_email_address\", \"id\": \"email\", \"iconUrl\": null, \"description\": \"View your email address.\", \"scopeType\": \"openid\", \"claims\": [ \"inum=8F88,ou=attributes,o=jans\", \"inum=CAE3,ou=attributes,o=jans\" ], \"defaultScope\": false, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } ] Selection:","title":"Gets list of Scopes"},{"location":"user/using-jans-cli/im/im-oauth-scopes/#creating-scopes","text":"You can create a scope through the command line interface. It will ask to enter value for each property. Selection: 2 \u00abA human-readable name of the scope. Type: string\u00bb displayName: testScope \u00abThe base64url encoded id. Type: string\u00bb id: tScope \u00abA human-readable string describing the scope. Type: string\u00bb description: creating scope \u00abThe scopes type associated with Access Tokens determine what resources will. Type: string\u00bb scopeType: openid Populate optional fields? n Obtained Data: { \"dn\": null, \"inum\": null, \"displayName\": \"testScope\", \"id\": \"tScope\", \"iconUrl\": null, \"description\": \"creating scope\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": null, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": null, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } Continue? y Getting access token for scope https://jans.io/oauth/config/scopes.write Please wait while posting data ... { \"dn\": \"inum=070daa9e-4a8f-423a-8681-f578673a2781,ou=scopes,o=jans\", \"inum\": \"070daa9e-4a8f-423a-8681-f578673a2781\", \"displayName\": \"testScope\", \"id\": \"tScope\", \"iconUrl\": null, \"description\": \"creating scope\", \"scopeType\": \"openid\", \"claims\": null, \"defaultScope\": null, \"groupClaims\": null, \"dynamicScopeScripts\": null, \"umaAuthorizationPolicies\": null, \"attributes\": { \"spontaneousClientId\": null, \"spontaneousClientScopes\": null, \"showInConfigurationEndpoint\": true }, \"umaType\": false, \"deletable\": false, \"expirationDate\": null } Selection:","title":"Creating Scopes"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/","text":"OpenID Connect Configuration # Prerequisite: Know how to use the Janssen CLI in interactive mode OpenID Connect Interactive Mode supports the following list of actions: OAuth - OpenID Connect - Clients -------------------------------- 1 Gets list of OpenID Connect clients 2 Create new OpenId connect client 3 Update OpenId Connect client 4 Get OpenId Connect Client by Inum 5 Delete OpenId Connect client 6 Update modified properties of OpenId Connect client by Inum Using Janssen CLI, the Administrator can easily create/update/delete OpenID Connect without any interruption. Get list of OpenID Connect clients # By selecting option '1' you will get a list of OpenID Connect clients. You may enter limit[50] and pattern to filter in searching. Gets list of OpenID Connect clients ----------------------------------- \u00abSearch size - max size of the results to return. Type: integer\u00bb limit [50]: \u00abSearch pattern. Type: string\u00bb pattern: Calling Api with parameters: {'limit': 50} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly [ { \"dn\": \"inum=1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805,ou=clients,o=jans\", \"inum\": \"1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805\", \"clientSecret\": \"KfwZeAfq4jrL\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/admin-ui\", \"http//:localhost:4100\" ], \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1800.F6E877,ou=scopes,o=jans\", \"inum=1800.D4F3E7,ou=scopes,o=jans\", \"inum=1800.2FD7EF,ou=scopes,o=jans\", \"inum=1800.97B23C,ou=scopes,o=jans\", \"inum=1800.8FC2C7,ou=scopes,o=jans\", \"inum=1800.1FFDF2,ou=scopes,o=jans\", \"inum=1800.5CF44C,ou=scopes,o=jans\", \"inum=1800.CCA518,ou=scopes,o=jans\", \"inum=1800.E62D6E,ou=scopes,o=jans\", \"inum=1800.11CB33,ou=scopes,o=jans\", \"inum=1800.781FA2,ou=scopes,o=jans\", \"inum=1800.ADAD8F,ou=scopes,o=jans\", \"inum=1800.40F22F,ou=scopes,o=jans\", \"inum=1800.7619BA,ou=scopes,o=jans\", \"inum=1800.E0DAF5,ou=scopes,o=jans\", \"inum=1800.7F45B0,ou=scopes,o=jans\", \"inum=1800.778C57,ou=scopes,o=jans\", \"inum=1800.E39293,ou=scopes,o=jans\", \"inum=1800.939483,ou=scopes,o=jans\", \"inum=1800.0ED2E8,ou=scopes,o=jans\", \"inum=1800.66CA59,ou=scopes,o=jans\", \"inum=1800.A4DBE5,ou=scopes,o=jans\", \"inum=1800.9AF358,ou=scopes,o=jans\", \"inum=1800.478CCF,ou=scopes,o=jans\", \"inum=1800.450A9A,ou=scopes,o=jans\", \"inum=1800.27A193,ou=scopes,o=jans\", \"inum=1800.3971D5,ou=scopes,o=jans\", \"inum=1800.891693,ou=scopes,o=jans\", \"inum=1800.A35DFD,ou=scopes,o=jans\", \"inum=1800.3516DE,ou=scopes,o=jans\", \"inum=F0C4,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f,ou=clients,o=jans\", \"inum\": \"1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f\", \"clientSecret\": \"4OJLToBXav0P\", \"frontChannelLogoutUri\": \"https://testjans.gluu.com/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/identity/scim/auth\", \"https://testjans.gluu.com/identity/authcode.htm\", \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.gluu.com/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1201.d71e6b84-b637-4e26-b8d3-34c80934c097,ou=clients,o=jans\", \"inum\": \"1201.d71e6b84-b637-4e26-b8d3-34c80934c097\", \"clientSecret\": \"0vFoEhc7Zut2\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1200.841184,ou=scopes,o=jans\", \"inum=1200.98DDA5,ou=scopes,o=jans\", \"inum=1200.F40A49,ou=scopes,o=jans\", \"inum=1200.B609F0,ou=scopes,o=jans\", \"inum=1200.492980,ou=scopes,o=jans\", \"inum=1200.F7EC4A,ou=scopes,o=jans\", \"inum=1200.280C97,ou=scopes,o=jans\", \"inum=1200.E236BB,ou=scopes,o=jans\", \"inum=1200.DC0FDE,ou=scopes,o=jans\", \"inum=1200.2483ED,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } ] Selection: Create a New OpenID Client # To create a new OpenID client, you need to enter '2' from OpenID Menu. It will ask to enter below information: frontChannelLogoutSessionRequired[false, true] applicationType[web, native] clientName subjectType[pairwise, public] includeClaimsInIdToken[false, true] Populate optional fields?[y, n] If you enter y to Populate optional fields? then you will get a lot of optional fields are listed below: Populate optional fields? y Optional Fields: 1 clientSecret 2 frontChannelLogoutUri 3 registrationAccessToken 4 clientIdIssuedAt 5 clientSecretExpiresAt 6 redirectUris 7 claimRedirectUris 8 responseTypes 9 grantTypes 10 contacts 11 idTokenTokenBindingCnf 12 logoUri 13 clientUri 14 policyUri 15 tosUri 16 jwksUri 17 jwks 18 sectorIdentifierUri 19 idTokenSignedResponseAlg 20 idTokenEncryptedResponseAlg 21 idTokenEncryptedResponseEnc 22 userInfoSignedResponseAlg 23 userInfoEncryptedResponseAlg 24 userInfoEncryptedResponseEnc 25 requestObjectSigningAlg 26 requestObjectEncryptionAlg 27 requestObjectEncryptionEnc 28 tokenEndpointAuthMethod 29 tokenEndpointAuthSigningAlg 30 defaultMaxAge 31 requireAuthTime 32 defaultAcrValues 33 initiateLoginUri 34 postLogoutRedirectUris 35 requestUris 36 scopes 37 claims 38 trustedClient 39 lastAccessTime 40 lastLogonTime 41 persistClientAuthorizations 42 refreshTokenLifetime 43 accessTokenLifetime 44 customAttributes 45 customObjectClasses 46 rptAsJwt 47 accessTokenAsJwt 48 accessTokenSigningAlg 49 disabled 50 authorizedOrigins 51 softwareId 52 softwareVersion 53 softwareStatement 54 attributes 55 backchannelTokenDeliveryMode 56 backchannelClientNotificationEndpoint 57 backchannelAuthenticationRequestSigningAlg 58 backchannelUserCodeParameter 59 expirationDate 60 deletable 61 jansId \u00abc: continue, #: populate filed. \u00bb Selection: 1 \u00abThe client secret. The client MAY omit the parameter if the client secret is an empty string. Type: string\u00bb clientSecret: aabbccdd \u00abc: continue, #: populate filed. \u00bb Selection: c Obtained Data: { \"dn\": null, \"inum\": null, \"clientSecret\": \"aabbccdd\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": null, \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": null, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": null, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": null, \"customObjectClasses\": null, \"rptAsJwt\": null, \"accessTokenAsJwt\": null, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": null, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Continue? y Getting access token for scope https://jans.io/oauth/config/openid/clients.write Please wait while posting data ... { \"dn\": \"inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae,ou=clients,o=jans\", \"inum\": \"1929a64c-6f67-4399-bdd3-6a8d44cc04ae\", \"clientSecret\": \"B3ziSqU8gWTAXICdYfNxw2cP4LmwDqrG1koRqzFxQc0=\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Selection: Update an OpenID Client by its inum # If anything you want to update of an OpenID client, you can choose option '3' and enter the inum of the OpenID client. Here I've used the inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae of the above OpenID client. After then, You will get a list of fields to choose which one you are going to update. Here is what you can see in return: Get OpenId Connect Client by Inum --------------------------------- \u00abinum. Type: string\u00bb inum: 1929a64c-6f67-4399-bdd3-6a8d44cc04ae Calling Api with parameters: {'inum': '1929a64c-6f67-4399-bdd3-6a8d44cc04ae'} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly Fields: 1 accessTokenAsJwt 2 accessTokenLifetime 3 accessTokenSigningAlg 4 applicationType 5 attributes 6 authorizedOrigins 7 backchannelAuthenticationRequestSigningAlg 8 backchannelClientNotificationEndpoint 9 backchannelTokenDeliveryMode 10 backchannelUserCodeParameter 11 claimRedirectUris 12 claims 13 clientIdIssuedAt 14 clientName 15 clientSecret 16 clientSecretExpiresAt 17 clientUri 18 contacts 19 customAttributes 20 customObjectClasses 21 defaultAcrValues 22 defaultMaxAge 23 deletable 24 disabled 25 expirationDate 26 frontChannelLogoutSessionRequired 27 frontChannelLogoutUri 28 grantTypes 29 idTokenEncryptedResponseAlg 30 idTokenEncryptedResponseEnc 31 idTokenSignedResponseAlg 32 idTokenTokenBindingCnf 33 includeClaimsInIdToken 34 initiateLoginUri 35 inum 36 jansId 37 jwks 38 jwksUri 39 lastAccessTime 40 lastLogonTime 41 logoUri 42 persistClientAuthorizations 43 policyUri 44 postLogoutRedirectUris 45 redirectUris 46 refreshTokenLifetime 47 registrationAccessToken 48 requestObjectEncryptionAlg 49 requestObjectEncryptionEnc 50 requestObjectSigningAlg 51 requestUris 52 requireAuthTime 53 responseTypes 54 rptAsJwt 55 scopes 56 sectorIdentifierUri 57 softwareId 58 softwareStatement 59 softwareVersion 60 subjectType 61 tokenEndpointAuthMethod 62 tokenEndpointAuthSigningAlg 63 tosUri 64 trustedClient 65 userInfoEncryptedResponseAlg 66 userInfoEncryptedResponseEnc 67 userInfoSignedResponseAlg \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: q to quit v to view each attribute with updated data l to get list of fields # to update filed attribute id number of an attribute to identify which one you want to update Get OpenID client by its inum # inum is a unique identity of an OpenID client. You can use inum of an OpenID client to get more details. In my case, I'm using the inum of the above created OpenID client: Get OpenId Connect Client by Inum --------------------------------- \u00abinum. Type: string\u00bb inum: 1929a64c-6f67-4399-bdd3-6a8d44cc04ae Calling Api with parameters: {'inum': '1929a64c-6f67-4399-bdd3-6a8d44cc04ae'} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly { \"dn\": \"inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae,ou=clients,o=jans\", \"inum\": \"1929a64c-6f67-4399-bdd3-6a8d44cc04ae\", \"clientSecret\": \"CpTCvlZZsQDWShGrMXFBzQ==\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Selection:","title":"OpenID Connect Configuration"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/#openid-connect-configuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode OpenID Connect Interactive Mode supports the following list of actions: OAuth - OpenID Connect - Clients -------------------------------- 1 Gets list of OpenID Connect clients 2 Create new OpenId connect client 3 Update OpenId Connect client 4 Get OpenId Connect Client by Inum 5 Delete OpenId Connect client 6 Update modified properties of OpenId Connect client by Inum Using Janssen CLI, the Administrator can easily create/update/delete OpenID Connect without any interruption.","title":"OpenID Connect Configuration"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/#get-list-of-openid-connect-clients","text":"By selecting option '1' you will get a list of OpenID Connect clients. You may enter limit[50] and pattern to filter in searching. Gets list of OpenID Connect clients ----------------------------------- \u00abSearch size - max size of the results to return. Type: integer\u00bb limit [50]: \u00abSearch pattern. Type: string\u00bb pattern: Calling Api with parameters: {'limit': 50} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly [ { \"dn\": \"inum=1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805,ou=clients,o=jans\", \"inum\": \"1801.d361f68d-8200-4ba2-a0bb-ca7fea79e805\", \"clientSecret\": \"KfwZeAfq4jrL\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/admin-ui\", \"http//:localhost:4100\" ], \"claimRedirectUris\": null, \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"refresh_token\", \"client_credentials\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"Jans Config Api Client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": \"RS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1800.F6E877,ou=scopes,o=jans\", \"inum=1800.D4F3E7,ou=scopes,o=jans\", \"inum=1800.2FD7EF,ou=scopes,o=jans\", \"inum=1800.97B23C,ou=scopes,o=jans\", \"inum=1800.8FC2C7,ou=scopes,o=jans\", \"inum=1800.1FFDF2,ou=scopes,o=jans\", \"inum=1800.5CF44C,ou=scopes,o=jans\", \"inum=1800.CCA518,ou=scopes,o=jans\", \"inum=1800.E62D6E,ou=scopes,o=jans\", \"inum=1800.11CB33,ou=scopes,o=jans\", \"inum=1800.781FA2,ou=scopes,o=jans\", \"inum=1800.ADAD8F,ou=scopes,o=jans\", \"inum=1800.40F22F,ou=scopes,o=jans\", \"inum=1800.7619BA,ou=scopes,o=jans\", \"inum=1800.E0DAF5,ou=scopes,o=jans\", \"inum=1800.7F45B0,ou=scopes,o=jans\", \"inum=1800.778C57,ou=scopes,o=jans\", \"inum=1800.E39293,ou=scopes,o=jans\", \"inum=1800.939483,ou=scopes,o=jans\", \"inum=1800.0ED2E8,ou=scopes,o=jans\", \"inum=1800.66CA59,ou=scopes,o=jans\", \"inum=1800.A4DBE5,ou=scopes,o=jans\", \"inum=1800.9AF358,ou=scopes,o=jans\", \"inum=1800.478CCF,ou=scopes,o=jans\", \"inum=1800.450A9A,ou=scopes,o=jans\", \"inum=1800.27A193,ou=scopes,o=jans\", \"inum=1800.3971D5,ou=scopes,o=jans\", \"inum=1800.891693,ou=scopes,o=jans\", \"inum=1800.A35DFD,ou=scopes,o=jans\", \"inum=1800.3516DE,ou=scopes,o=jans\", \"inum=F0C4,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": true, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f,ou=clients,o=jans\", \"inum\": \"1001.0e964ce7-7670-44a4-a2d1-d0a5f689a34f\", \"clientSecret\": \"4OJLToBXav0P\", \"frontChannelLogoutUri\": \"https://testjans.gluu.com/identity/ssologout.htm\", \"frontChannelLogoutSessionRequired\": true, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": [ \"https://testjans.gluu.com/identity/scim/auth\", \"https://testjans.gluu.com/identity/authcode.htm\", \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims?authentication=true\" ], \"claimRedirectUris\": [ \"https://testjans.gluu.com/jans-auth/restv1/uma/gather_claims\" ], \"responseTypes\": [ \"code\" ], \"grantTypes\": [ \"authorization_code\", \"implicit\", \"refresh_token\" ], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"oxTrust Admin GUI\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"public\", \"idTokenSignedResponseAlg\": \"HS256\", \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": [ \"https://testjans.gluu.com/identity/finishlogout.htm\" ], \"requestUris\": null, \"scopes\": [ \"inum=F0C4,ou=scopes,o=jans\", \"inum=10B2,ou=scopes,o=jans\", \"inum=764C,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": true, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null }, { \"dn\": \"inum=1201.d71e6b84-b637-4e26-b8d3-34c80934c097,ou=clients,o=jans\", \"inum\": \"1201.d71e6b84-b637-4e26-b8d3-34c80934c097\", \"clientSecret\": \"0vFoEhc7Zut2\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [ \"client_credentials\" ], \"applicationType\": \"native\", \"contacts\": null, \"clientName\": \"SCIM client\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": \"client_secret_basic\", \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": [ \"inum=1200.841184,ou=scopes,o=jans\", \"inum=1200.98DDA5,ou=scopes,o=jans\", \"inum=1200.F40A49,ou=scopes,o=jans\", \"inum=1200.B609F0,ou=scopes,o=jans\", \"inum=1200.492980,ou=scopes,o=jans\", \"inum=1200.F7EC4A,ou=scopes,o=jans\", \"inum=1200.280C97,ou=scopes,o=jans\", \"inum=1200.E236BB,ou=scopes,o=jans\", \"inum=1200.DC0FDE,ou=scopes,o=jans\", \"inum=1200.2483ED,ou=scopes,o=jans\" ], \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": \"RS256\", \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } ] Selection:","title":"Get list of OpenID Connect clients"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/#create-a-new-openid-client","text":"To create a new OpenID client, you need to enter '2' from OpenID Menu. It will ask to enter below information: frontChannelLogoutSessionRequired[false, true] applicationType[web, native] clientName subjectType[pairwise, public] includeClaimsInIdToken[false, true] Populate optional fields?[y, n] If you enter y to Populate optional fields? then you will get a lot of optional fields are listed below: Populate optional fields? y Optional Fields: 1 clientSecret 2 frontChannelLogoutUri 3 registrationAccessToken 4 clientIdIssuedAt 5 clientSecretExpiresAt 6 redirectUris 7 claimRedirectUris 8 responseTypes 9 grantTypes 10 contacts 11 idTokenTokenBindingCnf 12 logoUri 13 clientUri 14 policyUri 15 tosUri 16 jwksUri 17 jwks 18 sectorIdentifierUri 19 idTokenSignedResponseAlg 20 idTokenEncryptedResponseAlg 21 idTokenEncryptedResponseEnc 22 userInfoSignedResponseAlg 23 userInfoEncryptedResponseAlg 24 userInfoEncryptedResponseEnc 25 requestObjectSigningAlg 26 requestObjectEncryptionAlg 27 requestObjectEncryptionEnc 28 tokenEndpointAuthMethod 29 tokenEndpointAuthSigningAlg 30 defaultMaxAge 31 requireAuthTime 32 defaultAcrValues 33 initiateLoginUri 34 postLogoutRedirectUris 35 requestUris 36 scopes 37 claims 38 trustedClient 39 lastAccessTime 40 lastLogonTime 41 persistClientAuthorizations 42 refreshTokenLifetime 43 accessTokenLifetime 44 customAttributes 45 customObjectClasses 46 rptAsJwt 47 accessTokenAsJwt 48 accessTokenSigningAlg 49 disabled 50 authorizedOrigins 51 softwareId 52 softwareVersion 53 softwareStatement 54 attributes 55 backchannelTokenDeliveryMode 56 backchannelClientNotificationEndpoint 57 backchannelAuthenticationRequestSigningAlg 58 backchannelUserCodeParameter 59 expirationDate 60 deletable 61 jansId \u00abc: continue, #: populate filed. \u00bb Selection: 1 \u00abThe client secret. The client MAY omit the parameter if the client secret is an empty string. Type: string\u00bb clientSecret: aabbccdd \u00abc: continue, #: populate filed. \u00bb Selection: c Obtained Data: { \"dn\": null, \"inum\": null, \"clientSecret\": \"aabbccdd\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": null, \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": null, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": null, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": null, \"customObjectClasses\": null, \"rptAsJwt\": null, \"accessTokenAsJwt\": null, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": null, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Continue? y Getting access token for scope https://jans.io/oauth/config/openid/clients.write Please wait while posting data ... { \"dn\": \"inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae,ou=clients,o=jans\", \"inum\": \"1929a64c-6f67-4399-bdd3-6a8d44cc04ae\", \"clientSecret\": \"B3ziSqU8gWTAXICdYfNxw2cP4LmwDqrG1koRqzFxQc0=\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Selection:","title":"Create a New OpenID Client"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/#update-an-openid-client-by-its-inum","text":"If anything you want to update of an OpenID client, you can choose option '3' and enter the inum of the OpenID client. Here I've used the inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae of the above OpenID client. After then, You will get a list of fields to choose which one you are going to update. Here is what you can see in return: Get OpenId Connect Client by Inum --------------------------------- \u00abinum. Type: string\u00bb inum: 1929a64c-6f67-4399-bdd3-6a8d44cc04ae Calling Api with parameters: {'inum': '1929a64c-6f67-4399-bdd3-6a8d44cc04ae'} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly Fields: 1 accessTokenAsJwt 2 accessTokenLifetime 3 accessTokenSigningAlg 4 applicationType 5 attributes 6 authorizedOrigins 7 backchannelAuthenticationRequestSigningAlg 8 backchannelClientNotificationEndpoint 9 backchannelTokenDeliveryMode 10 backchannelUserCodeParameter 11 claimRedirectUris 12 claims 13 clientIdIssuedAt 14 clientName 15 clientSecret 16 clientSecretExpiresAt 17 clientUri 18 contacts 19 customAttributes 20 customObjectClasses 21 defaultAcrValues 22 defaultMaxAge 23 deletable 24 disabled 25 expirationDate 26 frontChannelLogoutSessionRequired 27 frontChannelLogoutUri 28 grantTypes 29 idTokenEncryptedResponseAlg 30 idTokenEncryptedResponseEnc 31 idTokenSignedResponseAlg 32 idTokenTokenBindingCnf 33 includeClaimsInIdToken 34 initiateLoginUri 35 inum 36 jansId 37 jwks 38 jwksUri 39 lastAccessTime 40 lastLogonTime 41 logoUri 42 persistClientAuthorizations 43 policyUri 44 postLogoutRedirectUris 45 redirectUris 46 refreshTokenLifetime 47 registrationAccessToken 48 requestObjectEncryptionAlg 49 requestObjectEncryptionEnc 50 requestObjectSigningAlg 51 requestUris 52 requireAuthTime 53 responseTypes 54 rptAsJwt 55 scopes 56 sectorIdentifierUri 57 softwareId 58 softwareStatement 59 softwareVersion 60 subjectType 61 tokenEndpointAuthMethod 62 tokenEndpointAuthSigningAlg 63 tosUri 64 trustedClient 65 userInfoEncryptedResponseAlg 66 userInfoEncryptedResponseEnc 67 userInfoSignedResponseAlg \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: q to quit v to view each attribute with updated data l to get list of fields # to update filed attribute id number of an attribute to identify which one you want to update","title":"Update an OpenID Client by its inum"},{"location":"user/using-jans-cli/im/im-openid-connect-clients/#get-openid-client-by-its-inum","text":"inum is a unique identity of an OpenID client. You can use inum of an OpenID client to get more details. In my case, I'm using the inum of the above created OpenID client: Get OpenId Connect Client by Inum --------------------------------- \u00abinum. Type: string\u00bb inum: 1929a64c-6f67-4399-bdd3-6a8d44cc04ae Calling Api with parameters: {'inum': '1929a64c-6f67-4399-bdd3-6a8d44cc04ae'} Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/openid/clients.readonly { \"dn\": \"inum=1929a64c-6f67-4399-bdd3-6a8d44cc04ae,ou=clients,o=jans\", \"inum\": \"1929a64c-6f67-4399-bdd3-6a8d44cc04ae\", \"clientSecret\": \"CpTCvlZZsQDWShGrMXFBzQ==\", \"frontChannelLogoutUri\": null, \"frontChannelLogoutSessionRequired\": false, \"registrationAccessToken\": null, \"clientIdIssuedAt\": null, \"clientSecretExpiresAt\": null, \"redirectUris\": null, \"claimRedirectUris\": null, \"responseTypes\": null, \"grantTypes\": [], \"applicationType\": \"web\", \"contacts\": null, \"clientName\": \"newOID\", \"idTokenTokenBindingCnf\": null, \"logoUri\": null, \"clientUri\": null, \"policyUri\": null, \"tosUri\": null, \"jwksUri\": null, \"jwks\": null, \"sectorIdentifierUri\": null, \"subjectType\": \"pairwise\", \"idTokenSignedResponseAlg\": null, \"idTokenEncryptedResponseAlg\": null, \"idTokenEncryptedResponseEnc\": null, \"userInfoSignedResponseAlg\": null, \"userInfoEncryptedResponseAlg\": null, \"userInfoEncryptedResponseEnc\": null, \"requestObjectSigningAlg\": null, \"requestObjectEncryptionAlg\": null, \"requestObjectEncryptionEnc\": null, \"tokenEndpointAuthMethod\": null, \"tokenEndpointAuthSigningAlg\": null, \"defaultMaxAge\": null, \"requireAuthTime\": false, \"defaultAcrValues\": null, \"initiateLoginUri\": null, \"postLogoutRedirectUris\": null, \"requestUris\": null, \"scopes\": null, \"claims\": null, \"trustedClient\": false, \"lastAccessTime\": null, \"lastLogonTime\": null, \"persistClientAuthorizations\": false, \"includeClaimsInIdToken\": false, \"refreshTokenLifetime\": null, \"accessTokenLifetime\": null, \"customAttributes\": [], \"customObjectClasses\": [ \"top\" ], \"rptAsJwt\": false, \"accessTokenAsJwt\": false, \"accessTokenSigningAlg\": null, \"disabled\": false, \"authorizedOrigins\": null, \"softwareId\": null, \"softwareVersion\": null, \"softwareStatement\": null, \"attributes\": { \"tlsClientAuthSubjectDn\": null, \"runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims\": false, \"keepClientAuthorizationAfterExpiration\": false, \"allowSpontaneousScopes\": false, \"spontaneousScopes\": null, \"spontaneousScopeScriptDns\": null, \"backchannelLogoutUri\": null, \"backchannelLogoutSessionRequired\": false, \"additionalAudience\": null, \"postAuthnScripts\": null, \"consentGatheringScripts\": null, \"introspectionScripts\": null, \"rptClaimsScripts\": null }, \"backchannelTokenDeliveryMode\": null, \"backchannelClientNotificationEndpoint\": null, \"backchannelAuthenticationRequestSigningAlg\": null, \"backchannelUserCodeParameter\": null, \"expirationDate\": null, \"deletable\": false, \"jansId\": null } Selection:","title":"Get OpenID client by its inum"},{"location":"user/using-jans-cli/im/im-smtp-server-configuration/","text":"SMTP Condifuration # Prerequisite: Know how to use the Janssen CLI in interactive mode Janssen CLI also supports SMTP configuration. You can do the following things as stated below: - View/Get - Add/Delete - Update - Test Simply select option '10' from Main Menu, It will show some options as below: Configuration \u2013 SMTP -------------------- 1 Returns SMTP server configuration 2 Adds SMTP server configuration 3 Updates SMTP server configuration 4 Deletes SMTP server configuration 5 Test SMTP server configuration Just go with the option and perform operation. Get Current SMTP Server Configuration # To view the current SMTP server configuration on your Janssen server, please select option 1, it will return as below: Returns SMTP server configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/smtp.readonly { \"host\": null, \"port\": 0, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": null } Setup new SMTP server # To add a smtp server, chose option 2 from SMTP Configuration Menu. It will ask few things to fill each property. host port requiresSsl[true, false] serverTrust[true, false] fromName fromEmailAddress requireAuthentication [true, false] username password Obtained Data: { \"host\": null, \"port\": null, \"requiresSsl\": false, \"serverTrust\": false, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": false, \"userName\": null, \"password\": null } Continue? Test SMTP Configuration # If the server is running, and all the information you have entered is correct. You can test SMTP server from the following option 5, it will respond if the server is configured properly.","title":"SMTP Condifuration"},{"location":"user/using-jans-cli/im/im-smtp-server-configuration/#smtp-condifuration","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode Janssen CLI also supports SMTP configuration. You can do the following things as stated below: - View/Get - Add/Delete - Update - Test Simply select option '10' from Main Menu, It will show some options as below: Configuration \u2013 SMTP -------------------- 1 Returns SMTP server configuration 2 Adds SMTP server configuration 3 Updates SMTP server configuration 4 Deletes SMTP server configuration 5 Test SMTP server configuration Just go with the option and perform operation.","title":"SMTP Condifuration"},{"location":"user/using-jans-cli/im/im-smtp-server-configuration/#get-current-smtp-server-configuration","text":"To view the current SMTP server configuration on your Janssen server, please select option 1, it will return as below: Returns SMTP server configuration --------------------------------- Please wait while retreiving data ... Getting access token for scope https://jans.io/oauth/config/smtp.readonly { \"host\": null, \"port\": 0, \"requiresSsl\": null, \"serverTrust\": null, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": null, \"userName\": null, \"password\": null }","title":"Get Current SMTP Server Configuration"},{"location":"user/using-jans-cli/im/im-smtp-server-configuration/#setup-new-smtp-server","text":"To add a smtp server, chose option 2 from SMTP Configuration Menu. It will ask few things to fill each property. host port requiresSsl[true, false] serverTrust[true, false] fromName fromEmailAddress requireAuthentication [true, false] username password Obtained Data: { \"host\": null, \"port\": null, \"requiresSsl\": false, \"serverTrust\": false, \"fromName\": null, \"fromEmailAddress\": null, \"requiresAuthentication\": false, \"userName\": null, \"password\": null } Continue?","title":"Setup new SMTP server"},{"location":"user/using-jans-cli/im/im-smtp-server-configuration/#test-smtp-configuration","text":"If the server is running, and all the information you have entered is correct. You can test SMTP server from the following option 5, it will respond if the server is configured properly.","title":"Test SMTP Configuration"},{"location":"user/using-jans-cli/im/im-user-managed-access-%28uma%29/","text":"UMA # Prerequisite: Know how to use the Janssen CLI in interactive mode UMA helps to manage user authorization. Using IM, you can easily maintain UMA resources. If you select 16 option on the IM Menu, you will get a list as below: you can perform such operations: - view/find - create - update / partially update - delete To get a list of UMA resources of your Janssen Server, you can select option 1. It will ask search limit[50] by default set up to 50 and pattern of string.","title":"UMA"},{"location":"user/using-jans-cli/im/im-user-managed-access-%28uma%29/#uma","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode UMA helps to manage user authorization. Using IM, you can easily maintain UMA resources. If you select 16 option on the IM Menu, you will get a list as below: you can perform such operations: - view/find - create - update / partially update - delete To get a list of UMA resources of your Janssen Server, you can select option 1. It will ask search limit[50] by default set up to 50 and pattern of string.","title":"UMA"},{"location":"user/using-jans-cli/im/im-user/","text":"User Resources # Prerequisite: Know how to use the Janssen CLI in interactive mode This option can be used to perform such operations to modfiy user resources. If you select the first option from the SCIM Menu, You will get a list of sub-menu as same as below. user ---- 1 Query User resources (see section 3.4.2 of RFC 7644) 2 Allows creating a User resource via POST (see section 3.3 of RFC 7644) 3 Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) 4 Updates a User resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. 5 Deletes a user resource 6 Updates one or more attributes of a User resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 7 Query User resources (see section 3.4.2 of RFC 7644) Selection: Query User Resources # Query User Resources presents all the user information and its attributes. It supports query with filter by a list of attributes: 1. ** attributes ** : Use comma (,) for multiple attributes 2. ** excludeAttributes ** : Use comma (,) for multiple attributes 3. ** filter ** : an attribute with val ue to return as same type of resources 4. ** startIndex ** : an int eger val ue indicate a starting pos ition 5. ** count ** : an int eger val ue def ine the maximum search results 6. ** sortBy ** : sort list of search results by an attribute 7. ** sortOrder ** : [' asc end ing ' , ' descending '] A simple query where everything is skipped for default value. Query User resources (see section 3.4.2 of RFC 7644) ---------------------------------------------------- \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: \u00abAn expression specifying the search criteria. See section 3.4.2.2 of RFC 7644. Type: string\u00bb filter: \u00abThe 1-based index of the first query result. Type: integer\u00bb startIndex: \u00abSpecifies the desired maximum number of query results per page. Type: integer\u00bb count: 1 \u00abThe attribute whose value will be used to order the returned responses. Type: string\u00bb sortBy: \u00abOrder in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\". Type: string\u00bb sortOrder: Calling Api with parameters: {'count': 1} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } Selection: Creating an User # With this option, An adminstration can create user resources easily. To create an user, you need to provide user value for its attributes. List of attributes are given below: 1. familyName 2. givenName 3. middleName 4. honorificPrefix 5. honorificSuffix 6. displayName 7. password 8. Email Optional Fields: 1 schemas 2 id 3 meta 4 externalId 5 nickName 6 profileUrl 7 title 8 userType 9 preferredLanguage 10 locale 11 timezone 12 active 13 phoneNumbers 14 ims 15 photos 16 addresses 17 groups 18 entitlements 19 roles 20 x509Certificates 21 urn:ietf:params:scim:schemas:extension:gluu:2.0:User You can skip less important attributes if you want. Please see below follow-up method to create an user. Selection: 2 \u00abIdentifier for the user, typically used by the user to directly authenticate (id and externalId are opaque identifiers generally not known by users). Type: string\u00bb userName: shakil Data for object name. See section 4.1.1 of RFC 7643 \u00abType: string\u00bb familyName: shakil \u00abType: string\u00bb givenName: shakil \u00abType: string\u00bb middleName: shakil \u00abA \"title\" like \"Ms.\", \"Mrs.\". Type: string\u00bb honorificPrefix: Mr. \u00abName suffix, like \"Junior\", \"The great\", \"III\". Type: string\u00bb honorificSuffix: Miah \u00abFull name, including all middle names, titles, and suffixes as appropriate. Type: string\u00bb formatted: \u00abName of the user suitable for display to end-users. Type: string\u00bb displayName: shakil \u00abType: string\u00bb password: password \u00abSee section 4.1.2 of RFC 7643. \u00bb Add Email? shakil@gluu.org Please enter one of y, n Add Email? n Populate optional fields? y Optional Fields: 1 schemas 2 id 3 meta 4 externalId 5 nickName 6 profileUrl 7 title 8 userType 9 preferredLanguage 10 locale 11 timezone 12 active 13 phoneNumbers 14 ims 15 photos 16 addresses 17 groups 18 entitlements 19 roles 20 x509Certificates 21 urn:ietf:params:scim:schemas:extension:gluu:2.0:User \u00abc: continue, #: populate filed. \u00bb Selection: c Obtained Data: { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": null }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": null, \"password\": \"12345678\", \"emails\": [], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": null, \"id\": null, \"meta\": null } Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait while posting data ... { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": null, \"password\": null, \"emails\": [], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-03-29T19:04:52.353Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection: Retrieves an User Resources by its ID # You can retrieve an user resources by its ID. Also it supports filter in searching means you can choose list of attributes you want to retrieve and exclude list of attributes that you don't want to retrieve. Here, I have skipped for each property to retrieve all its attributes. Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) --------------------------------------------------------------- \u00abid. Type: string\u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: Calling Api with parameters: {'id': '7881ed5c-1dad-4265-9b74-ee6c3932c11f'} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": false, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-03-29T19:04:52.353Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection: Update an User resource: # You can update an user resources by its ID also. If you enter an ID of an user resource, It will show a list of attributes. You can select any of theme one by one to update each value of its property. Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) --------------------------------------------------------------- \u00abid. Type: string\u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f Calling Api with parameters: {'id': '7881ed5c-1dad-4265-9b74-ee6c3932c11f'} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read Fields: 1 active 2 addresses 3 displayName 4 emails 5 entitlements 6 externalId 7 groups 8 id 9 ims 10 locale 11 meta 12 name 13 nickName 14 password 15 phoneNumbers 16 photos 17 preferredLanguage 18 profileUrl 19 roles 20 schemas 21 timezone 22 title 23 urn:ietf:params:scim:schemas:extension:gluu:2.0:User 24 userName 25 userType 26 x509Certificates \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: Let's say we are going to change the user active status, there is a follow-up process: Selection: 1 \u00abType: boolean\u00bb active [false]: true Please enter a(n) boolean value: _true, _false active [false]: _true \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: s Changes: active: True Continue? y Please wait while posting data ... Getting access token for scope https://jans.io/scim/users.write { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-04-01T22:45:15.804Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection: This is how you can update each of its attributes. Delete an user resource # If you want to delete an entry from user resources, you can do that thing easily using the Interatice Mode of Janssen CLI. To delete an user entry, you need to provide its inum . In our case: It's id=7881ed5c-1dad-4265-9b74-ee6c3932c11f which one are going to be deleted. After then, it will ask for the confirmation, just enter 'y' to delete. Please see below result to better understand. Selection: 5 \u00abEntry to be deleted. \u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f Are you sure want to delete 7881ed5c-1dad-4265-9b74-ee6c3932c11f ? y Getting access token for scope https://jans.io/scim/users.write Please wait while deleting 7881ed5c-1dad-4265-9b74-ee6c3932c11f ... Entry 7881ed5c-1dad-4265-9b74-ee6c3932c11f was deleted successfully Selection: Updates user resources using operation mode # This is an alternative option to update user resources. To use this option, you need to consider the following things: - ** id **: a unique id of user resources - ** op **: one operation to be done from [ add , remove , replace ] - ** path **: an attribute path where this operation to be done . - ** value **: any string type value to `add` or `replace` . This is an example to add title which id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d Selection: 6 \u00abEntry to be patched. \u00bb id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d \u00abThe kind of operation to perform. Type: string\u00bb op: add \u00abRequired when op is remove, optional otherwise. Type: string\u00bb path: title \u00abOnly required when op is add or replace. Type: string\u00bb value: Admin Patch another param? n [ { \"op\": \"add\", \"path\": \"title\", \"value\": \"Admin\" } ] Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait patching... { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"Admin\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-05T17:56:40.502Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } Selection: There is another example to update user resource on a sub-path: Selection: 6 \u00abEntry to be patch id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d \u00abThe kind of operation to perform. Type: string\u00bb op: replace \u00abRequired when op is remove, optional otherwise. Type: string\u00bb path: name/familyName \u00abOnly required when op is add or replace. Type: string\u00bb value: MH Shakil Patch another param? n [ { \"op\": \"replace\", \"path\": \"name.familyName\", \"value\": \"MH Shakil\" } ] Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait patching... { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"MH Shakil\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-07T17:57:11.250Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } Selection: Please note : you can use any of them between dot (.) and slash (/) to add a sub-path in the operation.","title":"User Resources"},{"location":"user/using-jans-cli/im/im-user/#user-resources","text":"Prerequisite: Know how to use the Janssen CLI in interactive mode This option can be used to perform such operations to modfiy user resources. If you select the first option from the SCIM Menu, You will get a list of sub-menu as same as below. user ---- 1 Query User resources (see section 3.4.2 of RFC 7644) 2 Allows creating a User resource via POST (see section 3.3 of RFC 7644) 3 Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) 4 Updates a User resource (see section 3.5.1 of RFC 7644). Update works in a replacement fashion&amp;#58; every attribute value found in the payload sent will replace the one in the existing resource representation. Attributes not passed in the payload will be left intact. 5 Deletes a user resource 6 Updates one or more attributes of a User resource using a sequence of additions, removals, and replacements operations. See section 3.5.2 of RFC 7644 7 Query User resources (see section 3.4.2 of RFC 7644) Selection:","title":"User Resources"},{"location":"user/using-jans-cli/im/im-user/#query-user-resources","text":"Query User Resources presents all the user information and its attributes. It supports query with filter by a list of attributes: 1. ** attributes ** : Use comma (,) for multiple attributes 2. ** excludeAttributes ** : Use comma (,) for multiple attributes 3. ** filter ** : an attribute with val ue to return as same type of resources 4. ** startIndex ** : an int eger val ue indicate a starting pos ition 5. ** count ** : an int eger val ue def ine the maximum search results 6. ** sortBy ** : sort list of search results by an attribute 7. ** sortOrder ** : [' asc end ing ' , ' descending '] A simple query where everything is skipped for default value. Query User resources (see section 3.4.2 of RFC 7644) ---------------------------------------------------- \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: \u00abAn expression specifying the search criteria. See section 3.4.2.2 of RFC 7644. Type: string\u00bb filter: \u00abThe 1-based index of the first query result. Type: integer\u00bb startIndex: \u00abSpecifies the desired maximum number of query results per page. Type: integer\u00bb count: 1 \u00abThe attribute whose value will be used to order the returned responses. Type: string\u00bb sortBy: \u00abOrder in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\". Type: string\u00bb sortOrder: Calling Api with parameters: {'count': 1} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read \"Resources\": [ { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": null, \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } ], \"schemas\": [ \"urn:ietf:params:scim:api:messages:2.0:ListResponse\" ], \"totalResults\": 1, \"startIndex\": 1, \"itemsPerPage\": 1 } Selection:","title":"Query User Resources"},{"location":"user/using-jans-cli/im/im-user/#creating-an-user","text":"With this option, An adminstration can create user resources easily. To create an user, you need to provide user value for its attributes. List of attributes are given below: 1. familyName 2. givenName 3. middleName 4. honorificPrefix 5. honorificSuffix 6. displayName 7. password 8. Email Optional Fields: 1 schemas 2 id 3 meta 4 externalId 5 nickName 6 profileUrl 7 title 8 userType 9 preferredLanguage 10 locale 11 timezone 12 active 13 phoneNumbers 14 ims 15 photos 16 addresses 17 groups 18 entitlements 19 roles 20 x509Certificates 21 urn:ietf:params:scim:schemas:extension:gluu:2.0:User You can skip less important attributes if you want. Please see below follow-up method to create an user. Selection: 2 \u00abIdentifier for the user, typically used by the user to directly authenticate (id and externalId are opaque identifiers generally not known by users). Type: string\u00bb userName: shakil Data for object name. See section 4.1.1 of RFC 7643 \u00abType: string\u00bb familyName: shakil \u00abType: string\u00bb givenName: shakil \u00abType: string\u00bb middleName: shakil \u00abA \"title\" like \"Ms.\", \"Mrs.\". Type: string\u00bb honorificPrefix: Mr. \u00abName suffix, like \"Junior\", \"The great\", \"III\". Type: string\u00bb honorificSuffix: Miah \u00abFull name, including all middle names, titles, and suffixes as appropriate. Type: string\u00bb formatted: \u00abName of the user suitable for display to end-users. Type: string\u00bb displayName: shakil \u00abType: string\u00bb password: password \u00abSee section 4.1.2 of RFC 7643. \u00bb Add Email? shakil@gluu.org Please enter one of y, n Add Email? n Populate optional fields? y Optional Fields: 1 schemas 2 id 3 meta 4 externalId 5 nickName 6 profileUrl 7 title 8 userType 9 preferredLanguage 10 locale 11 timezone 12 active 13 phoneNumbers 14 ims 15 photos 16 addresses 17 groups 18 entitlements 19 roles 20 x509Certificates 21 urn:ietf:params:scim:schemas:extension:gluu:2.0:User \u00abc: continue, #: populate filed. \u00bb Selection: c Obtained Data: { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": null }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": null, \"password\": \"12345678\", \"emails\": [], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": null, \"id\": null, \"meta\": null } Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait while posting data ... { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": null, \"password\": null, \"emails\": [], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-03-29T19:04:52.353Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection:","title":"Creating an User"},{"location":"user/using-jans-cli/im/im-user/#retrieves-an-user-resources-by-its-id","text":"You can retrieve an user resources by its ID. Also it supports filter in searching means you can choose list of attributes you want to retrieve and exclude list of attributes that you don't want to retrieve. Here, I have skipped for each property to retrieve all its attributes. Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) --------------------------------------------------------------- \u00abid. Type: string\u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f \u00abA comma-separated list of attribute names to return in the response. Type: string\u00bb attributes: \u00abWhen specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list). Type: string\u00bb excludedAttributes: Calling Api with parameters: {'id': '7881ed5c-1dad-4265-9b74-ee6c3932c11f'} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": false, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-03-29T19:04:52.353Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection:","title":"Retrieves an User Resources by its ID"},{"location":"user/using-jans-cli/im/im-user/#update-an-user-resource","text":"You can update an user resources by its ID also. If you enter an ID of an user resource, It will show a list of attributes. You can select any of theme one by one to update each value of its property. Retrieves a User resource by Id (see section 3.4.1 of RFC 7644) --------------------------------------------------------------- \u00abid. Type: string\u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f Calling Api with parameters: {'id': '7881ed5c-1dad-4265-9b74-ee6c3932c11f'} Please wait while retreiving data ... Getting access token for scope https://jans.io/scim/users.read Fields: 1 active 2 addresses 3 displayName 4 emails 5 entitlements 6 externalId 7 groups 8 id 9 ims 10 locale 11 meta 12 name 13 nickName 14 password 15 phoneNumbers 16 photos 17 preferredLanguage 18 profileUrl 19 roles 20 schemas 21 timezone 22 title 23 urn:ietf:params:scim:schemas:extension:gluu:2.0:User 24 userName 25 userType 26 x509Certificates \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: Let's say we are going to change the user active status, there is a follow-up process: Selection: 1 \u00abType: boolean\u00bb active [false]: true Please enter a(n) boolean value: _true, _false active [false]: _true \u00abq: quit, v: view, s: save, l: list fields #: update filed. \u00bb Selection: s Changes: active: True Continue? y Please wait while posting data ... Getting access token for scope https://jans.io/scim/users.write { \"externalId\": null, \"userName\": \"shakil\", \"name\": { \"familyName\": \"shakil\", \"givenName\": \"shakil\", \"middleName\": \"shakil\", \"honorificPrefix\": \"Mr.\", \"honorificSuffix\": \"Miah\", \"formatted\": \"Mr. shakil shakil shakil Miah\" }, \"displayName\": \"shakil\", \"nickName\": null, \"profileUrl\": null, \"title\": null, \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": null, \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": null, \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"7881ed5c-1dad-4265-9b74-ee6c3932c11f\", \"meta\": { \"resourceType\": \"User\", \"created\": \"2021-03-29T19:04:52.353Z\", \"lastModified\": \"2021-04-01T22:45:15.804Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/7881ed5c-1dad-4265-9b74-ee6c3932c11f\" } } Selection: This is how you can update each of its attributes.","title":"Update an User resource:"},{"location":"user/using-jans-cli/im/im-user/#delete-an-user-resource","text":"If you want to delete an entry from user resources, you can do that thing easily using the Interatice Mode of Janssen CLI. To delete an user entry, you need to provide its inum . In our case: It's id=7881ed5c-1dad-4265-9b74-ee6c3932c11f which one are going to be deleted. After then, it will ask for the confirmation, just enter 'y' to delete. Please see below result to better understand. Selection: 5 \u00abEntry to be deleted. \u00bb id: 7881ed5c-1dad-4265-9b74-ee6c3932c11f Are you sure want to delete 7881ed5c-1dad-4265-9b74-ee6c3932c11f ? y Getting access token for scope https://jans.io/scim/users.write Please wait while deleting 7881ed5c-1dad-4265-9b74-ee6c3932c11f ... Entry 7881ed5c-1dad-4265-9b74-ee6c3932c11f was deleted successfully Selection:","title":"Delete an user resource"},{"location":"user/using-jans-cli/im/im-user/#updates-user-resources-using-operation-mode","text":"This is an alternative option to update user resources. To use this option, you need to consider the following things: - ** id **: a unique id of user resources - ** op **: one operation to be done from [ add , remove , replace ] - ** path **: an attribute path where this operation to be done . - ** value **: any string type value to `add` or `replace` . This is an example to add title which id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d Selection: 6 \u00abEntry to be patched. \u00bb id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d \u00abThe kind of operation to perform. Type: string\u00bb op: add \u00abRequired when op is remove, optional otherwise. Type: string\u00bb path: title \u00abOnly required when op is add or replace. Type: string\u00bb value: Admin Patch another param? n [ { \"op\": \"add\", \"path\": \"title\", \"value\": \"Admin\" } ] Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait patching... { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"User\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"Admin\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-05T17:56:40.502Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } Selection: There is another example to update user resource on a sub-path: Selection: 6 \u00abEntry to be patch id: 18ca6089-42fb-410a-a5b5-c2631d75dc7d \u00abThe kind of operation to perform. Type: string\u00bb op: replace \u00abRequired when op is remove, optional otherwise. Type: string\u00bb path: name/familyName \u00abOnly required when op is add or replace. Type: string\u00bb value: MH Shakil Patch another param? n [ { \"op\": \"replace\", \"path\": \"name.familyName\", \"value\": \"MH Shakil\" } ] Continue? y Getting access token for scope https://jans.io/scim/users.write Please wait patching... { \"externalId\": null, \"userName\": \"admin\", \"name\": { \"familyName\": \"MH Shakil\", \"givenName\": \"Admin\", \"middleName\": \"Admin\", \"honorificPrefix\": null, \"honorificSuffix\": null, \"formatted\": \"Admin Admin User\" }, \"displayName\": \"Default Admin User\", \"nickName\": \"Admin\", \"profileUrl\": null, \"title\": \"MH Shakil\", \"userType\": null, \"preferredLanguage\": null, \"locale\": null, \"timezone\": null, \"active\": true, \"password\": null, \"emails\": [ { \"value\": \"admin@testjans.gluu.com\", \"display\": null, \"type\": null, \"primary\": false } ], \"phoneNumbers\": null, \"ims\": null, \"photos\": null, \"addresses\": null, \"groups\": [ { \"value\": \"60B7\", \"$ref\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Groups/60B7\", \"display\": \"Jannsen Manager Group\", \"type\": \"direct\" } ], \"entitlements\": null, \"roles\": null, \"x509Certificates\": null, \"urn:ietf:params:scim:schemas:extension:gluu:2.0:User\": null, \"schemas\": [ \"urn:ietf:params:scim:schemas:core:2.0:User\" ], \"id\": \"18ca6089-42fb-410a-a5b5-c2631d75dc7d\", \"meta\": { \"resourceType\": \"User\", \"created\": null, \"lastModified\": \"2021-04-07T17:57:11.250Z\", \"location\": \"https://testjans.gluu.com/jans-scim/restv1/v2/Users/18ca6089-42fb-410a-a5b5-c2631d75dc7d\" } } Selection: Please note : you can use any of them between dot (.) and slash (/) to add a sub-path in the operation.","title":"Updates user resources using operation mode"}]}