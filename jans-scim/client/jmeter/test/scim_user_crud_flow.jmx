<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SCIM CRUD + Search + Patch" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">u184.gluu.info</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_id" elementType="Argument">
            <stringProp name="Argument.name">client_id</stringProp>
            <stringProp name="Argument.value">e835a9d5-b7d9-49ac-9b32-e8a36c253b3b</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_secret" elementType="Argument">
            <stringProp name="Argument.name">client_secret</stringProp>
            <stringProp name="Argument.value">secret</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_header" elementType="Argument">
            <stringProp name="Argument.name">client_header</stringProp>
            <stringProp name="Argument.value">to_override_in_jsr223</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1479823133000</longProp>
        <longProp name="ThreadGroup.end_time">1479823133000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">false</boolProp>
          </CacheManager>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="/get_access_token" enabled="true">
            <stringProp name="IfController.condition">${__groovy(vars.get(&quot;access_token&quot;) == null || vars.get(&quot;access_token_expiration&quot;) == null || Long.parseLong(vars.get(&quot;access_token_expiration&quot;)) - System.currentTimeMillis() &lt; 5000,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/token" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">client_credentials</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/oxauth/restv1/token</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${client_header}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor : base64 client credentials " enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">String credentials = vars.get(&quot;client_id&quot;) + &quot;:&quot; + vars.get(&quot;client_secret&quot;);
String clientHeader = &quot;Basic &quot; + org.apache.commons.codec.binary.Base64.encodeBase64String(credentials.getBytes(&quot;UTF-8&quot;));
log.info(&quot;Credentials: &quot; + credentials + &quot;, clientHeader: &quot; + clientHeader);
OUT.println(&quot;Credentials: &quot; + credentials + &quot;, clientHeader: &quot; + clientHeader);
vars.put(&quot;client_header&quot;, clientHeader);</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="13466530">&quot;access_token&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor : access_token" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor : access_token_expires_in" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">access_token_expires_in</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.expires_in</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor : access_token_expiration" enabled="true">
                <stringProp name="scriptLanguage">bsh</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">var access_token = &quot;${access_token}&quot;;
var access_token_expires_in = &quot;${access_token_expires_in}&quot;;

log.debug(&quot;!!! acess_token : &quot; + access_token);
log.debug(&quot;!!! access_token_expires_in : &quot; + access_token_expires_in);

var access_token_expiration = System.currentTimeMillis();
if (!org.apache.commons.lang3.StringUtils.isEmpty(access_token_expires_in)) {
	access_token_expiration = access_token_expiration + Long.parseLong(access_token_expires_in) * 1000;
}

vars.put(&quot;access_token_expiration&quot;, String.valueOf(access_token_expiration));

log.debug(&quot;!!! access_token_expiration : &quot; + access_token_expiration);
</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="/user_operations" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/add_user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${add_user_request}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor : User entry" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int user_type = new Random().nextInt(4) + 1;

var user_random_uid = &quot;scim&quot; + &quot;__${__threadNum}__&quot; + String.valueOf(System.currentTimeMillis());

var add_user_request = &quot;&quot;;
if (user_type == 1) {
	add_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 4567\&quot;, \&quot;type\&quot;: \&quot;home\&quot; } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;password\&quot;: \&quot;secret\&quot;}&quot;;
} else if (user_type == 2) {
	add_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;password\&quot;: \&quot;top-secret\&quot;, \&quot;roles\&quot;: [{ \&quot;value\&quot; : \&quot;Master of puppets\&quot; }], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 4566\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;555 123 4568\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ]}&quot;;
} else if (user_type == 3) {
	add_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 4568\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;preferredLanguage\&quot;: \&quot;en_US\&quot;, \&quot;groups\&quot;: [{ \&quot;value\&quot; : \&quot;Dummy ID\&quot; }]}&quot;;
} else if (user_type == 4) {
	add_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 4568\&quot;, \&quot;type\&quot;: \&quot;fax\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;+1 234 566 9999\&quot;, \&quot;type\&quot;: \&quot;pager\&quot; } ]}&quot;;
}

add_user_request = add_user_request.replaceAll(&quot;_uid_&quot;, user_random_uid);

log.info(&quot;!!! user_type : &quot; + user_type);
log.info(&quot;!!! user_random_uid : &quot; + user_random_uid);
log.info(&quot;!!! add_user_request : &quot; + add_user_request);

vars.put(&quot;user_type&quot;, String.valueOf(user_type));
vars.put(&quot;user_random_uid&quot;, user_random_uid);
vars.put(&quot;add_user_request&quot;, add_user_request);
</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion: Check userName" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-546274164">${user_random_uid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor : inum" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">userInum</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Path PostProcessor : userName" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">userName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.userName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/search_user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;schemas&quot;: [&quot;urn:ietf:params:scim:api:messages:2.0:SearchRequest&quot;],&#xd;
  &quot;attributes&quot;: [&quot;meta.location&quot;],&#xd;
  &quot;sortBy&quot;: &quot;id&quot;,&#xd;
  &quot;filter&quot;: &quot;userName eq \&quot;${userName}\&quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users/.search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion: Count results" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1092015835">&quot;totalResults&quot;:1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/get_user" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users/${userInum}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion: Count results" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="53537713">&quot;id&quot;:&quot;${userInum}&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/replace_user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${replace_user_request}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users/${userInum}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor : User entry" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int user_type = Integer.valueOf(vars.get(&quot;user_type&quot;));

var user_random_uid = vars.get(&quot;user_random_uid&quot;);

var replace_user_request = &quot;&quot;;
if (user_type == 1) {
	replace_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 5555\&quot;, \&quot;type\&quot;: \&quot;home\&quot; } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;password\&quot;: \&quot;secret\&quot;}&quot;;
} else if (user_type == 2) {
	replace_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;password\&quot;: \&quot;top-secret\&quot;, \&quot;roles\&quot;: [{ \&quot;value\&quot; : \&quot;Master of puppets\&quot; }], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 5555\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;555 123 4568\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ]}&quot;;
} else if (user_type == 3) {
	replace_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 5555\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;preferredLanguage\&quot;: \&quot;en_US\&quot;, \&quot;groups\&quot;: [{ \&quot;value\&quot; : \&quot;Dummy ID\&quot; }]}&quot;;
} else if (user_type == 4) {
	replace_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 5555\&quot;, \&quot;type\&quot;: \&quot;fax\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;+1 234 566 9999\&quot;, \&quot;type\&quot;: \&quot;pager\&quot; } ]}&quot;;
}

replace_user_request = replace_user_request.replaceAll(&quot;_uid_&quot;, user_random_uid);

log.info(&quot;!!! user_type : &quot; + user_type);
log.info(&quot;!!! user_random_uid : &quot; + user_random_uid);
log.info(&quot;!!! replace_user_request : &quot; + replace_user_request);

vars.put(&quot;replace_user_request&quot;, replace_user_request);
</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion: Check userName" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-546274164">${user_random_uid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/patch_user" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${patch_user_request}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users/${userInum}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor : User entry" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int user_type = Integer.valueOf(vars.get(&quot;user_type&quot;));

var user_random_uid = vars.get(&quot;user_random_uid&quot;);

var patch_user_request = &quot;&quot;;
if (user_type == 1) {
	patch_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 6666\&quot;, \&quot;type\&quot;: \&quot;home\&quot; } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;password\&quot;: \&quot;secret\&quot;}&quot;;
} else if (user_type == 2) {
	patch_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;password\&quot;: \&quot;top-secret\&quot;, \&quot;roles\&quot;: [{ \&quot;value\&quot; : \&quot;Master of puppets\&quot; }], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 6666\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;555 123 4568\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ]}&quot;;
} else if (user_type == 3) {
	patch_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;externalId\&quot;: \&quot;scim_test_bjensen__uid_-external\&quot;, \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;name\&quot;: { \&quot;honorificPrefix\&quot;: \&quot;prefix\&quot;, \&quot;honorificSuffix\&quot;: \&quot;suffix\&quot;, \&quot;formatted\&quot;:\&quot;Ms. Barbara J Jensen III\&quot;, \&quot;familyName\&quot;:\&quot;Jensen\&quot;, \&quot;givenName\&quot;:\&quot;Barbara\&quot;, \&quot;middleName\&quot;:\&quot;Jane\&quot; }, \&quot;displayName\&quot;: \&quot;Brava\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;work\&quot;, \&quot;primary\&quot;: true } ], \&quot;addresses\&quot;: [ { \&quot;type\&quot;: \&quot;other\&quot;, \&quot;streetAddress\&quot;: \&quot;123 Evergreen skid row\&quot;, \&quot;locality\&quot;: \&quot;Cartucho\&quot;, \&quot;region\&quot;: \&quot;BO\&quot;, \&quot;postalCode\&quot;: \&quot;54321\&quot;, \&quot;country\&quot;: \&quot;CO\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 6666\&quot;, \&quot;type\&quot;: \&quot;other\&quot;, \&quot;primary\&quot; : true } ], \&quot;locale\&quot;: \&quot;es_ES\&quot;, \&quot;active\&quot;: true, \&quot;preferredLanguage\&quot;: \&quot;en_US\&quot;, \&quot;groups\&quot;: [{ \&quot;value\&quot; : \&quot;Dummy ID\&quot; }]}&quot;;
} else if (user_type == 4) {
	patch_user_request = &quot;{\&quot;schemas\&quot;: [\&quot;urn:ietf:params:scim:schemas:core:2.0:User\&quot;], \&quot;userName\&quot;: \&quot;scim_test_bjensen__uid_\&quot;, \&quot;emails\&quot;: [ { \&quot;value\&quot;: \&quot;bjane@gluu.org\&quot;, \&quot;type\&quot;: \&quot;home\&quot;, \&quot;primary\&quot;: true } ], \&quot;phoneNumbers\&quot;: [ { \&quot;value\&quot;: \&quot;555 123 6666\&quot;, \&quot;type\&quot;: \&quot;fax\&quot;, \&quot;primary\&quot; : true }, { \&quot;value\&quot;: \&quot;+1 234 566 9999\&quot;, \&quot;type\&quot;: \&quot;pager\&quot; } ]}&quot;;
}

patch_user_request = patch_user_request.replaceAll(&quot;_uid_&quot;, user_random_uid);

log.info(&quot;!!! user_type : &quot; + user_type);
log.info(&quot;!!! user_random_uid : &quot; + user_random_uid);
log.info(&quot;!!! patch_user_request : &quot; + patch_user_request);

vars.put(&quot;patch_user_request&quot;, patch_user_request);
</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion: Check userName" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-546274164">${user_random_uid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/delete_user" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/identity/restv1/scim/v2/Users/${userInum}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/scim+json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion : Status code" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49590">204</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.custom_message"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ObsoleteGui" testclass="ResultCollector" testname="Monitor Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
