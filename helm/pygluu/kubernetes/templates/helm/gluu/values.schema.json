{
   "$schema":"https://json-schema.org/draft/2020-12/schema#",
   "type":"object",
   "properties":{
      "admin-ui":{
         "description":"Admin GUI for configuration of the auth-server",
         "type":"object",
         "properties":{

         }
      },
      "auth-server":{
         "description":"OAuth Authorization Server, the OpenID Connect Provider, the UMA Authorization Server--this is the main Internet facing component of Gluu. It's the service that returns tokens, JWT's and identity assertions. This service must be Internet facing.",
         "type":"object",
         "properties":{

         }
      },
      "auth-server-key-rotation":{
         "description":"Responsible for regenerating auth-keys per x hours",
         "type":"object",
         "properties":{

         }
      },
      "casa":{
         "description":"Gluu Casa (\"Casa\") is a self-service web portal for end-users to manage authentication and authorization preferences for their account in a Gluu Server.",
         "type":"object",
         "properties":{

         }
      },
      "client-api":{
         "description":"Middleware API to help application developers call an OAuth, OpenID or UMA server. You may wonder why this is necessary. It makes it easier for client developers to use OpenID signing and encryption features, without becoming crypto experts. This API provides some high level endpoints to do some of the heavy lifting.",
         "type":"object",
         "properties":{

         }
      },
      "config":{
         "description":"Configuration parameters for setup and initial configuration secret annd config layers used by Gluu services.",
         "type":"object",
         "properties":{
            "adminPass":{
               "description":"Admin password to login to the UI",
               "$ref":"#/definitions/password"
            },
            "city":{
               "description":"City of the company or individual. Used in generating the self-signed certificate",
               "type":"string",
               "pattern":"^[a-zA-Z]+$"
            },
            "configmap":{
               "description":"Configuration parameters mapped to envs in a ConfigMap",
               "type":"object",
               "properties":{
                  "cnSqlDbDialect":{
                     "description":"SQL dialect",
                     "type":"string",
                     "pattern":"^(mysql)$"
                  },
                  "cnSqlDbHost":{
                     "description":"SQL server address or ip",
                     "anyOf":[
                        {
                           "$ref":"#/definitions/url-pattern"
                        },
                        {
                           "$ref":"#/definitions/ip-pattern"
                        }
                     ]
                  },
                  "cnSqlDbPort":{
                     "description":"SQL server port",
                     "type":"integer"
                  },
                  "cnSqlDbName":{
                     "description":"SQL server database name for Jans",
                     "type":"string",
                     "pattern":"^[a-z-0-9]+$"
                  },
                  "cnSqlDbUser":{
                     "description":"SQL database Jans username",
                     "type":"string",
                     "pattern":"^[a-z-0-9]+$"
                  },
                  "cnSqlDbTimezone":{
                     "description":"SQL database timezone",
                     "type":"string",
                     "pattern":"^(GMT|UTC|ECT|EET|ART|EAT|MET|NET|PLT|IST|BST|VST|CTT|JST|ACT|AET|SST|NST|MIT|HST|AST|PST|PNT|MST|CST|EST|IET|PRT|CNT|AGT|BET|CAT)$"
                  },
                  "cnSqlPasswordFile":{
                     "description":"SQL server password file location. This file path must end with sql_password",
                     "type":"string",
                     "pattern":".*sql_password\\b.*"
                  },
                  "cnSqldbUserPassword":{
                     "description":"Password for user config.configmap.cnSqlDbUser.",
                     "$ref":"#/definitions/password"
                  },
                  "cnCacheType":{
                     "description":"Cache type. NATIVE_PERSISTENCE, REDIS. or IN_MEMORY. Defaults to NATIVE_PERSISTENCE",
                     "type":"string",
                     "pattern":"^(NATIVE_PERSISTENCE|REDIS|IN_MEMORY)$"
                  },
                  "cnCasaEnabled":{
                     "description":"Enable Casa. Gluu Casa is a self-service web portal for end-users to manage authentication and authorization preferences for their account in a Gluu Server.",
                     "type":"boolean"
                  },
                  "cnClientApiAdminCertCn":{
                     "description":"Client-api OAuth client admin certificate common name. This should be left to the default value client-api",
                     "type":"string",
                     "pattern":"^[a-z-]+$"
                  },
                  "cnClientApiApplicationCertCn":{
                     "description":"Client-api OAuth client application certificate common name. This should be left to the default value client-api",
                     "type":"string",
                     "pattern":"^[a-z-]+$"
                  },
                  "cnClientApiBindIpAddresses":{
                     "description":"Client-api bind address. This limits what ip ranges can access the client-api. This should be left as * and controlled by a NetworkPolicy",
                     "$ref":"#/definitions/ip-pattern"
                  },
                  "cnConfigKubernetesConfigMap":{
                     "description":"The name of the ConfigMap that will hold the configuration layer",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnCouchbaseBucketPrefix":{
                     "description":"The prefix of couchbase buckets. This helps with separation in between different environments and allows for the same couchbase cluster to be used by different setups of Gluu.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnCouchbaseCertFile":{
                     "description":"Location of `couchbase.crt` used by Couchbase SDK for tls termination. The file path must end with couchbase.crt. In mTLS setups this is not required.",
                     "type":"string",
                     "pattern":".*couchbase.crt\\b.*"
                  },
                  "cnCouchbaseCrt":{
                     "description":"Couchbase certificate authority string. This must be encoded using base64. This can also be found in your couchbase UI Security > Root Certificate. In mTLS setups this is not required.",
                     "type":"string",
                     "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  },
                  "cnCouchbaseIndexNumReplica":{
                     "description":"The number of replicas per index created. Please note that the number of index nodes must be one greater than the number of index replicas. That means if your couchbase cluster only has 2 index nodes you cannot place the number of replicas to be higher than 1.",
                     "type":"integer"
                  },
                  "cnCouchbasePass":{
                     "description":"Couchbase password for the restricted user config.configmap.cnCouchbaseUser  that is often used inside the services. The password must contain one digit, one uppercase letter, one lower case letter and one symbol ",
                     "$ref":"#/definitions/password"
                  },
                  "cnCouchbasePasswordFile":{
                     "description":"The location of the Couchbase restricted user config.configmap.cnCouchbaseUser password. The file path must end with couchbase_password",
                     "type":"string",
                     "pattern":".*couchbase_password\\b.*"
                  },
                  "cnCouchbaseSuperUser":{
                     "description":"The Couchbase super user (admin) user name. This user is used during initialization only.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnCouchbaseSuperUserPass":{
                     "description":"Couchbase password for the super user config.configmap.cnCouchbaseSuperUser  that is used during the initialization process. The password must contain one digit, one uppercase letter, one lower case letter and one symbol ",
                     "$ref":"#/definitions/password"
                  },
                  "cnCouchbaseSuperUserPassFile":{
                     "description":"The location of the Couchbase restricted user config.configmap.cnCouchbaseSuperUser password. The file path must end with couchbase_superuser_password.",
                     "type":"string",
                     "pattern":".*couchbase_superuser_password\\b.*"
                  },
                  "cnCouchbaseUrl":{
                     "description":"Couchbase URL. Used only when global.cnPersistenceType is hybrid or couchbase. This should be in FQDN format for either remote or local Couchbase clusters. The address can be an internal address inside the kubernetes cluster",
                     "$ref":"#/definitions/fqdn-pattern"
                  },
                  "cnCouchbaseUser":{
                     "description":"Couchbase restricted user. Used only when global.cnPersistenceType is hybrid or couchbase.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnDocumentStoreType":{
                     "description":"Document store type to use for shibboleth files JCA or LOCAL. Note that if JCA is selected Apache Jackrabbit will be used. Jackrabbit also enables loading custom files across all services easily.",
                     "type":"string",
                     "pattern":"^(LOCAL|JCA)$"
                  },
                  "cnJackrabbitAdminId":{
                     "description":"Jackrabbit admin uid.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnJackrabbitAdminIdFile":{
                     "description":"The location of the Jackrabbit admin uid config.cnJackrabbitAdminId. The file path must end with jackrabbit_admin_id.",
                     "type":"string",
                     "pattern":".*jackrabbit_admin_id\\b.*"
                  },
                  "cnJackrabbitAdminPassFile":{
                     "description":"The location of the Jackrabbit admin password jackrabbit.secrets.cnJackrabbitAdminPassword. The file path must end with jackrabbit_admin_password.",
                     "type":"string",
                     "pattern":".*jackrabbit_admin_password\\b.*"
                  },
                  "cnJackrabbitPostgresDatabaseName":{
                     "description":"Jackrabbit postgres database name.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnJackrabbitPostgresHost":{
                     "description":"Postgres url",
                     "$ref":"#/definitions/fqdn-pattern"
                  },
                  "cnJackrabbitPostgresPasswordFile":{
                     "description":"The location of the Jackrabbit postgres password file jackrabbit.secrets.cnJackrabbitPostgresPassword. The file path must end with postgres_password.",
                     "type":"string",
                     "pattern":".*postgres_password\\b.*"
                  },
                  "cnJackrabbitPostgresPort":{
                     "description":"Jackrabbit Postgres port",
                     "type":"integer"
                  },
                  "cnJackrabbitPostgresUser":{
                     "description":"Jackrabbit Postgres uid",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnJackrabbitSyncInterval":{
                     "description":"Interval between files sync (default to 300 seconds).",
                     "type":"integer"
                  },
                  "cnJackrabbitUrl":{
                     "description":"Jackrabbit internal url. Normally left as default.",
                     "type":"string",
                     "pattern":"^(http:\/\/)?[a-z0-9-:]+$"
                  },
                  "cnGoogleSecretManagerServiceAccount":{
                     "description":"Service account with roles roles/secretmanager.admin base64 encoded string. This is used often inside the services to reach the configuration layer. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string",
                     "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  },
                  "cnGoogleProjectId":{
                     "description":"Project id of the google project the secret manager belongs to. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string",
                     "pattern":""
                  },
                  "cnGoogleSpannerInstanceId":{
                     "description":"Google Spanner ID. Used only when global.cnPersistenceType is spanner.",
                     "type":"string",
                     "pattern":"^([a-z0-9\\-])*$"
                  },
                  "cnGoogleSpannerDatabaseId":{
                     "description":"Google Spanner Database ID. Used only when global.cnPersistenceType is spanner.",
                     "type":"string",
                     "pattern":"^[a-z0-9\\-]*$"
                  },
                  "cnSecretGoogleSecretVersionId":{
                     "description":"Secret version to be used for secret configuration. Defaults to latest and should normally always stay that way. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string",
                     "pattern":"^([0-9]|latest)*$"
                  },
                  "cnSecretGoogleSecretNamePrefix":{
                     "description":"Prefix for Gluu secret in Google Secret Manager. Defaults to gluu. If left gluu-secret secret will be created. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "cnGoogleSecretManagerPassPhrase":{
                     "description":"Passphrase for Gluu secret in Google Secret Manager. This is used for encrypting and decrypting data from the Google Secret Manager. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "$ref":"#/definitions/password"
                  },
                  "cnConfigGoogleSecretVersionId":{
                     "description":"Secret version to be used for configuration. Defaults to latest and should normally always stay that way. Used only when global.configAdapterName and global.configSecretAdapter is set to google. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string",
                     "pattern":"^([0-9]|latest)*$"
                  },
                  "cnConfigGoogleSecretNamePrefix":{
                     "description":"Prefix for Gluu configuration secret in Google Secret Manager. Defaults to gluu. If left intact gluu-configuration secret will be created. Used only when global.configAdapterName and global.configSecretAdapter is set to google.",
                     "type":"string"
                  },
                  "cnLdapUrl":{
                     "description":"OpenDJ internal address. Leave as default. Used when `global.cnPersistenceType` is set to `ldap`.",
                     "type":"string",
                     "pattern":"^[a-z0-9-:]+$"
                  },
                  "cnMaxRamPercent":{
                     "description":"Value passed to Java option -XX:MaxRAMPercentage",
                     "type":"string",
                     "pattern":"^(\\d{0,2}(\\.\\d{1,2})?|100(\\.0?)?)$"
                  },
                  "cnScimProtectionMode":{
                     "description":"SCIM protection mode OAUTH|TEST|UMA",
                     "type":"string",
                     "pattern":"^(OAUTH|TEST|UMA)$"
                  },
                  "cnPassportEnabled":{
                     "description":"Boolean flag to enable/disable Passport chart",
                     "type":"boolean"
                  },
                  "cnPersistenceLdapMapping":{
                     "description":"Specify data that should be saved in LDAP (one of default, user, cache, site, token, or session; default to default). Note this environment only takes effect when `global.cnPersistenceType`  is set to `hybrid`.",
                     "type":"string",
                     "pattern":"^(default|user|site|cache|statistic)$"
                  },
                  "cnRedisSentinelGroup":{
                     "description":"Redis Sentinel Group. Often set when `config.configmap.cnRedisType` is set to `SENTINEL`. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.",
                     "type":"string"
                  },
                  "cnRedisSslTruststore":{
                     "description":"Redis SSL truststore. Optional. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.",
                     "type":"string"
                  },
                  "cnRedisType":{
                     "description":"Redis service type. `STANDALONE` or `CLUSTER`. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.",
                     "type":"string",
                     "pattern":"^(SHARDED|STANDALONE|CLUSTER|SENTINEL)$"
                  },
                  "cnRedisUrl":{
                     "description":"Redis URL and port number <url>:<port>. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.",
                     "$ref":"#/definitions/url-pattern"
                  },
                  "cnRedisUseSsl":{
                     "description":"Boolean to use SSL in Redis. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.",
                     "type":"boolean"
                  },
                  "cnSamlEnabled":{
                     "description":"Enable SAML-related features; UI menu, etc.",
                     "type":"boolean"
                  },
                  "cnSecretKubernetesSecret":{
                     "description":"Kubernetes secret name holding configuration keys. Used when global.configSecretAdapter is set to kubernetes which is the default.",
                     "type":"string",
                     "pattern":"^[a-z]+$"
                  },
                  "lbAddr":{
                     "description":"Loadbalancer address for AWS if the FQDN is not registered.",
                     "$ref":"#/definitions/url-pattern"
                  }
               }
            },
            "countryCode":{
               "description":"Country code. Used for certificate creation.",
               "type":"string",
               "pattern":"^[A-Z]+$"
            },
            "email":{
               "description":"Email address of the administrator usually. Used for certificate creation.",
               "$ref":"#/definitions/email-format"
            },
            "image":{
               "type":"object",
               "properties":{
                  "repository":{
                     "description":"Image  to use for deploying",
                     "type":"string",
                     "pattern":"^[a-z0-9-_/]+$"
                  },
                  "tag":{
                     "description":"Image  tag to use for deploying.",
                     "type":"string",
                     "pattern":"^[a-z0-9-_.]+$"
                  }
               }
            },
            "ldapPassword":{
               "description":"LDAP admin password if OpennDJ is used for persistence.",
               "$ref":"#/definitions/password"
            },
            "orgName":{
               "description":"Organization name. Used for certificate creation.",
               "type":"string",
               "pattern":"^[a-zA-Z]+$"
            },
            "redisPassword":{
               "description":"Redis admin password if `config.configmap.cnCacheType` is set to `REDIS`",
               "$ref":"#/definitions/password"
            },
            "resources":{
               "description":"Resource specs.",
               "type":"object",
               "properties":{
                  "limits":{
                     "type":"object",
                     "properties":{
                        "cpu":{
                           "description":"CPU limit.",
                           "type":"string",
                           "pattern":"^[0-9m]+$"
                        },
                        "memory":{
                           "description":"Memory limit.",
                           "type":"string",
                           "pattern":"^[0-9Mi]+$"
                        }
                     }
                  },
                  "requests":{
                     "type":"object",
                     "properties":{
                        "cpu":{
                           "description":"CPU request.",
                           "type":"string",
                           "pattern":"^[0-9m]+$"
                        },
                        "memory":{
                           "description":"Memory request.",
                           "type":"string",
                           "pattern":"^[0-9Mi]+$"
                        }
                     }
                  }
               }
            },
            "state":{
               "description":"State code. Used for certificate creation.",
               "type":"string",
               "pattern":"^[a-zA-Z]+$"
            }
         }
      },
      "config-api":{
         "description":"Config Api endpoints can be used to configure the auth-server, which is an open-source OpenID Connect Provider (OP) and UMA Authorization Server (AS).",
         "type":"object",
         "properties":{

         }
      },
      "cr-rotate":{
         "description":"CacheRefreshRotation is a special container to monitor cache refresh on oxTrust containers. This may be depreciated.",
         "type":"object",
         "properties":{

         }
      },
      "fido2":{
         "description":"FIDO 2.0 (FIDO2) is an open authentication standard that enables leveraging common devices to authenticate to online services in both mobile and desktop environments.",
         "type":"object",
         "properties":{

         }
      },
      "global":{
         "description":"Parameters used globally across all services helm charts.",
         "type":"object",
         "properties":{
            "alb":{
               "type":"object",
               "properties":{
                  "ingress":{
                     "description":"Activates ALB ingress",
                     "type":"boolean"
                  }
               }
            },
            "auth-server":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable auth-server chart. You should never set this to false.",
                     "type":"boolean"
                  },
               "authServerServiceName":{
                     "description":"Name of the auth-server service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                           },
               "appLoggers":{
                  "type":"object",
                  "properties":{
                     "authLogTarget":{
                        "description":"jans-auth.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "authLogLevel":{
                        "description":"jans-auth.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "httpLogTarget":{
                        "description":"http_request_response target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "httpLogLevel":{
                        "description":"http_request_response level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "persistenceLogTarget":{
                        "description":"jans-auth_persistence.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "persistenceLogLevel":{
                        "description":"jans-auth_persistence.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "persistenceDurationLogTarget":{
                        "description":"jans-auth_persistence_duration.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "persistenceDurationLogLevel":{
                        "description":"jans-auth_persistence_duration.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "ldapStatsLogTarget":{
                        "description":"jans-auth_persistence_ldap_statistics.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "ldapStatsLogLevel":{
                        "description":"jans-auth_persistence_ldap_statistics.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "scriptLogTarget":{
                        "description":"jans-auth_script.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "scriptLogLevel":{
                        "description":"jans-auth_script.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "auditStatsLogTarget":{
                        "description":"jans-auth_audit.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "auditStatsLogLevel":{
                        "description":"jans-auth_audit.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           }
                  }
            }
               }
            },
            "auth-server-key-rotation":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the auth-server-key rotation cronjob chart.",
                     "type":"boolean"
                  }
               }
            },
            "awsStorageType":{
               "description":"Volume stroage type if using AWS volumes.",
               "type":"string",
               "pattern":"^(io1|io2|gp2|st1|sc1)$"
            },
            "azureStorageAccountType":{
               "description":"Volume storage type if using Azure disks.",
               "type":"string",
               "pattern":"^(Standard_LRS|Premium_LRS|StandardSSD_LRS|UltraSSD_LRS)$"
            },
            "azureStorageKind":{
               "description":"Azure storage kind if using Azure disks",
               "type":"string",
               "pattern":"^(Managed)$"
            },
            "client-api":{
               "type":"object",
               "properties":{
                  "clientApiServerServiceName":{
                     "description":"Name of the client-api service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                  },
                  "enabled":{
                     "description":"Boolean flag to enable/disable the client-api chart.",
                     "type":"boolean"
                  },
                  "appLoggers":{
                  "type":"object",
                  "properties":{
                     "clientApiLogTarget":{
                        "description":"client-api.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "clientApiLogLevel":{
                        "description":"client-api.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           }
                  }
            }
               }
            },
            "cloud":{
               "type":"object",
               "properties":{
                  "testEnviroment":{
                     "description":"Boolean flag if enabled will strip resources requests and limits from all services.",
                     "type":"boolean"
                  }
               }
            },
            "cnJackrabbitCluster":{
               "description":"Boolean flag if enabled will enable jackrabbit in cluster mode with Postgres.",
               "type":"boolean"
            },
            "cnPersistenceType":{
               "description":"Persistence backend to run Gluu with ldap|couchbase|hybrid|sql|spanner.",
               "type":"string",
               "pattern":"^(ldap|couchbase|hybrid|sql|spanner)$"
            },
            "cnObExtSigningJwksUri":{
               "description":"Open banking external signing jwks uri. Used in SSA Validation.",
               "type":"string"
            },
            "cnObExtSigningJwksCrt":{
               "description":"Open banking external signing jwks AS certificate authority string. Used in SSA Validation. This must be encoded using base64.. Used when `.global.cnObExtSigningJwksUri` is set.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObExtSigningJwksKey":{
               "description":"Open banking external signing jwks AS key string. Used in SSA Validation. This must be encoded using base64. Used when `.global.cnObExtSigningJwksUri` is set.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObExtSigningJwksKeyPassPhrase":{
               "description":"Open banking external signing jwks AS key passphrase to unlock provided key. This must be encoded using base64. Used when `.global.cnObExtSigningJwksUri` is set.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObExtSigningAlias":{
               "description":"Open banking external signing AS Alias. This is a kid value.Used in SSA Validation, kid used while encoding a JWT sent to token URL i.e XkwIzWy44xWSlcWnMiEc8iq9s2G",
               "type":"string"
            },
            "cnObStaticSigningKeyKid":{
               "description":"Open banking  signing AS kid to force the AS to use a specific signing key. i.e Wy44xWSlcWnMiEc8iq9s2G",
               "type":"string"
            },
            "cnObTransportCrt":{
               "description":"Open banking AS transport crt. Used in SSA Validation. This must be encoded using base64.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObTransportKey":{
               "description":"Open banking AS transport key. Used in SSA Validation. This must be encoded using base64.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObTransportKeyPassPhrase":{
               "description":"Open banking AS transport key passphrase to unlock AS transport key. This must be encoded using base64.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "cnObTransportAlias":{
               "description":"Open banking transport Alias used inside the JVM.",
               "type":"string"
            },
            "cnObTransportTrustStore":{
               "description":"Open banking AS transport truststore in .p12 format. This is normally generated from the OB issuing CA, OB Root CA and Signing CA. Used when .global.cnObExtSigningJwksUri is set. Used in SSA Validation. This must be encoded using base64.",
               "type":"string",
               "pattern":"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "config":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the configuration chart. This normally should always be true",
                     "type":"boolean"
                  }
               }
            },
            "configAdapterName":{
               "description":"The config backend adapter that will hold Gluu configuration layer. google|kubernetes",
               "type":"string",
               "pattern":"^(kubernetes|google)$"
            },
            "configSecretAdapter":{
               "description":"The config backend adapter that will hold Gluu secret layer. google|kubernetes",
               "type":"string",
               "pattern":"^(kubernetes|google)$"
            },
            "cnGoogleApplicationCredentials":{
               "description":"Base64 encoded service account. The sa must have roles/secretmanager.admin to use Google secrets and roles/spanner.databaseUser to use Spanner.",
               "type":"string",
               "pattern":".*google-credentials.json\\b.*"
            },
            "config-api":{
               "type":"object",
               "properties":{
                  "configApiServerServiceName":{
                     "description":"Name of the config-api service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                  },
                  "enabled":{
                     "description":"Boolean flag to enable/disable the config-api chart.",
                     "type":"boolean"
                  },
                  "appLoggers":{
                  "type":"object",
                  "properties":{
                     "configApiLogTarget":{
                        "description":"configapi.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "configApiLogLevel":{
                        "description":"configapi.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           }
                  }
            }
               }
            },
            "cr-rotate":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the cr-rotate chart.",
                     "type":"boolean"
                  }
               }
            },
            "fqdn":{
               "description":"Fully qualified domain name to be used for Gluu installation. This address will be used to reach Gluu services.",
               "$ref":"#/definitions/fqdn-pattern"
            },
            "fido2":{
               "type":"object",
               "properties":{
                  "fido2ServiceName":{
                     "description":"Name of the fido2 service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                  },
                  "enabled":{
                     "description":"Boolean flag to enable/disable the fido2 chart.",
                     "type":"boolean"
                  },
                  "appLoggers":{
                  "type":"object",
                  "properties":{
                     "fido2LogTarget":{
                        "description":"fido2.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "fido2LogLevel":{
                        "description":"fido2.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "persistenceLogTarget":{
                        "description":"fido2_persistence.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "persistenceLogLevel":{
                        "description":"fido2_persistence.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           }
                  }
            }
               }
            },
            "gcePdStorageType":{
               "description":"GCE storage kind if using Google disks",
               "type":"string",
               "pattern":"^(pd-standard|pd-balanced|pd-ssd)$"
            },
            "isFqdnRegistered":{
               "description":"Boolean flag to enable mapping global.lbIp  to global.fqdn inside pods on clouds that provide static ip for loadbalancers. On cloud that provide only addresses to the LB this flag will enable a script to actively scan config.configmap.lbAddr and update the hosts file inside the pods automatically.",
               "type":"boolean"
            },
            "istio":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag that enables using istio side cars with Gluu services.",
                     "type":"boolean"
                  },
                  "ingress":{
                     "description":"Boolean flag that enables using istio gateway for Gluu. This assumes istio ingress is installed and hence the LB is available.",
                     "type":"boolean"
                  },
                  "namespace":{
                     "description":"The namespace istio is deployed in. The is normally istio-system.",
                     "type":"string",
                     "pattern":"^[a-z0-9-_/]+$"
                  }
               }
            },
            "jackrabbit":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the jackrabbit chart. For more information on how it is used inside Gluu https://gluu.org/docs/gluu-server/4.2/installation-guide/install-kubernetes/#working-with-jackrabbit. ",
                     "type":"boolean"
                  },
                  "jackRabbitServiceName":{
                     "description":"Name of the Jackrabbit service. Please keep it as default.",
                     "pattern":"^[a-z0-9-]+$"
                  }
               }
            },
            "lbIp":{
               "description":"The Loadbalancer IP created by nginx or istio on clouds that provide static IPs. This is not needed if `global.fqdn` is globally resolvable.",
               "$ref":"#/definitions/ip-pattern"
            },
            "nginx-ingress":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the nginx-ingress definitions chart.",
                     "type":"boolean"
                  }
               }
            },
            "opendj":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the OpenDJ  chart.",
                     "type":"boolean"
                  },
                  "ldapServiceName":{
                     "description":"Name of the OpenDJ service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                  }
               }
            },
            "oxshibboleth":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the oxShibbboleth chart.",
                     "type":"boolean"
                  }
               }
            },
            "distribution":{
               "description":"Gluu distributions supported are: default|openbanking.",
               "type":"string",
               "pattern":"^(default|openbanking)$"
            },
            "persistence":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the persistence chart.",
                     "type":"boolean"
                  }
               }
            },
            "scim":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag to enable/disable the SCIM chart.",
                     "type":"boolean"
                  },
               "scimServiceName":{
                     "description":"Name of the scim service. Please keep it as default.",
                     "type":"string",
                     "pattern":"^[a-z0-9-]+$"
                           },
               "appLoggers":{
                  "type":"object",
                  "properties":{
                     "authLogTarget":{
                        "description":"jans-scim.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "authLogLevel":{
                        "description":"jans-scim.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "persistenceLogTarget":{
                        "description":"jans-scim_persistence.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "persistenceLogLevel":{
                        "description":"jans-scim_persistence.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "persistenceDurationLogTarget":{
                        "description":"jans-scim_persistence_duration.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "persistenceDurationLogLevel":{
                        "description":"jans-scim_persistence_duration.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "ldapStatsLogTarget":{
                        "description":"jans-scim_persistence_ldap_statistics.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "ldapStatsLogLevel":{
                        "description":"jans-scim_persistence_ldap_statistics.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           },
                     "scriptLogTarget":{
                        "description":"jans-scim_script.log target",
                        "type":"string",
                        "pattern":"^(STDOUT|FILE)$"
                                    },
                     "scriptLogLevel":{
                        "description":"jans-scim_script.log level",
                        "type":"string",
                        "pattern":"^(FATAL|ERROR|WARN|INFO|DEBUG|TRACE)$"
                           }
                  }
            }
               }
            },
            "storageClass":{
               "description":"StorageClass section for Jackrabbit and OpenDJ charts. This is not currently used by the openbanking distribution. You may specify custom parameters as needed.",
               "type":"object",
               "properties":{
                  "allowVolumeExpansion":{
                     "type":"boolean"
                  },
                  "allowedTopologies":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "mountOptions":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "parameters":{
                     "type":"object",
                     "properties":{
                        "fsType":{
                           "type":"string"
                        },
                        "kind":{
                           "type":"string"
                        },
                        "pool":{
                           "type":"string"
                        },
                        "storageAccountType":{
                           "type":"string"
                        },
                        "type":{
                           "type":"string"
                        }
                     }
                  },
                  "provisioner":{
                     "type":"string"
                  },
                  "reclaimPolicy":{
                     "type":"string"
                  },
                  "volumeBindingMode":{
                     "type":"string"
                  }
               }
            },
            "upgrade":{
               "type":"object",
               "properties":{
                  "enabled":{
                     "description":"Boolean flag used when running helm upgrade command. This allows upgrading the chart without immutable objects errors.",
                     "type":"boolean"
                  }
               }
            }
         }
      },
      "jackrabbit":{
         "description":"Jackrabbit Oak is a complementary implementation of the JCR specification. It is an effort to implement a scalable and performant hierarchical content repository for use as the foundation of modern world-class web sites and other demanding content applications. https://jackrabbit.apache.org/jcr/index.html .",
         "type":"object",
         "properties":{

         }
      },
      "nginx-ingress":{
         "description":"Nginx ingress definitions chart",
         "type":"object",
         "properties":{

         }
      },
      "opendj":{
         "description":"OpenDJ is a directory server which implements a wide range of Lightweight Directory Access Protocol and related standards, including full compliance with LDAPv3 but also support for Directory Service Markup Language (DSMLv2).Written in Java, OpenDJ offers multi-master replication, access control, and many extensions.",
         "type":"object",
         "properties":{

         }
      },
      "oxpassport":{
		  "description":"Gluu interface to Passport.js to support social login and inbound identity.",
         "type":"object",
         "properties":{

         }
      },
      "oxshibboleth":{
		  "description":"Shibboleth project for the Gluu Server's SAML IDP functionality.",
         "type":"object",
         "properties":{

         }
      },
      "persistence":{
		  "description":"Job to generate data and intial config for Gluu Server persistence layer.",
         "type":"object",
         "properties":{

         }
      },
      "scim":{
		  "description":"System for Cross-domain Identity Management (SCIM) version 2.0",
         "type":"object",
         "properties":{

         }
      }
   },
   "allOf":[
      {
         "$ref":"#/definitions/admin-ui-enabled"
      },
      {
         "$ref":"#/definitions/auth-server-enabled"
      },
      {
         "$ref":"#/definitions/auth-server-key-rotation-enabled"
      },
      {
         "$ref":"#/definitions/casa-enabled"
      },
      {
         "$ref":"#/definitions/client-api-enabled"
      },
      {
         "$ref":"#/definitions/config-api-enabled"
      },
      {
         "$ref":"#/definitions/cr-rotate-enabled"
      },
      {
         "$ref":"#/definitions/fido2-enabled"
      },
      {
         "$ref":"#/definitions/jackrabbit-enabled"
      },
      {
         "$ref":"#/definitions/nginx-ingress-enabled"
      },
      {
         "$ref":"#/definitions/opendj-enabled"
      },
      {
         "$ref":"#/definitions/oxpassport-enabled"
      },
      {
         "$ref":"#/definitions/oxshibboleth-enabled"
      },
      {
         "$ref":"#/definitions/persistence-enabled"
      },
      {
         "$ref":"#/definitions/scim-enabled"
      }
   ],
   "definitions":{
      "password":{
         "anyOf":[
            {
               "type":"string",
               "minLength":8,
               "pattern":"",
               "description":"Password does not meet requirements. The password must contain one digit, one uppercase letter, one lower case letter and one symbol",
               "errors":{
                  "minLength":"Password minimum 6 character",
                  "pattern":"Password does not meet requirements. The password must contain one digit, one uppercase letter, one lower case letter and one symbol"
               }
            },
            {
               "type":"string",
               "maxLength":0
            }
         ]
      },
      "password-pattern":{
         "type":"string",
         "minLength":6,
         "pattern":"",
         "errors":{
            "minLength":"Password minimum 6 character",
            "pattern":"Password does not meet requirements. The password must contain one digit, one uppercase letter, one lower case letter and one symbol"
         }
      },
      "email-format":{
         "type":"string",
         "format":"email"
      },
      "fqdn-pattern":{
         "anyOf":[
            {
               "type":"string",
               "errors":{
                  "pattern":"Setting not FQDN structured. Please enter a FQDN with the format demoexample.gluu.org"
               }
            },
            {
               "type":"string",
               "maxLength":0
            }
         ]
      },
      "url-pattern":{
         "anyOf":[
            {
               "type":"string",
               "pattern":"(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)",
               "errors":{
                  "pattern":"URL pattern is not meeting standards."
               }
            },
            {
               "type":"string",
               "maxLength":0
            }
         ]
      },
      "ip-pattern":{
         "anyOf":[
            {
               "type":"string",
               "pattern":"^(\\*|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$",
               "errors":{
                  "pattern":"Not a valid IP."
               }
            },
            {
               "type":"string",
               "maxLength":0
            }
         ]
      },
      "admin-ui-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "admin-ui":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "admin-ui":{
                  "required":[
                     "image",
                     "replicas",
                     "resources"
                  ],
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "auth-server-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "auth-server":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "auth-server":{
                  "required":[
                     "image",
                     "replicas",
                     "resources"
                  ],
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "auth-server-key-rotation-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "auth-server-key-rotation":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "auth-server-key-rotation":{
                  "properties":{
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "keysLife":{
                        "description":"Auth server key rotation keys life in hours",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  },
                  "required":[
                     "image",
                     "resources",
                     "keysLife"
                  ]
               }
            }
         },
         "else":true
      },
      "casa-enabled":{
         "if":{
            "properties":{
               "config":{
                  "properties":{
                     "configmap":{
                        "properties":{
                           "cnCasaEnabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "casa":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "casaServiceName":{
                              "description":"Name of the casa service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "client-api-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "client-api":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "client-api":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "config-api-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "config-api":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "config-api":{
                  "required":[
                     "image",
                     "replicas",
                     "resources"
                  ],
                  "type":"object",
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "cr-rotate-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "cr-rotate":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "cr-rotate":{
                  "properties":{
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "crRotateServiceName":{
                              "description":"Name of the cr-rotate service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "fido2-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "fido2":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "fido2":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "fido2ServiceName":{
                              "description":"Name of the Fido2 service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "jackrabbit-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "jackrabbit":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "jackrabbit":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "secrets":{
                        "type":"object",
                        "properties":{
                           "cnJackrabbitAdminPass": {
                              "description":"Jackrabbit admin uid password",
                              "$ref":"#/definitions/password"
                           },
                           "cnJackrabbitPostgresPass":{
                              "description":"Jackrabbit Postgres uid password",
                              "$ref":"#/definitions/password"
                           }
                        }
                     },
                     "storage":{
                        "type":"object",
                        "properties":{
                           "size":{
                              "description":"Jackrabbit volume size",
                              "type":"string",
                              "pattern":"^[0-9]Gi+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "nginx-ingress-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "nginx-ingress":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "nginx-ingress":{
                  "type":"object",
                  "properties":{
                     "ingress":{
                        "type":"object",
                        "required":[
                           "openidConfigEnabled",
                           "uma2ConfigEnabled",
                           "webfingerEnabled",
                           "webdiscoveryEnabled",
                           "configApiEnabled",
                           "u2fConfigEnabled",
                           "authServerEnabled",
                           "authServerProtectedToken",
                           "authServerProtectedRegister",
                           "additionalAnnotations",
                           "path",
                           "hosts",
                           "tls"
                        ],
                        "properties":{
                           "adminUiEnabled":{
                              "description":"Enable Admin UI endpoints. COMING SOON.",
                              "type":"boolean"
                           },
                           "adminUiLabels":{
                              "description":"Admin UI ingress resource labels. key app is taken.",
                              "type":"object"
                           },
                           "openidConfigEnabled":{
                              "description":"Enable endpoint /.well-known/openid-configuration",
                              "type":"boolean"
                           },
                           "openidConfigLabels":{
                              "description":"openid-configuration ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "uma2ConfigEnabled":{
                              "description":"Enable endpoint /.well-known/uma2-configuration",
                              "type":"boolean"
                           },
                           "uma2ConfigLabels":{
                              "description":"uma2 config ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "webfingerEnabled":{
                              "description":"Enable endpoint /.well-known/webfinger",
                              "type":"boolean"
                           },
                           "webfingerLabels":{
                              "description":"webfinger ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "webdiscoveryEnabled":{
                              "description":"Enable endpoint /.well-known/simple-web-discovery",
                              "type":"boolean"
                           },
                           "webdiscoveryLabels":{
                              "description":"webdiscovery ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "scimConfigEnabled":{
                              "description":"Enable endpoint /.well-known/scim-configuration",
                              "type":"boolean"
                           },
                           "scimConfigLabels":{
                              "description":"SCIM config ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "scimEnabled":{
                              "description":"Enable SCIM endpoints /jans-scim",
                              "type":"boolean"
                           },
                           "scimLabels":{
                              "description":"SCIM ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "configApiEnabled":{
                              "description":"Enable config API endpoints /jans-config-api",
                              "type":"boolean"
                           },
                           "configApiLabels":{
                              "description":"configAPI ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "u2fConfigEnabled":{
                              "description":"Enable endpoint /.well-known/fido-configuration",
                              "type":"boolean"
                           },
                           "u2fConfigLabels":{
                              "description":"u2f ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "fido2ConfigEnabled":{
                              "description":"Enable endpoint /.well-known/fido2-configuration",
                              "type":"boolean"
                           },
                           "fido2ConfigLabels":{
                              "description":"fido2 ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "authServerEnabled":{
                              "description":"Enable Auth server endpoints /jans-auth",
                              "type":"boolean"
                           },
                           "authServerLabels":{
                              "description":"Auth server config ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "authServerProtectedToken":{
                              "description":"Enable mTLS on Auth server endpoint /jans-auth/restv1/token",
                              "type":"boolean"
                           },
                           "authServerProtectedTokenLabels":{
                              "description":"Auth server protected token ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "authServerProtectedRegister":{
                              "description":"Enable mTLS onn Auth server endpoint /jans-auth/restv1/register",
                              "type":"boolean"
                           },
                           "authServerProtectedRedisterLabels":{
                              "description":"Auth server protected token ingress resource labels. key app is taken",
                              "type":"object"
                           },
                           "additionalAnnotations":{
                              "description":"Additional annotations that will be added across all ingress definitions in the format of {cert-manager.io/issuer: \"letsencrypt-prod\"}",
                              "type":"object"
                           },
                           "hosts":{
                              "type":"array",
                              "items":{
                                 "$ref":"#/definitions/fqdn-pattern"
                              }
                           },
                           "path":{
                              "type":"string"
                           },
                           "tls":{
                              "description":"Secret holding HTTPS CA cert and key.",
                              "type":"array",
                              "items":{
                                 "type":"object",
                                 "properties":{
                                    "hosts":{
                                       "type":"array",
                                       "items":{
                                          "$ref":"#/definitions/fqdn-pattern"
                                       }
                                    },
                                    "secretName":{
                                       "type":"string",
                                       "pattern":"^[a-z-]+$"
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "opendj-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "opendj":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "opendj":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "multiCluster":{
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "description":"Enable OpenDJ multiCluster mode. This flag enabbles loading keys under `opendj.multiCluster`",
                              "type":"boolean"
                           },
                           "serfAdvertiseAddrSuffix":{
                              "description":"OpenDJ Serf advertise address for the cluster",
                              "type":"string"
                           },
                           "serfKey":{
                              "description":"Serf key. This key will automatically sync across clusters.",
                              "type":"string"
                           },
                           "serfPeers":{
                              "description":"Serf peer addresses. One per cluster.",
                              "type":"array",
                              "items":{
                                 "type":"string"
                              }
                           }
                        }
                     },
                     "persistence":{
                        "type":"object",
                        "properties":{
                           "size":{
                              "description":"OpenDJ volume size",
                              "type":"string",
                              "pattern":"^[0-9]Gi+$"
                           }
                        }
                     },
                     "ports":{
                        "type":"object",
                        "properties":{
                           "tcp-admin":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           },
                           "tcp-ldap":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           },
                           "tcp-ldaps":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           },
                           "tcp-repl":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           },
                           "tcp-serf":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           },
                           "udp-serf":{
                              "type":"object",
                              "properties":{
                                 "nodePort":{
                                    "type":"string"
                                 },
                                 "port":{
                                    "type":"integer"
                                 },
                                 "protocol":{
                                    "type":"string"
                                 },
                                 "targetPort":{
                                    "type":"integer"
                                 }
                              }
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "oxpassport-enabled":{
         "if":{
            "properties":{
               "config":{
                  "properties":{
                     "configmap":{
                        "properties":{
                           "cnPassportEnabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "oxpassport":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "oxPassportServiceName":{
                              "description":"Name of the oxPassport service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "oxshibboleth-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "oxshibboleth":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "oxshibboleth":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "oxShibbolethServiceName":{
                              "description":"Name of the oxShibboleth service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "persistence-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "persistence":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "persistence":{
                  "required":[
                     "image",
                     "resources"
                  ],
                  "type":"object",
                  "properties":{
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      },
      "scim-enabled":{
         "if":{
            "properties":{
               "global":{
                  "properties":{
                     "scim":{
                        "properties":{
                           "enabled":{
                              "const":"true"
                           }
                        }
                     }
                  }
               }
            }
         },
         "then":{
            "properties":{
               "scim":{
                  "required":[
                     "image",
                     "replicas",
                     "resources",
                     "service"
                  ],
                  "type":"object",
                  "properties":{
                     "hpa":{
                        "description":"Configure the HorizontalPodAutoscaler",
                        "type":"object",
                        "properties":{
                           "enabled":{
                              "type":"boolean"
                           },
                           "minReplicas":{
                              "type":"integer"
                           },
                           "maxReplicas":{
                              "type":"integer"
                           },
                           "targetCPUUtilizationPercentage":{
                              "type":"integer"
                           },
                           "metrics":{
                              "description":"metrics if targetCPUUtilizationPercentage is not set",
                              "type":"array"
                           },
                           "behavior":{
                              "description":"Scaling Policies",
                              "type":"object"
                           }
                        }
                     },
                     "usrEnvs":{
                        "description":"Add custom normal and secret envs to the service",
                        "type":"object",
                        "properties":{
                           "normal":{
                              "description":"Add custom normal envs to the service",
                              "type":"object"
                           },
                           "secret":{
                              "description":"Add custom secret envs to the service",
                              "type":"object"
                           }
                        }
                     },
                     "dnsPolicy":{
                        "description":"Add custom dns policy",
                        "type":"string",
                        "pattern":"^(Default|ClusterFirst|ClusterFirstWithHostNet|None|)$"
                     },
                     "dnsConfig":{
                        "description":"Add custom dns config",
                        "type":"object"
                     },
                     "image":{
                        "type":"object",
                        "properties":{
                           "pullPolicy":{
                              "description":"Image pullPolicy to use for deploying.",
                              "type":"string",
                              "pattern":"^(Always|Never|IfNotPresent)$"
                           },
                           "repository":{
                              "description":"Image  to use for deploying",
                              "type":"string",
                              "pattern":"^[a-z0-9-_/]+$"
                           },
                           "tag":{
                              "description":"Image  tag to use for deploying.",
                              "type":"string",
                              "pattern":"^[a-z0-9-_.]+$"
                           }
                        }
                     },
                     "replicas":{
                        "description":"Service replica number.",
                        "type":"integer"
                     },
                     "resources":{
                        "description":"Resource specs.",
                        "type":"object",
                        "properties":{
                           "limits":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU limit.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory limit.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           },
                           "requests":{
                              "type":"object",
                              "properties":{
                                 "cpu":{
                                    "description":"CPU request.",
                                    "type":"string",
                                    "pattern":"^[0-9m]+$"
                                 },
                                 "memory":{
                                    "description":"Memory request.",
                                    "type":"string",
                                    "pattern":"^[0-9Mi]+$"
                                 }
                              }
                           }
                        }
                     },
                     "service":{
                        "type":"object",
                        "properties":{
                           "scimServiceName":{
                              "description":"Name of the SCIM service. Please keep it as default.",
                              "type":"string",
                              "pattern":"^[a-z0-9-]+$"
                           }
                        }
                     }
                  }
               }
            }
         },
         "else":true
      }
   }
}