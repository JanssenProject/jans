# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
# Required environment variables for generating Gluu server initial config
# -- Add custom normal and secret envs to the service.
usrEnvs:
  # -- Add custom normal envs to the service.
  # variable1: value1
  normal: {}
  # -- Add custom secret envs to the service.
  # variable1: value1
  secret: {}
# -- Admin password to log in to the UI.
adminPassword: Test1234#
# -- City. Used for certificate creation.
city: Austin
configmap:
  # -- Jetty header size in bytes in the auth server
  cnJettyRequestHeaderSize: 8192
  # -- SQL database dialect. `mysql` or `pgsql`
  cnSqlDbDialect: mysql
  # -- SQL database host uri.
  cnSqlDbHost: my-release-mysql.default.svc.cluster.local
  # -- SQL database port.
  cnSqlDbPort: 3306
  # -- SQL database name.
  cnSqlDbName: jans
  # -- SQL database username.
  cnSqlDbUser: jans
  # -- SQL database timezone.
  cnSqlDbTimezone: UTC
  # -- SQL password file holding password from config.configmap.cnSqldbUserPassword .
  cnSqlPasswordFile: /etc/jans/conf/sql_password
  # -- SQL password  injected as config.configmap.cnSqlPasswordFile .
  cnSqldbUserPassword: Test1234#
  # -- Cache type. `NATIVE_PERSISTENCE`, `REDIS`. or `IN_MEMORY`. Defaults to `NATIVE_PERSISTENCE` .
  cnCacheType: NATIVE_PERSISTENCE
  # -- Enable Casa flag .
  cnCasaEnabled: false
  # -- Client-api OAuth client admin certificate common name. This should be left to the default value client-api .
  cnClientApiAdminCertCn: client-api
  # -- Client-api OAuth client application certificate common name. This should be left to the default value client-api.
  cnClientApiApplicationCertCn: client-api
  # -- Client-api bind address. This limits what ip ranges can access the client-api. This should be left as * and controlled by a NetworkPolicy
  cnClientApiBindIpAddresses: "*"
  containerMetadataName: kubernetes
  # -- The name of the Kubernetes ConfigMap that will hold the configuration layer
  cnConfigKubernetesConfigMap: cn
  # -- The prefix of couchbase buckets. This helps with separation in between different environments and allows for the same couchbase cluster to be used by different setups of Gluu.
  cnCouchbaseBucketPrefix: jans
  # -- Location of `couchbase.crt` used by Couchbase SDK for tls termination. The file path must end with couchbase.crt. In mTLS setups this is not required.
  cnCouchbaseCertFile: /etc/certs/couchbase.crt
  # -- Couchbase certificate authority string. This must be encoded using base64. This can also be found in your couchbase UI Security > Root Certificate. In mTLS setups this is not required.
  cnCouchbaseCrt: SWFtTm90YVNlcnZpY2VBY2NvdW50Q2hhbmdlTWV0b09uZQo=
  # -- The number of replicas per index created. Please note that the number of index nodes must be one greater than the number of index replicas. That means if your couchbase cluster only has 2 index nodes you cannot place the number of replicas to be higher than 1.
  cnCouchbaseIndexNumReplica: 0
  # -- Couchbase password for the restricted user config.configmap.cnCouchbaseUser  that is often used inside the services. The password must contain one digit, one uppercase letter, one lower case letter and one symbol .
  cnCouchbasePassword: P@ssw0rd
  # -- The location of the Couchbase restricted user config.configmap.cnCouchbaseUser password. The file path must end with couchbase_password
  cnCouchbasePasswordFile: /etc/gluu/conf/couchbase_password
  # -- The Couchbase super user (admin) user name. This user is used during initialization only.
  cnCouchbaseSuperUser: admin
  # -- Couchbase password for the super user config.configmap.cnCouchbaseSuperUser  that is used during the initialization process. The password must contain one digit, one uppercase letter, one lower case letter and one symbol
  cnCouchbaseSuperUserPassword: Test1234#
  # -- The location of the Couchbase restricted user config.configmap.cnCouchbaseSuperUser password. The file path must end with couchbase_superuser_password.
  cnCouchbaseSuperUserPasswordFile: /etc/gluu/conf/couchbase_superuser_password
  # -- Couchbase URL. Used only when global.cnPersistenceType is hybrid or couchbase. This should be in FQDN format for either remote or local Couchbase clusters. The address can be an internal address inside the kubernetes cluster
  cnCouchbaseUrl: cbgluu.default.svc.cluster.local
  # -- Couchbase restricted user. Used only when global.cnPersistenceType is hybrid or couchbase.
  cnCouchbaseUser: gluu
  # -- Document store type to use for shibboleth files JCA or LOCAL. Note that if JCA is selected Apache Jackrabbit will be used. Jackrabbit also enables loading custom files across all services easily.
  cnDocumentStoreType: JCA
  # -- Jackrabbit admin uid.
  cnJackrabbitAdminId: admin
  # -- The location of the Jackrabbit admin uid config.cnJackrabbitAdminId. The file path must end with jackrabbit_admin_id.
  cnJackrabbitAdminIdFile: /etc/gluu/conf/jackrabbit_admin_id
  # -- The location of the Jackrabbit admin password jackrabbit.secrets.cnJackrabbitAdminPassword. The file path must end with jackrabbit_admin_password.
  cnJackrabbitAdminPasswordFile: /etc/gluu/conf/jackrabbit_admin_password
  # -- Jackrabbit postgres database name.
  cnJackrabbitPostgresDatabaseName: jackrabbit
  # -- Postgres url
  cnJackrabbitPostgresHost: postgresql.postgres.svc.cluster.local
  # -- The location of the Jackrabbit postgres password file jackrabbit.secrets.cnJackrabbitPostgresPassword. The file path must end with postgres_password.
  cnJackrabbitPostgresPasswordFile: /etc/gluu/conf/postgres_password
  # -- Jackrabbit Postgres port
  cnJackrabbitPostgresPort: 5432
  # -- Jackrabbit Postgres uid
  cnJackrabbitPostgresUser: jackrabbit
  # -- Interval between files sync (default to 300 seconds).
  cnJackrabbitSyncInterval: 300
  # -- Jackrabbit internal url. Normally left as default.
  cnJackrabbitUrl: "http://jackrabbit:8080"
  # [google_envs] Envs related to using Google
  # -- Service account with roles roles/secretmanager.admin base64 encoded string. This is used often inside the services to reach the configuration layer. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnGoogleSecretManagerServiceAccount: SWFtTm90YVNlcnZpY2VBY2NvdW50Q2hhbmdlTWV0b09uZQo=
  # -- Project id of the google project the secret manager belongs to. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnGoogleProjectId: google-project-to-save-config-and-secrets-to
  # [google_spanner_envs] Envs related to using Google Secret Manager to store config and secret layer
  # -- Google Spanner ID. Used only when global.cnPersistenceType is spanner.
  cnGoogleSpannerInstanceId: ""
  # -- Google Spanner Database ID. Used only when global.cnPersistenceType is spanner.
  cnGoogleSpannerDatabaseId: ""
  # [google_spanner_envs] END
  # [google_secret_manager_envs] Envs related to using Google Secret Manager to store config and secret layer
  # -- Secret version to be used for secret configuration. Defaults to latest and should normally always stay that way. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnSecretGoogleSecretVersionId: "latest"
  # -- Prefix for Gluu secret in Google Secret Manager. Defaults to gluu. If left gluu-secret secret will be created. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnSecretGoogleSecretNamePrefix: gluu
  # -- Passphrase for Gluu secret in Google Secret Manager. This is used for encrypting and decrypting data from the Google Secret Manager. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnGoogleSecretManagerPassPhrase: Test1234#
  # -- Secret version to be used for configuration. Defaults to latest and should normally always stay that way. Used only when global.configAdapterName and global.configSecretAdapter is set to google. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnConfigGoogleSecretVersionId: "latest"
  # -- Prefix for Gluu configuration secret in Google Secret Manager. Defaults to gluu. If left intact gluu-configuration secret will be created. Used only when global.configAdapterName and global.configSecretAdapter is set to google.
  cnConfigGoogleSecretNamePrefix: gluu
  # [google_secret_manager_envs] END
  # [google_envs] END
  # -- OpenDJ internal address. Leave as default. Used when `global.cnPersistenceType` is set to `ldap`.
  cnLdapUrl: "opendj:1636"
  # -- Value passed to Java option -XX:MaxRAMPercentage
  cnMaxRamPercent: "75.0"
  # -- Boolean flag to enable/disable passport chart
  cnPassportEnabled: false
  # -- Specify data that should be saved in LDAP (one of default, user, cache, site, token, or session; default to default). Note this environment only takes effect when `global.cnPersistenceType`  is set to `hybrid`.
  cnPersistenceLdapMapping: default
  # -- Redis Sentinel Group. Often set when `config.configmap.cnRedisType` is set to `SENTINEL`. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.
  cnRedisSentinelGroup: ""
  # -- Redis SSL truststore. Optional. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.
  cnRedisSslTruststore: ""
  # -- Redis service type. `STANDALONE` or `CLUSTER`. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.
  cnRedisType: STANDALONE
  # -- Redis URL and port number <url>:<port>. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.
  cnRedisUrl: "redis.redis.svc.cluster.local:6379"
  # -- Boolean to use SSL in Redis. Can be used when  `config.configmap.cnCacheType` is set to `REDIS`.
  cnRedisUseSsl: false
  # -- Enable SAML-related features; UI menu, etc.
  cnSamlEnabled: false
  # -- Kubernetes secret name holding configuration keys. Used when global.configSecretAdapter is set to kubernetes which is the default.
  cnSecretKubernetesSecret: cn
  # -- Loadbalancer address for AWS if the FQDN is not registered.
  lbAddr: ""
# -- Country code. Used for certificate creation.
countryCode: US
# -- Email address of the administrator usually. Used for certificate creation.
email: support@gluu.org
image:
  # -- Image  to use for deploying.
  repository: janssenproject/configurator
  # -- Image  tag to use for deploying.
  tag: 1.0.0-beta.14
  # -- Image Pull Secrets
  pullSecrets: [ ]
# -- LDAP admin password if OpennDJ is used for persistence.
ldapPassword: P@ssw0rds
# -- Organization name. Used for certificate creation.
orgName: Gluu
# -- Redis admin password if `config.configmap.cnCacheType` is set to `REDIS`.
redisPassword: P@assw0rd
# -- Resource specs.
resources:
  limits:
    # -- CPU limit.
    cpu: 300m
    # -- Memory limit.
    memory: 300Mi
  requests:
    # -- CPU request.
    cpu: 300m
    # -- Memory request.
    memory: 300Mi
# -- State code. Used for certificate creation.
state: TX
# -- Configure any additional volumes that need to be attached to the pod
volumes: []
# -- Configure any additional volumesMounts that need to be attached to the containers
volumeMounts: []
# -- Add custom dns policy
dnsPolicy: ""
# -- Add custom dns config
dnsConfig: {}
# -- CE to CN Migration section
migration:
 # -- Boolean flag to enable migration from CE
 enabled: false
 # -- Directory holding all migration files
 migrationDir: /ce-migration
 # -- migration data-format depending on persistence backend.
 # Supported data formats are ldif, couchbase+json, spanner+avro, postgresql+json, and mysql+json.
 migrationDataFormat: ldif

cnOxtrustConfigGeneration: true

nameOverride: ""
fullNameOverride: ""

# -- Additional labels that will be added across all resources definitions in the format of {mylabel: "myapp"}
additionalLabels: { }
# -- Additional annotations that will be added across all resources  in the format of {cert-manager.io/issuer: "letsencrypt-prod"}. key app is taken
additionalAnnotations: { }
