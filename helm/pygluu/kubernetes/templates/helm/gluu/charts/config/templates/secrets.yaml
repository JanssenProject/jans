# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "config.fullname" . }}-gen-json-file
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: configurator
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
type: Opaque
stringData:
  generate.json: |-
    {
      "hostname": {{ .Values.global.fqdn | quote }},
      "country_code": {{ .Values.countryCode | quote }},
      "state": {{ .Values.state | quote }},
      "city": {{ .Values.city | quote }},
      "admin_pw": {{ .Values.adminPassword | quote }},
      "ldap_pw": {{ .Values.ldapPassword | quote }},
      "redis_pw": {{ .Values.redisPassword | quote }},
      "email": {{ .Values.email | quote }},
      "org_name": {{ .Values.orgName | quote }},
      {{ if eq .Values.global.cnPersistenceType "sql" }}
      "sql_pw": {{ .Values.configmap.cnSqldbUserPassword | quote }},
      {{- end }}
      {{ if or ( eq .Values.global.cnPersistenceType "couchbase" ) ( eq .Values.global.cnPersistenceType "hybrid" ) }}
      "couchbase_pw": {{ .Values.configmap.cnCouchbasePassword | quote }},
      "couchbase_superuser_pw": {{ .Values.configmap.cnCouchbaseSuperUserPassword | quote }},
      {{- end }}
      "auth_sig_keys": {{ index .Values "global" "auth-server" "authSigKeys" | quote }},
      "auth_enc_keys": {{ index .Values "global" "auth-server" "authEncKeys" | quote }},
      "optional_scopes": {{ list (include "config.optionalScopes" . | fromJsonArray | join ",") }}
    }

{{ if or ( eq .Values.global.cnPersistenceType "couchbase" ) ( eq .Values.global.cnPersistenceType "hybrid" ) }}
{{- if not .Values.global.istio.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-cb-crt
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
type: Opaque
data:
  couchbase.crt: {{ .Values.configmap.cnCouchbaseCrt }}
{{- end }}
{{- end }}
{{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.cnPersistenceType "spanner") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-google-sa
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
type: Opaque
data:
  google-credentials.json: {{ .Values.configmap.cnGoogleSecretManagerServiceAccount }}
{{- end}}

{{ if .Values.global.cnObExtSigningJwksCrt }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ob-ext-signing-jwks-crt-key-pin
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ob-ext-signing.crt: {{ .Values.global.cnObExtSigningJwksCrt }}
  {{ if .Values.global.cnObExtSigningJwksKey }}
  ob-ext-signing.key: {{ .Values.global.cnObExtSigningJwksKey }}
  {{- end }}
  {{ if .Values.global.cnObExtSigningJwksKeyPassPhrase }}
  ob-ext-signing.pin: {{ .Values.global.cnObExtSigningJwksKeyPassPhrase }}
  {{- end }}
{{- end }}
{{ if .Values.global.cnObTransportCrt }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ob-transport-crt-key-pin
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ob-transport.crt: {{ .Values.global.cnObTransportCrt }}
  {{ if .Values.global.cnObTransportKey }}
  ob-transport.key: {{ .Values.global.cnObTransportKey }}
  {{- end }}
  {{ if .Values.global.cnObTransportKeyPassPhrase }}
  ob-transport.pin: {{ .Values.global.cnObTransportKeyPassPhrase }}
  {{- end }}
{{- end }}
{{ if .Values.global.cnObTransportTrustStore }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ob-transport-truststore
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ob-transport-truststore.p12: {{ .Values.global.cnObTransportTrustStore }}
{{- end }}
{{- if or (eq .Values.global.cnPersistenceType "ldap") (eq .Values.global.cnPersistenceType "hybrid")  }}
---
# Consider removing secret after moving ldapPass to global. This is only used by the cronJob ldap backup.
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ldap-cron-pass
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
data:
    password: {{ .Values.ldapPassword | b64enc }}
{{- end}}
{{- if index .Values "global" "admin-ui" "enabled" }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-admin-ui-license
  labels:
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
data:
    admin_ui_api_key: {{ index .Values "global" "admin-ui" "adminUiApiKey" | b64enc }}
    admin_ui_product_code: {{ index .Values "global" "admin-ui" "adminUiProductCode" | b64enc }}
    admin_ui_shared_key: {{ index .Values "global" "admin-ui" "adminUiSharedKey" | b64enc }}
    admin_ui_management_key: {{ index .Values "global" "admin-ui" "adminUiManagementKey" | b64enc }}
{{- end}}