# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cr-rotate.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: cr-rotote
{{ include "cr-rotate.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ include "cr-rotate.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ include "cr-rotate.name" . }}
        release: {{ .Release.Name }}
        APP_NAME: cr-rotate
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
      containers:
        - name: {{ include "cr-rotate.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            {{- include "cr-rotate.usr-envs" . | indent 12 }}
            {{- include "cr-rotate.usr-secret-envs" . | indent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config-cm
            {{ if .Values.global.usrEnvs.secret }}
            - secretRef:
                name: {{ .Release.Name }}-global-user-custom-envs
            {{- end }}
            {{ if .Values.global.usrEnvs.normal }}
            - configMapRef:
                name: {{ .Release.Name }}-global-user-custom-envs
            {{- end }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or (eq .Values.global.cnPersistenceType "couchbase") (eq .Values.global.cnPersistenceType "hybrid") }}
            - name: cb-crt 
              mountPath: "/etc/certs/couchbase.crt"
              subPath: couchbase.crt
          {{- end }}
          {{- if or (eq .Values.global.storageClass.provisioner "microk8s.io/hostpath" ) (eq .Values.global.storageClass.provisioner "k8s.io/minikube-hostpath") }}
          resources: {}
          {{- else if .Values.global.cloud.testEnviroment }}
          resources: {}
          {{- else }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      {{- if or (eq .Values.global.cnPersistenceType "couchbase") (eq .Values.global.cnPersistenceType "hybrid") }}
      volumes:
      {{- with .Values.volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}

        - name: cb-crt 
          secret:
            secretName: {{ .Release.Name }}-cb-crt
      {{- end }}    
