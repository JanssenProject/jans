# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
# jackrabbit Environament Variables
# -- Jackrabbit Oak is a complementary implementation of the JCR specification. It is an effort to implement a scalable and performant hierarchical content repository for use as the foundation of modern world-class web sites and other demanding content applications
# https://jackrabbit.apache.org/jcr/index.html
# -- Configure the HorizontalPodAutoscaler
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
  # -- metrics if targetCPUUtilizationPercentage is not set
  metrics: []
  # -- Scaling Policies
  behavior: {}
# -- Add custom normal and secret envs to the service
usrEnvs:
  # -- Add custom normal envs to the service
  # variable1: value1
  normal: {}
  # -- Add custom secret envs to the service
  # variable1: value1
  secret: {}
# -- Add custom dns policy
dnsPolicy: ""
# -- Add custom dns config
dnsConfig: {}
image:
  # -- Image pullPolicy to use for deploying.
  pullPolicy: IfNotPresent
  # -- Image  to use for deploying.
  repository: gluufederation/jackrabbit
   # -- Image  tag to use for deploying.
  tag: 5.0.0_dev
  # -- Image Pull Secrets
  pullSecrets: [ ]
# -- Service replica number.
replicas: 1
# -- Resource specs.
resources:
  limits:
    # -- CPU limit.
    cpu: 1500m
    # -- Memory limit.
    memory: 1000Mi
  requests:
    # -- CPU request.
    cpu: 1500m
    # -- Memory request.
    memory: 1000Mi
secrets:
  # -- Jackrabbit admin uid password
  cnJackrabbitAdminPassword: admin
  # -- Jackrabbit Postgres uid password
  cnJackrabbitPostgresPassword: P@ssw0rd
service:
  # -- The name of the jackrabbit port within the jackrabbit service. Please keep it as default.
  name: http-jackrabbit
  # -- Port of the jackrabbit service. Please keep it as default.
  port: 8080
  # -- Default set to None If you want to make sure that connections from a particular client are passed to the same Pod each time, you can select the session affinity based on the client's IP addresses by setting this to ClientIP
  sessionAffinity: None
  # -- the maximum session sticky time if sessionAffinity is ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

storage:
  # -- Jackrabbit volume size
  size: 5Gi
  accessModes: ReadWriteOnce
  type: DirectoryOrCreate
# -- Configure the liveness healthcheck for the Jackrabbit if needed.
livenessProbe:
  # -- Executes tcp healthcheck.
  tcpSocket:
    port: http-jackrabbit
  initialDelaySeconds: 25
  periodSeconds: 25
  timeoutSeconds: 5
# -- Configure the readiness healthcheck for the Jackrabbit if needed.
readinessProbe:
  # -- Executes tcp healthcheck.
  tcpSocket:
    port: http-jackrabbit
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
# -- Configure any additional volumes that need to be attached to the pod
volumes: []
# -- Configure any additional volumesMounts that need to be attached to the containers
volumeMounts: []

nameOverride: ""
fullnameOverride: ""
# -- This id needs to be unique to each kubernetes cluster in a multi cluster setup
# west, east, south, north, region ...etc If left empty it will be randomly generated.
clusterId: ""

# VolumeMounts for StatefulSet
# jackrabbit-init vm
jackrabbitVolumeMounts:
  repository:
    mountPath: /opt/jackrabbit/repository
    name: jackrabbit-volume
  version:
    mountPath: /opt/jackrabbit/version
    name: jackrabbit-volume
  workspaces:
    mountPath: opt/jackrabbit/workspaces
    name: jackrabbit-volume

# -- Additional labels that will be added across the gateway in the format of {mylabel: "myapp"}
additionalLabels: { }
# -- Additional annotations that will be added across the gateway in the format of {cert-manager.io/issuer: "letsencrypt-prod"}
additionalAnnotations: { }
