/*
 * oxd-server
 * oxd-server
 *
 * OpenAPI spec version: 4.0
 * Contact: yuriyz@gluu.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.RegistersiteCustomAttributes;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RegisterSiteParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-06T05:18:25.296Z")
public class RegisterSiteParams {
  @SerializedName("authorization_redirect_uri")
  private String authorizationRedirectUri = null;

  @SerializedName("op_host")
  private String opHost = null;

  @SerializedName("post_logout_redirect_uris")
  private List<String> postLogoutRedirectUris = null;

  @SerializedName("application_type")
  private String applicationType = null;

  @SerializedName("response_types")
  private List<String> responseTypes = null;

  @SerializedName("grant_types")
  private List<String> grantTypes = null;

  @SerializedName("scope")
  private List<String> scope = null;

  @SerializedName("acr_values")
  private List<String> acrValues = null;

  @SerializedName("client_name")
  private String clientName = null;

  @SerializedName("client_jwks_uri")
  private String clientJwksUri = null;

  @SerializedName("client_token_endpoint_auth_method")
  private String clientTokenEndpointAuthMethod = null;

  @SerializedName("client_token_endpoint_auth_signing_alg")
  private String clientTokenEndpointAuthSigningAlg = null;

  @SerializedName("client_request_uris")
  private List<String> clientRequestUris = null;

  @SerializedName("client_frontchannel_logout_uris")
  private List<String> clientFrontchannelLogoutUris = null;

  @SerializedName("client_sector_identifier_uri")
  private String clientSectorIdentifierUri = null;

  @SerializedName("contacts")
  private List<String> contacts = null;

  @SerializedName("redirect_uris")
  private List<String> redirectUris = null;

  @SerializedName("ui_locales")
  private List<String> uiLocales = null;

  @SerializedName("claims_locales")
  private List<String> claimsLocales = null;

  @SerializedName("claims_redirect_uri")
  private List<String> claimsRedirectUri = null;

  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("client_secret")
  private String clientSecret = null;

  @SerializedName("trusted_client")
  private Boolean trustedClient = null;

  @SerializedName("access_token_as_jwt")
  private Boolean accessTokenAsJwt = null;

  @SerializedName("access_token_signing_alg")
  private String accessTokenSigningAlg = null;

  @SerializedName("rpt_as_jwt")
  private Boolean rptAsJwt = null;

  @SerializedName("logo_uri")
  private String logoUri = null;

  @SerializedName("client_uri")
  private String clientUri = null;

  @SerializedName("policy_uri")
  private String policyUri = null;

  @SerializedName("front_channel_logout_session_required")
  private Boolean frontChannelLogoutSessionRequired = null;

  @SerializedName("tos_uri")
  private String tosUri = null;

  @SerializedName("jwks")
  private String jwks = null;

  @SerializedName("id_token_binding_cnf")
  private String idTokenBindingCnf = null;

  @SerializedName("tls_client_auth_subject_dn")
  private String tlsClientAuthSubjectDn = null;

  @SerializedName("run_introspection_script_beforeaccess_token_as_jwt_creation_and_include_claims")
  private Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = null;

  @SerializedName("id_token_signed_response_alg")
  private String idTokenSignedResponseAlg = null;

  @SerializedName("id_token_encrypted_response_alg")
  private String idTokenEncryptedResponseAlg = null;

  @SerializedName("id_token_encrypted_response_enc")
  private String idTokenEncryptedResponseEnc = null;

  @SerializedName("user_info_signed_response_alg")
  private String userInfoSignedResponseAlg = null;

  @SerializedName("user_info_encrypted_response_alg")
  private String userInfoEncryptedResponseAlg = null;

  @SerializedName("user_info_encrypted_response_enc")
  private String userInfoEncryptedResponseEnc = null;

  @SerializedName("request_object_signing_alg")
  private String requestObjectSigningAlg = null;

  @SerializedName("request_object_encryption_alg")
  private String requestObjectEncryptionAlg = null;

  @SerializedName("request_object_encryption_enc")
  private String requestObjectEncryptionEnc = null;

  @SerializedName("default_max_age")
  private Integer defaultMaxAge = null;

  @SerializedName("require_auth_time")
  private Boolean requireAuthTime = null;

  @SerializedName("initiate_login_uri")
  private String initiateLoginUri = null;

  @SerializedName("authorized_origins")
  private List<String> authorizedOrigins = null;

  @SerializedName("access_token_lifetime")
  private Integer accessTokenLifetime = null;

  @SerializedName("software_id")
  private String softwareId = null;

  @SerializedName("software_version")
  private String softwareVersion = null;

  @SerializedName("software_statement")
  private String softwareStatement = null;

  @SerializedName("custom_attributes")
  private RegistersiteCustomAttributes customAttributes = null;

  public RegisterSiteParams authorizationRedirectUri(String authorizationRedirectUri) {
    this.authorizationRedirectUri = authorizationRedirectUri;
    return this;
  }

  /**
   * The only required parameter is the authorization_redirect_uri. This provide the URL where the user will be redirected after successful authorization at the OpenID Connect Provider (OP).
   * @return authorizationRedirectUri
   **/
  @ApiModelProperty(example = "https://client.example.org/cb", required = true, value = "The only required parameter is the authorization_redirect_uri. This provide the URL where the user will be redirected after successful authorization at the OpenID Connect Provider (OP).")
  public String getAuthorizationRedirectUri() {
    return authorizationRedirectUri;
  }

  public void setAuthorizationRedirectUri(String authorizationRedirectUri) {
    this.authorizationRedirectUri = authorizationRedirectUri;
  }

  public RegisterSiteParams opHost(String opHost) {
    this.opHost = opHost;
    return this;
  }

  /**
   * Provide the URL of OpenID Provider (OP). If missing, must be present in defaults.
   * @return opHost
   **/
  @ApiModelProperty(example = "https://<ophostname>", value = "Provide the URL of OpenID Provider (OP). If missing, must be present in defaults.")
  public String getOpHost() {
    return opHost;
  }

  public void setOpHost(String opHost) {
    this.opHost = opHost;
  }

  public RegisterSiteParams postLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
    return this;
  }

  public RegisterSiteParams addPostLogoutRedirectUrisItem(String postLogoutRedirectUrisItem) {
    if (this.postLogoutRedirectUris == null) {
      this.postLogoutRedirectUris = new ArrayList<String>();
    }
    this.postLogoutRedirectUris.add(postLogoutRedirectUrisItem);
    return this;
  }

  /**
   * Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.
   * @return postLogoutRedirectUris
   **/
  @ApiModelProperty(example = "[\"https://client.example.org/logout/page1\",\"https://client.example.org/logout/page2\",\"https://client.example.org/logout/page3\"]", value = "Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.")
  public List<String> getPostLogoutRedirectUris() {
    return postLogoutRedirectUris;
  }

  public void setPostLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
  }

  public RegisterSiteParams applicationType(String applicationType) {
    this.applicationType = applicationType;
    return this;
  }

  /**
   * Get applicationType
   * @return applicationType
   **/
  @ApiModelProperty(example = "web", value = "")
  public String getApplicationType() {
    return applicationType;
  }

  public void setApplicationType(String applicationType) {
    this.applicationType = applicationType;
  }

  public RegisterSiteParams responseTypes(List<String> responseTypes) {
    this.responseTypes = responseTypes;
    return this;
  }

  public RegisterSiteParams addResponseTypesItem(String responseTypesItem) {
    if (this.responseTypes == null) {
      this.responseTypes = new ArrayList<String>();
    }
    this.responseTypes.add(responseTypesItem);
    return this;
  }

  /**
   * Provide a list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code response type.
   * @return responseTypes
   **/
  @ApiModelProperty(example = "[\"code\"]", value = "Provide a list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code response type.")
  public List<String> getResponseTypes() {
    return responseTypes;
  }

  public void setResponseTypes(List<String> responseTypes) {
    this.responseTypes = responseTypes;
  }

  public RegisterSiteParams grantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
    return this;
  }

  public RegisterSiteParams addGrantTypesItem(String grantTypesItem) {
    if (this.grantTypes == null) {
      this.grantTypes = new ArrayList<String>();
    }
    this.grantTypes.add(grantTypesItem);
    return this;
  }

  /**
   * Provide a list of the OAuth 2.0 grant types that the Client is declaring that it will restrict itself to using.
   * @return grantTypes
   **/
  @ApiModelProperty(example = "[\"authorization_code\",\"client_credentials\"]", value = "Provide a list of the OAuth 2.0 grant types that the Client is declaring that it will restrict itself to using.")
  public List<String> getGrantTypes() {
    return grantTypes;
  }

  public void setGrantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
  }

  public RegisterSiteParams scope(List<String> scope) {
    this.scope = scope;
    return this;
  }

  public RegisterSiteParams addScopeItem(String scopeItem) {
    if (this.scope == null) {
      this.scope = new ArrayList<String>();
    }
    this.scope.add(scopeItem);
    return this;
  }

  /**
   * Provide list of scope which are used during authentication to authorize access to resource.
   * @return scope
   **/
  @ApiModelProperty(example = "[\"openid\"]", value = "Provide list of scope which are used during authentication to authorize access to resource.")
  public List<String> getScope() {
    return scope;
  }

  public void setScope(List<String> scope) {
    this.scope = scope;
  }

  public RegisterSiteParams acrValues(List<String> acrValues) {
    this.acrValues = acrValues;
    return this;
  }

  public RegisterSiteParams addAcrValuesItem(String acrValuesItem) {
    if (this.acrValues == null) {
      this.acrValues = new ArrayList<String>();
    }
    this.acrValues.add(acrValuesItem);
    return this;
  }

  /**
   * Provide Returns the Default requested Authentication Context Class Reference values.
   * @return acrValues
   **/
  @ApiModelProperty(example = "[\"basic\"]", value = "Provide Returns the Default requested Authentication Context Class Reference values.")
  public List<String> getAcrValues() {
    return acrValues;
  }

  public void setAcrValues(List<String> acrValues) {
    this.acrValues = acrValues;
  }

  public RegisterSiteParams clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  /**
   * oxd will generate its own non-human readable name by default if client_name is not specified
   * @return clientName
   **/
  @ApiModelProperty(value = "oxd will generate its own non-human readable name by default if client_name is not specified")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public RegisterSiteParams clientJwksUri(String clientJwksUri) {
    this.clientJwksUri = clientJwksUri;
    return this;
  }

  /**
   * Provide the URL for the Client&#39;s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client&#39;s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key&#39;s intended usage .
   * @return clientJwksUri
   **/
  @ApiModelProperty(value = "Provide the URL for the Client's JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client's encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key's intended usage .")
  public String getClientJwksUri() {
    return clientJwksUri;
  }

  public void setClientJwksUri(String clientJwksUri) {
    this.clientJwksUri = clientJwksUri;
  }

  public RegisterSiteParams clientTokenEndpointAuthMethod(String clientTokenEndpointAuthMethod) {
    this.clientTokenEndpointAuthMethod = clientTokenEndpointAuthMethod;
    return this;
  }

  /**
   * Provide the requested authentication method for the Token Endpoint. Valid values are none, client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, access_token, tls_client_auth, self_signed_tls_client_auth.
   * @return clientTokenEndpointAuthMethod
   **/
  @ApiModelProperty(value = "Provide the requested authentication method for the Token Endpoint. Valid values are none, client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, access_token, tls_client_auth, self_signed_tls_client_auth.")
  public String getClientTokenEndpointAuthMethod() {
    return clientTokenEndpointAuthMethod;
  }

  public void setClientTokenEndpointAuthMethod(String clientTokenEndpointAuthMethod) {
    this.clientTokenEndpointAuthMethod = clientTokenEndpointAuthMethod;
  }

  public RegisterSiteParams clientTokenEndpointAuthSigningAlg(String clientTokenEndpointAuthSigningAlg) {
    this.clientTokenEndpointAuthSigningAlg = clientTokenEndpointAuthSigningAlg;
    return this;
  }

  /**
   * Provide the Requested Client Authentication method for the Token Endpoint. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512.
   * @return clientTokenEndpointAuthSigningAlg
   **/
  @ApiModelProperty(value = "Provide the Requested Client Authentication method for the Token Endpoint. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512.")
  public String getClientTokenEndpointAuthSigningAlg() {
    return clientTokenEndpointAuthSigningAlg;
  }

  public void setClientTokenEndpointAuthSigningAlg(String clientTokenEndpointAuthSigningAlg) {
    this.clientTokenEndpointAuthSigningAlg = clientTokenEndpointAuthSigningAlg;
  }

  public RegisterSiteParams clientRequestUris(List<String> clientRequestUris) {
    this.clientRequestUris = clientRequestUris;
    return this;
  }

  public RegisterSiteParams addClientRequestUrisItem(String clientRequestUrisItem) {
    if (this.clientRequestUris == null) {
      this.clientRequestUris = new ArrayList<String>();
    }
    this.clientRequestUris.add(clientRequestUrisItem);
    return this;
  }

  /**
   * Provide a list of request_uri values that are pre-registered by the Client for use at the Authorization Server.
   * @return clientRequestUris
   **/
  @ApiModelProperty(value = "Provide a list of request_uri values that are pre-registered by the Client for use at the Authorization Server.")
  public List<String> getClientRequestUris() {
    return clientRequestUris;
  }

  public void setClientRequestUris(List<String> clientRequestUris) {
    this.clientRequestUris = clientRequestUris;
  }

  public RegisterSiteParams clientFrontchannelLogoutUris(List<String> clientFrontchannelLogoutUris) {
    this.clientFrontchannelLogoutUris = clientFrontchannelLogoutUris;
    return this;
  }

  public RegisterSiteParams addClientFrontchannelLogoutUrisItem(String clientFrontchannelLogoutUrisItem) {
    if (this.clientFrontchannelLogoutUris == null) {
      this.clientFrontchannelLogoutUris = new ArrayList<String>();
    }
    this.clientFrontchannelLogoutUris.add(clientFrontchannelLogoutUrisItem);
    return this;
  }

  /**
   * Provide frontchannel logout uris.
   * @return clientFrontchannelLogoutUris
   **/
  @ApiModelProperty(value = "Provide frontchannel logout uris.")
  public List<String> getClientFrontchannelLogoutUris() {
    return clientFrontchannelLogoutUris;
  }

  public void setClientFrontchannelLogoutUris(List<String> clientFrontchannelLogoutUris) {
    this.clientFrontchannelLogoutUris = clientFrontchannelLogoutUris;
  }

  public RegisterSiteParams clientSectorIdentifierUri(String clientSectorIdentifierUri) {
    this.clientSectorIdentifierUri = clientSectorIdentifierUri;
    return this;
  }

  /**
   * Provide the URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a file with a single JSON array of redirect_uri values.
   * @return clientSectorIdentifierUri
   **/
  @ApiModelProperty(value = "Provide the URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a file with a single JSON array of redirect_uri values.")
  public String getClientSectorIdentifierUri() {
    return clientSectorIdentifierUri;
  }

  public void setClientSectorIdentifierUri(String clientSectorIdentifierUri) {
    this.clientSectorIdentifierUri = clientSectorIdentifierUri;
  }

  public RegisterSiteParams contacts(List<String> contacts) {
    this.contacts = contacts;
    return this;
  }

  public RegisterSiteParams addContactsItem(String contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<String>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

  /**
   * Provide a list of e-mail addresses for people allowed to administer the information for this Client
   * @return contacts
   **/
  @ApiModelProperty(example = "[\"foo_bar@spam.org\"]", value = "Provide a list of e-mail addresses for people allowed to administer the information for this Client")
  public List<String> getContacts() {
    return contacts;
  }

  public void setContacts(List<String> contacts) {
    this.contacts = contacts;
  }

  public RegisterSiteParams redirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public RegisterSiteParams addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<String>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

  /**
   * Provide the list of redirection URIs.
   * @return redirectUris
   **/
  @ApiModelProperty(example = "[\"https://client.example.org/cb\"]", value = "Provide the list of redirection URIs.")
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }

  public RegisterSiteParams uiLocales(List<String> uiLocales) {
    this.uiLocales = uiLocales;
    return this;
  }

  public RegisterSiteParams addUiLocalesItem(String uiLocalesItem) {
    if (this.uiLocales == null) {
      this.uiLocales = new ArrayList<String>();
    }
    this.uiLocales.add(uiLocalesItem);
    return this;
  }

  /**
   * Provide ui_locales, which can be used to pass the localization from the client application to the server application in the authorize request.
   * @return uiLocales
   **/
  @ApiModelProperty(value = "Provide ui_locales, which can be used to pass the localization from the client application to the server application in the authorize request.")
  public List<String> getUiLocales() {
    return uiLocales;
  }

  public void setUiLocales(List<String> uiLocales) {
    this.uiLocales = uiLocales;
  }

  public RegisterSiteParams claimsLocales(List<String> claimsLocales) {
    this.claimsLocales = claimsLocales;
    return this;
  }

  public RegisterSiteParams addClaimsLocalesItem(String claimsLocalesItem) {
    if (this.claimsLocales == null) {
      this.claimsLocales = new ArrayList<String>();
    }
    this.claimsLocales.add(claimsLocalesItem);
    return this;
  }

  /**
   * Provide claims_locales, which end-user&#39;s preferred languages and scripts for Claims being returned.
   * @return claimsLocales
   **/
  @ApiModelProperty(value = "Provide claims_locales, which end-user's preferred languages and scripts for Claims being returned.")
  public List<String> getClaimsLocales() {
    return claimsLocales;
  }

  public void setClaimsLocales(List<String> claimsLocales) {
    this.claimsLocales = claimsLocales;
  }

  public RegisterSiteParams claimsRedirectUri(List<String> claimsRedirectUri) {
    this.claimsRedirectUri = claimsRedirectUri;
    return this;
  }

  public RegisterSiteParams addClaimsRedirectUriItem(String claimsRedirectUriItem) {
    if (this.claimsRedirectUri == null) {
      this.claimsRedirectUri = new ArrayList<String>();
    }
    this.claimsRedirectUri.add(claimsRedirectUriItem);
    return this;
  }

  /**
   * Get claimsRedirectUri
   * @return claimsRedirectUri
   **/
  @ApiModelProperty(value = "")
  public List<String> getClaimsRedirectUri() {
    return claimsRedirectUri;
  }

  public void setClaimsRedirectUri(List<String> claimsRedirectUri) {
    this.claimsRedirectUri = claimsRedirectUri;
  }

  public RegisterSiteParams clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * client id of existing client, ignores all other parameters and skips new client registration forcing to use existing client (client_secret is required if this parameter is set).
   * @return clientId
   **/
  @ApiModelProperty(value = "client id of existing client, ignores all other parameters and skips new client registration forcing to use existing client (client_secret is required if this parameter is set).")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public RegisterSiteParams clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /**
   * client secret of existing client, must be used together with client_id
   * @return clientSecret
   **/
  @ApiModelProperty(value = "client secret of existing client, must be used together with client_id")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public RegisterSiteParams trustedClient(Boolean trustedClient) {
    this.trustedClient = trustedClient;
    return this;
  }

  /**
   * specifies whether client is trusted. Default value is false.
   * @return trustedClient
   **/
  @ApiModelProperty(value = "specifies whether client is trusted. Default value is false.")
  public Boolean isTrustedClient() {
    return trustedClient;
  }

  public void setTrustedClient(Boolean trustedClient) {
    this.trustedClient = trustedClient;
  }

  public RegisterSiteParams accessTokenAsJwt(Boolean accessTokenAsJwt) {
    this.accessTokenAsJwt = accessTokenAsJwt;
    return this;
  }

  /**
   * specifies whether access_token should be return as JWT or not. Default value is false.
   * @return accessTokenAsJwt
   **/
  @ApiModelProperty(value = "specifies whether access_token should be return as JWT or not. Default value is false.")
  public Boolean isAccessTokenAsJwt() {
    return accessTokenAsJwt;
  }

  public void setAccessTokenAsJwt(Boolean accessTokenAsJwt) {
    this.accessTokenAsJwt = accessTokenAsJwt;
  }

  public RegisterSiteParams accessTokenSigningAlg(String accessTokenSigningAlg) {
    this.accessTokenSigningAlg = accessTokenSigningAlg;
    return this;
  }

  /**
   * sets signing algorithm used for JWT signing. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return accessTokenSigningAlg
   **/
  @ApiModelProperty(value = "sets signing algorithm used for JWT signing. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getAccessTokenSigningAlg() {
    return accessTokenSigningAlg;
  }

  public void setAccessTokenSigningAlg(String accessTokenSigningAlg) {
    this.accessTokenSigningAlg = accessTokenSigningAlg;
  }

  public RegisterSiteParams rptAsJwt(Boolean rptAsJwt) {
    this.rptAsJwt = rptAsJwt;
    return this;
  }

  /**
   * specifies whether RPT should be return as JWT or not. Default value is false.
   * @return rptAsJwt
   **/
  @ApiModelProperty(value = "specifies whether RPT should be return as JWT or not. Default value is false.")
  public Boolean isRptAsJwt() {
    return rptAsJwt;
  }

  public void setRptAsJwt(Boolean rptAsJwt) {
    this.rptAsJwt = rptAsJwt;
  }

  public RegisterSiteParams logoUri(String logoUri) {
    this.logoUri = logoUri;
    return this;
  }

  /**
   * specifies an URL that references a logo for the Client application.
   * @return logoUri
   **/
  @ApiModelProperty(example = "https://client.example.org/logo.png", value = "specifies an URL that references a logo for the Client application.")
  public String getLogoUri() {
    return logoUri;
  }

  public void setLogoUri(String logoUri) {
    this.logoUri = logoUri;
  }

  public RegisterSiteParams clientUri(String clientUri) {
    this.clientUri = clientUri;
    return this;
  }

  /**
   * specifies an URL of the home page of the Client.
   * @return clientUri
   **/
  @ApiModelProperty(example = "https://client.example.org/page", value = "specifies an URL of the home page of the Client.")
  public String getClientUri() {
    return clientUri;
  }

  public void setClientUri(String clientUri) {
    this.clientUri = clientUri;
  }

  public RegisterSiteParams policyUri(String policyUri) {
    this.policyUri = policyUri;
    return this;
  }

  /**
   * specifies an URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.
   * @return policyUri
   **/
  @ApiModelProperty(example = "https://client.example.org/page", value = "specifies an URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.")
  public String getPolicyUri() {
    return policyUri;
  }

  public void setPolicyUri(String policyUri) {
    this.policyUri = policyUri;
  }

  public RegisterSiteParams frontChannelLogoutSessionRequired(Boolean frontChannelLogoutSessionRequired) {
    this.frontChannelLogoutSessionRequired = frontChannelLogoutSessionRequired;
    return this;
  }

  /**
   * specifies if front channel logout session required.
   * @return frontChannelLogoutSessionRequired
   **/
  @ApiModelProperty(example = "true", value = "specifies if front channel logout session required.")
  public Boolean isFrontChannelLogoutSessionRequired() {
    return frontChannelLogoutSessionRequired;
  }

  public void setFrontChannelLogoutSessionRequired(Boolean frontChannelLogoutSessionRequired) {
    this.frontChannelLogoutSessionRequired = frontChannelLogoutSessionRequired;
  }

  public RegisterSiteParams tosUri(String tosUri) {
    this.tosUri = tosUri;
    return this;
  }

  /**
   * specifies an URL that the Relying Party Client provides to the End-User to read about the Relying Party&#39;s terms.
   * @return tosUri
   **/
  @ApiModelProperty(example = "https://client.example.org/page", value = "specifies an URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms.")
  public String getTosUri() {
    return tosUri;
  }

  public void setTosUri(String tosUri) {
    this.tosUri = tosUri;
  }

  public RegisterSiteParams jwks(String jwks) {
    this.jwks = jwks;
    return this;
  }

  /**
   * Client&#39;s JSON Web Key Set (JWK) document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it must not use jwks. One significant downside of jwks is that it does not enable key rotation. The jwks_uri and jwks parameters must not be used together.
   * @return jwks
   **/
  @ApiModelProperty(example = "{\"key1\": \"value1\", \"key2\": \"value2\"}", value = "Client's JSON Web Key Set (JWK) document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it must not use jwks. One significant downside of jwks is that it does not enable key rotation. The jwks_uri and jwks parameters must not be used together.")
  public String getJwks() {
    return jwks;
  }

  public void setJwks(String jwks) {
    this.jwks = jwks;
  }

  public RegisterSiteParams idTokenBindingCnf(String idTokenBindingCnf) {
    this.idTokenBindingCnf = idTokenBindingCnf;
    return this;
  }

  /**
   * Get idTokenBindingCnf
   * @return idTokenBindingCnf
   **/
  @ApiModelProperty(example = "4NRB1-0XZABZI9E6-5SM3R", value = "")
  public String getIdTokenBindingCnf() {
    return idTokenBindingCnf;
  }

  public void setIdTokenBindingCnf(String idTokenBindingCnf) {
    this.idTokenBindingCnf = idTokenBindingCnf;
  }

  public RegisterSiteParams tlsClientAuthSubjectDn(String tlsClientAuthSubjectDn) {
    this.tlsClientAuthSubjectDn = tlsClientAuthSubjectDn;
    return this;
  }

  /**
   * Get tlsClientAuthSubjectDn
   * @return tlsClientAuthSubjectDn
   **/
  @ApiModelProperty(example = "www.test.com", value = "")
  public String getTlsClientAuthSubjectDn() {
    return tlsClientAuthSubjectDn;
  }

  public void setTlsClientAuthSubjectDn(String tlsClientAuthSubjectDn) {
    this.tlsClientAuthSubjectDn = tlsClientAuthSubjectDn;
  }

  public RegisterSiteParams runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims(Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) {
    this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
    return this;
  }

  /**
   * choose to run introspection script before access_token_as_jwt creation and include claims.
   * @return runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims
   **/
  @ApiModelProperty(example = "true", value = "choose to run introspection script before access_token_as_jwt creation and include claims.")
  public Boolean isRunIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims() {
    return runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
  }

  public void setRunIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims(Boolean runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) {
    this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims = runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims;
  }

  public RegisterSiteParams idTokenSignedResponseAlg(String idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
    return this;
  }

  /**
   * choose the JWS alg algorithm (JWA) required for the ID Token issued to this client_id. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return idTokenSignedResponseAlg
   **/
  @ApiModelProperty(value = "choose the JWS alg algorithm (JWA) required for the ID Token issued to this client_id. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getIdTokenSignedResponseAlg() {
    return idTokenSignedResponseAlg;
  }

  public void setIdTokenSignedResponseAlg(String idTokenSignedResponseAlg) {
    this.idTokenSignedResponseAlg = idTokenSignedResponseAlg;
  }

  public RegisterSiteParams idTokenEncryptedResponseAlg(String idTokenEncryptedResponseAlg) {
    this.idTokenEncryptedResponseAlg = idTokenEncryptedResponseAlg;
    return this;
  }

  /**
   * choose the JWE alg algorithm (JWA) required for encrypting the ID Token issued to this client_id. Valid values are RSA1_5, RSA-OAEP, A128KW, A256KW
   * @return idTokenEncryptedResponseAlg
   **/
  @ApiModelProperty(value = "choose the JWE alg algorithm (JWA) required for encrypting the ID Token issued to this client_id. Valid values are RSA1_5, RSA-OAEP, A128KW, A256KW")
  public String getIdTokenEncryptedResponseAlg() {
    return idTokenEncryptedResponseAlg;
  }

  public void setIdTokenEncryptedResponseAlg(String idTokenEncryptedResponseAlg) {
    this.idTokenEncryptedResponseAlg = idTokenEncryptedResponseAlg;
  }

  public RegisterSiteParams idTokenEncryptedResponseEnc(String idTokenEncryptedResponseEnc) {
    this.idTokenEncryptedResponseEnc = idTokenEncryptedResponseEnc;
    return this;
  }

  /**
   * choose the JWE enc algorithm (JWA) required for symmetric encryption of the ID Token issued to this client_id. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return idTokenEncryptedResponseEnc
   **/
  @ApiModelProperty(value = "choose the JWE enc algorithm (JWA) required for symmetric encryption of the ID Token issued to this client_id. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getIdTokenEncryptedResponseEnc() {
    return idTokenEncryptedResponseEnc;
  }

  public void setIdTokenEncryptedResponseEnc(String idTokenEncryptedResponseEnc) {
    this.idTokenEncryptedResponseEnc = idTokenEncryptedResponseEnc;
  }

  public RegisterSiteParams userInfoSignedResponseAlg(String userInfoSignedResponseAlg) {
    this.userInfoSignedResponseAlg = userInfoSignedResponseAlg;
    return this;
  }

  /**
   * choose the JWS alg algorithm (JWA) required for UserInfo responses. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return userInfoSignedResponseAlg
   **/
  @ApiModelProperty(value = "choose the JWS alg algorithm (JWA) required for UserInfo responses. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getUserInfoSignedResponseAlg() {
    return userInfoSignedResponseAlg;
  }

  public void setUserInfoSignedResponseAlg(String userInfoSignedResponseAlg) {
    this.userInfoSignedResponseAlg = userInfoSignedResponseAlg;
  }

  public RegisterSiteParams userInfoEncryptedResponseAlg(String userInfoEncryptedResponseAlg) {
    this.userInfoEncryptedResponseAlg = userInfoEncryptedResponseAlg;
    return this;
  }

  /**
   * choose the JWE alg algorithm (JWA) required for encrypting UserInfo responses. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW
   * @return userInfoEncryptedResponseAlg
   **/
  @ApiModelProperty(value = "choose the JWE alg algorithm (JWA) required for encrypting UserInfo responses. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW")
  public String getUserInfoEncryptedResponseAlg() {
    return userInfoEncryptedResponseAlg;
  }

  public void setUserInfoEncryptedResponseAlg(String userInfoEncryptedResponseAlg) {
    this.userInfoEncryptedResponseAlg = userInfoEncryptedResponseAlg;
  }

  public RegisterSiteParams userInfoEncryptedResponseEnc(String userInfoEncryptedResponseEnc) {
    this.userInfoEncryptedResponseEnc = userInfoEncryptedResponseEnc;
    return this;
  }

  /**
   * choose the JWE enc algorithm (JWA) required for symmetric encryption of UserInfo responses. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return userInfoEncryptedResponseEnc
   **/
  @ApiModelProperty(value = "choose the JWE enc algorithm (JWA) required for symmetric encryption of UserInfo responses. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getUserInfoEncryptedResponseEnc() {
    return userInfoEncryptedResponseEnc;
  }

  public void setUserInfoEncryptedResponseEnc(String userInfoEncryptedResponseEnc) {
    this.userInfoEncryptedResponseEnc = userInfoEncryptedResponseEnc;
  }

  public RegisterSiteParams requestObjectSigningAlg(String requestObjectSigningAlg) {
    this.requestObjectSigningAlg = requestObjectSigningAlg;
    return this;
  }

  /**
   * choose the JWS alg algorithm (JWA) that must be required by the Authorization Server. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512
   * @return requestObjectSigningAlg
   **/
  @ApiModelProperty(value = "choose the JWS alg algorithm (JWA) that must be required by the Authorization Server. Valid values are none, HS256, HS384, HS512, RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512")
  public String getRequestObjectSigningAlg() {
    return requestObjectSigningAlg;
  }

  public void setRequestObjectSigningAlg(String requestObjectSigningAlg) {
    this.requestObjectSigningAlg = requestObjectSigningAlg;
  }

  public RegisterSiteParams requestObjectEncryptionAlg(String requestObjectEncryptionAlg) {
    this.requestObjectEncryptionAlg = requestObjectEncryptionAlg;
    return this;
  }

  /**
   * choose the JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW
   * @return requestObjectEncryptionAlg
   **/
  @ApiModelProperty(value = "choose the JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are RSA1_5, RSA_OAEP, A128KW, A256KW")
  public String getRequestObjectEncryptionAlg() {
    return requestObjectEncryptionAlg;
  }

  public void setRequestObjectEncryptionAlg(String requestObjectEncryptionAlg) {
    this.requestObjectEncryptionAlg = requestObjectEncryptionAlg;
  }

  public RegisterSiteParams requestObjectEncryptionEnc(String requestObjectEncryptionEnc) {
    this.requestObjectEncryptionEnc = requestObjectEncryptionEnc;
    return this;
  }

  /**
   * choose the JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM
   * @return requestObjectEncryptionEnc
   **/
  @ApiModelProperty(value = "choose the JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP. Valid values are A128CBC+HS256, A256CBC+HS512, A128GCM, A256GCM")
  public String getRequestObjectEncryptionEnc() {
    return requestObjectEncryptionEnc;
  }

  public void setRequestObjectEncryptionEnc(String requestObjectEncryptionEnc) {
    this.requestObjectEncryptionEnc = requestObjectEncryptionEnc;
  }

  public RegisterSiteParams defaultMaxAge(Integer defaultMaxAge) {
    this.defaultMaxAge = defaultMaxAge;
    return this;
  }

  /**
   * specifies the Default Maximum Authentication Age.
   * @return defaultMaxAge
   **/
  @ApiModelProperty(example = "1000000", value = "specifies the Default Maximum Authentication Age.")
  public Integer getDefaultMaxAge() {
    return defaultMaxAge;
  }

  public void setDefaultMaxAge(Integer defaultMaxAge) {
    this.defaultMaxAge = defaultMaxAge;
  }

  public RegisterSiteParams requireAuthTime(Boolean requireAuthTime) {
    this.requireAuthTime = requireAuthTime;
    return this;
  }

  /**
   * specifies the Boolean value specifying whether the auth_time claim in the id_token is required. It is required when the value is true. The auth_time claim request in the request object overrides this setting.
   * @return requireAuthTime
   **/
  @ApiModelProperty(example = "true", value = "specifies the Boolean value specifying whether the auth_time claim in the id_token is required. It is required when the value is true. The auth_time claim request in the request object overrides this setting.")
  public Boolean isRequireAuthTime() {
    return requireAuthTime;
  }

  public void setRequireAuthTime(Boolean requireAuthTime) {
    this.requireAuthTime = requireAuthTime;
  }

  public RegisterSiteParams initiateLoginUri(String initiateLoginUri) {
    this.initiateLoginUri = initiateLoginUri;
    return this;
  }

  /**
   * specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.
   * @return initiateLoginUri
   **/
  @ApiModelProperty(example = "https://client.example.org/authorization/page", value = "specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.")
  public String getInitiateLoginUri() {
    return initiateLoginUri;
  }

  public void setInitiateLoginUri(String initiateLoginUri) {
    this.initiateLoginUri = initiateLoginUri;
  }

  public RegisterSiteParams authorizedOrigins(List<String> authorizedOrigins) {
    this.authorizedOrigins = authorizedOrigins;
    return this;
  }

  public RegisterSiteParams addAuthorizedOriginsItem(String authorizedOriginsItem) {
    if (this.authorizedOrigins == null) {
      this.authorizedOrigins = new ArrayList<String>();
    }
    this.authorizedOrigins.add(authorizedOriginsItem);
    return this;
  }

  /**
   * specifies authorized JavaScript origins.
   * @return authorizedOrigins
   **/
  @ApiModelProperty(value = "specifies authorized JavaScript origins.")
  public List<String> getAuthorizedOrigins() {
    return authorizedOrigins;
  }

  public void setAuthorizedOrigins(List<String> authorizedOrigins) {
    this.authorizedOrigins = authorizedOrigins;
  }

  public RegisterSiteParams accessTokenLifetime(Integer accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
    return this;
  }

  /**
   * specifies the Client-specific access token expiration.
   * @return accessTokenLifetime
   **/
  @ApiModelProperty(example = "100000000", value = "specifies the Client-specific access token expiration.")
  public Integer getAccessTokenLifetime() {
    return accessTokenLifetime;
  }

  public void setAccessTokenLifetime(Integer accessTokenLifetime) {
    this.accessTokenLifetime = accessTokenLifetime;
  }

  public RegisterSiteParams softwareId(String softwareId) {
    this.softwareId = softwareId;
    return this;
  }

  /**
   * specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
   * @return softwareId
   **/
  @ApiModelProperty(example = "4NRB1-0XZABZI9E6-5SM3R", value = "specifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.")
  public String getSoftwareId() {
    return softwareId;
  }

  public void setSoftwareId(String softwareId) {
    this.softwareId = softwareId;
  }

  public RegisterSiteParams softwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

  /**
   * specifies a version identifier string for the client software identified by &#39;software_id&#39;. The value of the &#39;software_version&#39; should change on any update to the client software identified by the same &#39;software_id&#39;.
   * @return softwareVersion
   **/
  @ApiModelProperty(example = "2.1", value = "specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.")
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }

  public RegisterSiteParams softwareStatement(String softwareStatement) {
    this.softwareStatement = softwareStatement;
    return this;
  }

  /**
   * specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.
   * @return softwareStatement
   **/
  @ApiModelProperty(value = "specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.")
  public String getSoftwareStatement() {
    return softwareStatement;
  }

  public void setSoftwareStatement(String softwareStatement) {
    this.softwareStatement = softwareStatement;
  }

  public RegisterSiteParams customAttributes(RegistersiteCustomAttributes customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  /**
   * Get customAttributes
   * @return customAttributes
   **/
  @ApiModelProperty(value = "")
  public RegistersiteCustomAttributes getCustomAttributes() {
    return customAttributes;
  }

  public void setCustomAttributes(RegistersiteCustomAttributes customAttributes) {
    this.customAttributes = customAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterSiteParams registerSiteParams = (RegisterSiteParams) o;
    return Objects.equals(this.authorizationRedirectUri, registerSiteParams.authorizationRedirectUri) &&
            Objects.equals(this.opHost, registerSiteParams.opHost) &&
            Objects.equals(this.postLogoutRedirectUris, registerSiteParams.postLogoutRedirectUris) &&
            Objects.equals(this.applicationType, registerSiteParams.applicationType) &&
            Objects.equals(this.responseTypes, registerSiteParams.responseTypes) &&
            Objects.equals(this.grantTypes, registerSiteParams.grantTypes) &&
            Objects.equals(this.scope, registerSiteParams.scope) &&
            Objects.equals(this.acrValues, registerSiteParams.acrValues) &&
            Objects.equals(this.clientName, registerSiteParams.clientName) &&
            Objects.equals(this.clientJwksUri, registerSiteParams.clientJwksUri) &&
            Objects.equals(this.clientTokenEndpointAuthMethod, registerSiteParams.clientTokenEndpointAuthMethod) &&
            Objects.equals(this.clientTokenEndpointAuthSigningAlg, registerSiteParams.clientTokenEndpointAuthSigningAlg) &&
            Objects.equals(this.clientRequestUris, registerSiteParams.clientRequestUris) &&
            Objects.equals(this.clientFrontchannelLogoutUris, registerSiteParams.clientFrontchannelLogoutUris) &&
            Objects.equals(this.clientSectorIdentifierUri, registerSiteParams.clientSectorIdentifierUri) &&
            Objects.equals(this.contacts, registerSiteParams.contacts) &&
            Objects.equals(this.redirectUris, registerSiteParams.redirectUris) &&
            Objects.equals(this.uiLocales, registerSiteParams.uiLocales) &&
            Objects.equals(this.claimsLocales, registerSiteParams.claimsLocales) &&
            Objects.equals(this.claimsRedirectUri, registerSiteParams.claimsRedirectUri) &&
            Objects.equals(this.clientId, registerSiteParams.clientId) &&
            Objects.equals(this.clientSecret, registerSiteParams.clientSecret) &&
            Objects.equals(this.trustedClient, registerSiteParams.trustedClient) &&
            Objects.equals(this.accessTokenAsJwt, registerSiteParams.accessTokenAsJwt) &&
            Objects.equals(this.accessTokenSigningAlg, registerSiteParams.accessTokenSigningAlg) &&
            Objects.equals(this.rptAsJwt, registerSiteParams.rptAsJwt) &&
            Objects.equals(this.logoUri, registerSiteParams.logoUri) &&
            Objects.equals(this.clientUri, registerSiteParams.clientUri) &&
            Objects.equals(this.policyUri, registerSiteParams.policyUri) &&
            Objects.equals(this.frontChannelLogoutSessionRequired, registerSiteParams.frontChannelLogoutSessionRequired) &&
            Objects.equals(this.tosUri, registerSiteParams.tosUri) &&
            Objects.equals(this.jwks, registerSiteParams.jwks) &&
            Objects.equals(this.idTokenBindingCnf, registerSiteParams.idTokenBindingCnf) &&
            Objects.equals(this.tlsClientAuthSubjectDn, registerSiteParams.tlsClientAuthSubjectDn) &&
            Objects.equals(this.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims, registerSiteParams.runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims) &&
            Objects.equals(this.idTokenSignedResponseAlg, registerSiteParams.idTokenSignedResponseAlg) &&
            Objects.equals(this.idTokenEncryptedResponseAlg, registerSiteParams.idTokenEncryptedResponseAlg) &&
            Objects.equals(this.idTokenEncryptedResponseEnc, registerSiteParams.idTokenEncryptedResponseEnc) &&
            Objects.equals(this.userInfoSignedResponseAlg, registerSiteParams.userInfoSignedResponseAlg) &&
            Objects.equals(this.userInfoEncryptedResponseAlg, registerSiteParams.userInfoEncryptedResponseAlg) &&
            Objects.equals(this.userInfoEncryptedResponseEnc, registerSiteParams.userInfoEncryptedResponseEnc) &&
            Objects.equals(this.requestObjectSigningAlg, registerSiteParams.requestObjectSigningAlg) &&
            Objects.equals(this.requestObjectEncryptionAlg, registerSiteParams.requestObjectEncryptionAlg) &&
            Objects.equals(this.requestObjectEncryptionEnc, registerSiteParams.requestObjectEncryptionEnc) &&
            Objects.equals(this.defaultMaxAge, registerSiteParams.defaultMaxAge) &&
            Objects.equals(this.requireAuthTime, registerSiteParams.requireAuthTime) &&
            Objects.equals(this.initiateLoginUri, registerSiteParams.initiateLoginUri) &&
            Objects.equals(this.authorizedOrigins, registerSiteParams.authorizedOrigins) &&
            Objects.equals(this.accessTokenLifetime, registerSiteParams.accessTokenLifetime) &&
            Objects.equals(this.softwareId, registerSiteParams.softwareId) &&
            Objects.equals(this.softwareVersion, registerSiteParams.softwareVersion) &&
            Objects.equals(this.softwareStatement, registerSiteParams.softwareStatement) &&
            Objects.equals(this.customAttributes, registerSiteParams.customAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationRedirectUri, opHost, postLogoutRedirectUris, applicationType, responseTypes, grantTypes, scope, acrValues, clientName, clientJwksUri, clientTokenEndpointAuthMethod, clientTokenEndpointAuthSigningAlg, clientRequestUris, clientFrontchannelLogoutUris, clientSectorIdentifierUri, contacts, redirectUris, uiLocales, claimsLocales, claimsRedirectUri, clientId, clientSecret, trustedClient, accessTokenAsJwt, accessTokenSigningAlg, rptAsJwt, logoUri, clientUri, policyUri, frontChannelLogoutSessionRequired, tosUri, jwks, idTokenBindingCnf, tlsClientAuthSubjectDn, runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims, idTokenSignedResponseAlg, idTokenEncryptedResponseAlg, idTokenEncryptedResponseEnc, userInfoSignedResponseAlg, userInfoEncryptedResponseAlg, userInfoEncryptedResponseEnc, requestObjectSigningAlg, requestObjectEncryptionAlg, requestObjectEncryptionEnc, defaultMaxAge, requireAuthTime, initiateLoginUri, authorizedOrigins, accessTokenLifetime, softwareId, softwareVersion, softwareStatement, customAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterSiteParams {\n");

    sb.append("    authorizationRedirectUri: ").append(toIndentedString(authorizationRedirectUri)).append("\n");
    sb.append("    opHost: ").append(toIndentedString(opHost)).append("\n");
    sb.append("    postLogoutRedirectUris: ").append(toIndentedString(postLogoutRedirectUris)).append("\n");
    sb.append("    applicationType: ").append(toIndentedString(applicationType)).append("\n");
    sb.append("    responseTypes: ").append(toIndentedString(responseTypes)).append("\n");
    sb.append("    grantTypes: ").append(toIndentedString(grantTypes)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    acrValues: ").append(toIndentedString(acrValues)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientJwksUri: ").append(toIndentedString(clientJwksUri)).append("\n");
    sb.append("    clientTokenEndpointAuthMethod: ").append(toIndentedString(clientTokenEndpointAuthMethod)).append("\n");
    sb.append("    clientTokenEndpointAuthSigningAlg: ").append(toIndentedString(clientTokenEndpointAuthSigningAlg)).append("\n");
    sb.append("    clientRequestUris: ").append(toIndentedString(clientRequestUris)).append("\n");
    sb.append("    clientFrontchannelLogoutUris: ").append(toIndentedString(clientFrontchannelLogoutUris)).append("\n");
    sb.append("    clientSectorIdentifierUri: ").append(toIndentedString(clientSectorIdentifierUri)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    uiLocales: ").append(toIndentedString(uiLocales)).append("\n");
    sb.append("    claimsLocales: ").append(toIndentedString(claimsLocales)).append("\n");
    sb.append("    claimsRedirectUri: ").append(toIndentedString(claimsRedirectUri)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    trustedClient: ").append(toIndentedString(trustedClient)).append("\n");
    sb.append("    accessTokenAsJwt: ").append(toIndentedString(accessTokenAsJwt)).append("\n");
    sb.append("    accessTokenSigningAlg: ").append(toIndentedString(accessTokenSigningAlg)).append("\n");
    sb.append("    rptAsJwt: ").append(toIndentedString(rptAsJwt)).append("\n");
    sb.append("    logoUri: ").append(toIndentedString(logoUri)).append("\n");
    sb.append("    clientUri: ").append(toIndentedString(clientUri)).append("\n");
    sb.append("    policyUri: ").append(toIndentedString(policyUri)).append("\n");
    sb.append("    frontChannelLogoutSessionRequired: ").append(toIndentedString(frontChannelLogoutSessionRequired)).append("\n");
    sb.append("    tosUri: ").append(toIndentedString(tosUri)).append("\n");
    sb.append("    jwks: ").append(toIndentedString(jwks)).append("\n");
    sb.append("    idTokenBindingCnf: ").append(toIndentedString(idTokenBindingCnf)).append("\n");
    sb.append("    tlsClientAuthSubjectDn: ").append(toIndentedString(tlsClientAuthSubjectDn)).append("\n");
    sb.append("    runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims: ").append(toIndentedString(runIntrospectionScriptBeforeaccessTokenAsJwtCreationAndIncludeClaims)).append("\n");
    sb.append("    idTokenSignedResponseAlg: ").append(toIndentedString(idTokenSignedResponseAlg)).append("\n");
    sb.append("    idTokenEncryptedResponseAlg: ").append(toIndentedString(idTokenEncryptedResponseAlg)).append("\n");
    sb.append("    idTokenEncryptedResponseEnc: ").append(toIndentedString(idTokenEncryptedResponseEnc)).append("\n");
    sb.append("    userInfoSignedResponseAlg: ").append(toIndentedString(userInfoSignedResponseAlg)).append("\n");
    sb.append("    userInfoEncryptedResponseAlg: ").append(toIndentedString(userInfoEncryptedResponseAlg)).append("\n");
    sb.append("    userInfoEncryptedResponseEnc: ").append(toIndentedString(userInfoEncryptedResponseEnc)).append("\n");
    sb.append("    requestObjectSigningAlg: ").append(toIndentedString(requestObjectSigningAlg)).append("\n");
    sb.append("    requestObjectEncryptionAlg: ").append(toIndentedString(requestObjectEncryptionAlg)).append("\n");
    sb.append("    requestObjectEncryptionEnc: ").append(toIndentedString(requestObjectEncryptionEnc)).append("\n");
    sb.append("    defaultMaxAge: ").append(toIndentedString(defaultMaxAge)).append("\n");
    sb.append("    requireAuthTime: ").append(toIndentedString(requireAuthTime)).append("\n");
    sb.append("    initiateLoginUri: ").append(toIndentedString(initiateLoginUri)).append("\n");
    sb.append("    authorizedOrigins: ").append(toIndentedString(authorizedOrigins)).append("\n");
    sb.append("    accessTokenLifetime: ").append(toIndentedString(accessTokenLifetime)).append("\n");
    sb.append("    softwareId: ").append(toIndentedString(softwareId)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    softwareStatement: ").append(toIndentedString(softwareStatement)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

