dn: cn=schema
objectClass: top
objectClass: ldapSubentry
objectClass: subschema
cn: schema
attributeTypes: ( id-oid NAME 'id'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( data-oid NAME 'data'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( key-oid NAME 'key'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( value-oid NAME 'value'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( createdAt-oid NAME 'createdAt'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( expiredAt-oid NAME 'expiredAt'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
attributeTypes: ( type-oid NAME 'type'
  SUBSTR caseIgnoreSubstringsMatch
  EQUALITY caseIgnoreMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  X-ORIGIN 'Gluu created attribute' )
objectclasses: ( oxExpiredObject-oid NAME 'oxExpiredObject' SUP top STRUCTURAL MUST objectclass MAY
  ( key $ value $ createdAt $ expiredAt $ type)
  X-ORIGIN 'Gluu created objectclass' )
objectclasses: ( oxRp-oid NAME 'oxRp' SUP top STRUCTURAL MUST objectclass MAY
  ( id $ data)
  X-ORIGIN 'Gluu created objectclass' )
