<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="oxD Suite" parallel="false">

    <parameter name="host" value="http://localhost"/>
    <parameter name="opHost" value="https://ce-dev6.gluu.org"/>
    <parameter name="opDiscoveryPath" value=""/>
    <parameter name="isLoadTest" value="true"/>
    <parameter name="redirectUrls" value="https://client.example.com/cb/home1 https://client.example.com/cb/home2"/>
    <parameter name="paramRedirectUrl" value="https://client.example.com/cb/home2"/>
    <parameter name="postLogoutRedirectUrl" value="https://client.example.com/cb/logout"/>
    <parameter name="postLogoutRedirectUrls" value="https://client.example.com/cb/logout/page1 https://client.example.com/cb/logout/page2"/>
    <parameter name="logoutUrl" value="https://client.example.com/logout"/>
    <parameter name="state" value="custom_state_for_testing"/>
    <parameter name="userId" value="${auth.user.uid}"/>
    <parameter name="userSecret" value="${auth.user.password}"/>
    <parameter name="clientId" value="${auth.client.id}"/>
    <parameter name="clientSecret" value="${auth.client.secret}"/>
    <parameter name="rsProtect"
               value="{'resources':[{'path':'/ws/phone','conditions':[{'httpMethods':['GET'],'scopes':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/view'],'ticketScopes':['http://photoz.example.com/dev/actions/view']},{'httpMethods':['PUT', 'POST'],'scopes':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/add'],'ticketScopes':['http://photoz.example.com/dev/actions/add']},{'httpMethods':['DELETE'],'scopes':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/remove'],'ticketScopes':['http://photoz.example.com/dev/actions/remove']}]}]}"/>
    <parameter name="rsProtectScopeExpression"
               value="{'resources':[{'path':'/ws/phone','conditions':[{'httpMethods':['GET'],'scopes':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/view'],'scope_expression':{'rule':{'and':[{'or':[{'var':0},{'var':1}]},{'var':2}]},'data':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/add','http://photoz.example.com/dev/actions/view']}},{'httpMethods':['PUT','POST'],'scope_expression':{'rule':{'and':[{'or':[{'var':0},{'var':1}]},{'var':2}]},'data':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/add','http://photoz.example.com/dev/actions/view']},'ticketScopes':['http://photoz.example.com/dev/actions/add']},{'httpMethods':['DELETE'],'scopes':['http://photoz.example.com/dev/actions/all','http://photoz.example.com/dev/actions/remove'],'ticketScopes':['http://photoz.example.com/dev/actions/remove']}]}]}"/>
    <parameter name="rsProtectScopeExpressionSecond"
               value="{'resources':[{'path':'/GetAll','conditions':[{'httpMethods':['GET'],'scopes':['http://photoz.example.com/dev/actions/a1','http://photoz.example.com/dev/actions/a2','http://photoz.example.com/dev/actions/a3'],'ticketScopes':['http://photoz.example.com/dev/actions/a1','http://photoz.example.com/dev/actions/a2','http://photoz.example.com/dev/actions/a3'],'scope_expression':{'rule':{'and':[{'or':[{'var':0},{'var':1}]},{'var':2}]},'data':['http://photoz.example.com/dev/actions/a1','http://photoz.example.com/dev/actions/a2','http://photoz.example.com/dev/actions/a3']}}]}]}"/>
    <parameter name="correctScopeExpression"
               value="{'rule':{'and':[{'or':[{'var':0},{'var':1}]},{'var':2}]},'data':['http://photoz.example.com/dev/actions/a1','http://photoz.example.com/dev/actions/a2','http://photoz.example.com/dev/actions/a3']}"/>
    <parameter name="incorrectScopeExpression"
               value="{'rule':{'not':[{'or':[{'var':0},{'var':1}]},{'var':2}]},'data':['http://photoz.example.com/dev/actions/a1','http://photoz.example.com/dev/actions/a2','http://photoz.example.com/dev/actions/a3']}"/>
    <parameter name="clientJwksUri" value="${clientJwksUri}"/>
    <parameter name="accessTokenSigningAlg" value="${accessTokenSigningAlg}"/>

    <listeners>
        <listener class-name="org.gluu.oxd.mock.listener.EnableMocksListener"></listener>
    </listeners>

    <!-- main class to set up and tear down suite -->
    <test name="SetUp" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.SetUpTest"/>
        </classes>
    </test>

    <!-- Connect -->
    <test name="HealthCheckTest" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.HealthCheckTest"></class>
        </classes>
    </test>
    <test name="Get OpDiscovery" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetDiscoveryTest"></class>
        </classes>
    </test>
    <test name="Register site" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.RegisterSiteTest"/>
        </classes>
    </test>
    <test name="Remove site" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.RemoveSiteTest"/>
        </classes>
    </test>
    <test name="Get authorization url" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetAuthorizationUrlTest"/>
        </classes>
    </test>
    <test name="Get tokens by code" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetTokensByCodeTest"/>
        </classes>
    </test>
    <test name="Get user info" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetUserInfoTest"/>
        </classes>
    </test>
    <test name="Log out" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetLogoutUrlTest"/>
        </classes>
    </test>
    <test name="Check IdToken" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.CheckIdTokenTest"/>
        </classes>
    </test>
    <test name="Check AccessToken" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.CheckAccessTokenTest"/>
        </classes>
    </test>
    <test name="Authorization code flow prompt=none" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.AuthorizationCodeFlowTest"/>
        </classes>
    </test>
    <test name="Migration Service Test" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.service.MigrationServiceTest"/>
        </classes>
    </test>
    <test name="Access Token as JWT Test" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.AccessTokenAsJwtTest"/>
        </classes>
    </test>

    <!-- UMA Tests -->
    <test name="UMA - Full Flow Test" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.UmaFullTest"/>
        </classes>
    </test>
    <test name="RS - Protect" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.RsProtectTest"/>
        </classes>
    </test>
    <test name="RS - Check Access" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.RsCheckAccessTest"/>
        </classes>
    </test>
    <test name="RP - Get RPT" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.RpGetRptTest"/>
        </classes>
    </test>
    <test name="RP - Get Claims-Gathering Url" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.UmaGetClaimsGatheringUrlTest"/>
        </classes>
    </test>
    <test name="Introspect RPT" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.IntrospectRptTest"/>
        </classes>
    </test>

    <!-- Custom -->
    <test name="Setup client" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.SetupClientTest"/>
        </classes>
    </test>
    <test name="Get client token" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetClientTokenTest"/>
        </classes>
    </test>
    <test name="Introspect access token" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.IntrospectAccessTokenTest"/>
        </classes>
    </test>
    <test name="JWKS Test" enabled="true">
        <classes>
            <class name="org.gluu.oxd.server.GetJwksTest"/>
        </classes>
    </test>


    <!-- SWAGGER TESTS -->

    <test name="Register site swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.RegisterSiteTest"/>
        </classes>
    </test>

    <test name="Remove site swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.RemoveSiteTest"/>
        </classes>
    </test>

    <test name="Get client token swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetClientTokenTest"/>
        </classes>
    </test>

    <test name="Introspect access token swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.IntrospectAccessTokenTest"/>
        </classes>
    </test>

    <test name="Get authorization url swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetAuthorizationUrlTest"/>
        </classes>
    </test>

    <test name="Get tokens by code swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetTokensByCodeTest"/>
        </classes>
    </test>

    <test name="Get User Info swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetUserInfoTest"/>
        </classes>
    </test>

    <test name="Get Logout Url swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetLogoutUrlTest"/>
        </classes>
    </test>

    <test name="Uma Full swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.UmaFullTest"/>
        </classes>
    </test>

    <test name="RS - Check Access swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.RsCheckAccessTest"/>
        </classes>
    </test>

    <test name="RP - Get RPT swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.RpGetRptTest"/>
        </classes>
    </test>

    <test name="RS - Protect  Swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.RsProtectTest"/>
        </classes>
    </test>

    <test name="Access Token as JWT Test Swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.AccessTokenAsJwtTest"/>
        </classes>
    </test>

    <test name="JWKS Test Swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.GetJwksTest"/>
        </classes>
    </test>

    <test name="RP - Get Claims-Gathering Url Swagger" enabled="true">
        <classes>
            <class name="io.swagger.client.api.UmaGetClaimsGatheringUrlTest"/>
        </classes>
    </test>
    <!-- Mock tests-->
    <test name="Authorization Code Flow Test" enabled="true">
        <classes>
            <class name="org.gluu.oxd.mock.AuthorizationCodeFlowTest"/>
        </classes>
    </test>
</suite>
