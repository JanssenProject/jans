<VirtualHost  *:80>
    ServerName %(hostname)s
    Redirect  / https://%(hostname)s/
    DocumentRoot "%(server_root)s"
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot "%(server_root)s"
    ServerName %(hostname)s:443

    LogLevel warn
    SSLEngine on
    ### If this is using options file from letsencrypt, the below changes should be applied there as well
    ### Example is: Include /etc/letsencrypt/options-ssl-apache.conf
    # SSLProtocol -all +TLSv1.1 +TLSv1.2
    # SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    SSLProtocol -all +TLSv1.2
    SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256
    SSLHonorCipherOrder On
    SSLCertificateFile %(httpdCertFn)s
    SSLCertificateKeyFile %(httpdKeyFn)s

    # SetEnv proxy-nokeepalive 1
    SetEnv proxy-initial-not-pooled 1
    Timeout 60
    ProxyTimeout 60
    # Security headers

    # Header always append X-Frame-Options SAMEORIGIN
    Header always set X-Xss-Protection "1; mode=block"
    Header always set X-Content-Type-Options nosniff
    # Header always set Content-Security-Policy "default-src 'self' 'unsafe-inline' https://%(hostname)s"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
 
    Header edit Set-Cookie ^((?!opbs|session_state).*)$ $1;HttpOnly
    SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0

    # Unset X-ClientCert to make sure that we not get certificate in request
    RequestHeader unset X-ClientCert

    # Turn off support for true Proxy behaviour as we are acting as a transparent proxy
    ProxyRequests Off
 
    # Turn off VIA header as we know where the requests are proxied
    ProxyVia Off

    # Turn on Host header preservation so that the servlet container
    # can write links with the correct host and rewriting can be avoided.
    ProxyPreserveHost On

    # Preserve the scheme when proxying the request to Jetty
    RequestHeader set X-Forwarded-Proto "https" env=HTTPS

    Header unset ETag
    FileETag None

    # Set the permissions for the proxy
    <Proxy *>
        AddDefaultCharset off
        Order deny,allow
        Allow from all
    </Proxy>

    <Location /jans-scim>
        ProxyPass http://localhost:8087/jans-scim retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-fido2>
        ProxyPass http://localhost:8073/jans-fido2 retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth>
        ProxyPass http://localhost:8081/jans-auth retry=5 connectiontimeout=60 timeout=60
        # Header set Access-Control-Allow-Origin "*"
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-config-api>
        ProxyPass http://localhost:8074/jans-config-api retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-eleven>
        ProxyPass http://localhost:8075/jans-eleven retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all
    </Location>

    <Location /casa>
        ProxyPass http://localhost:%(casa_web_port)s/casa retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all 
    </Location>

    <LocationMatch /jans-auth/auth/cert/cert-login.htm>
        SSLVerifyClient optional_no_ca
        SSLVerifyDepth 10
        SSLOptions -StdEnvVars +StrictRequire +ExportCertData

        # Forward certificate to destination server
        RequestHeader set X-ClientCert %{SSL_CLIENT_CERT}s
    </LocationMatch>

    ProxyPass   /.well-known/openid-configuration http://localhost:8081/jans-auth/.well-known/openid-configuration
    ProxyPass   /.well-known/webfinger http://localhost:8081/jans-auth/.well-known/webfinger
    ProxyPass   /.well-known/uma2-configuration http://localhost:8081/jans-auth/restv1/uma2-configuration
    ProxyPass   /.well-known/fido2-configuration http://localhost:8073/jans-fido2/restv1/configuration
    ProxyPass   /.well-known/scim-configuration http://localhost:8087/jans-scim/restv1/scim-configuration
    ProxyPass   /firebase-messaging-sw.js http://localhost:8081/jans-auth/firebase-messaging-sw.js
    ProxyPass   /device-code http://localhost:8081/jans-auth/device_authorization.htm

    ProxyErrorOverride On

    <If "%{REQUEST_URI} =~ m#(.*)(/api/v1/|/jans-config-api/|/restv1/token/|/jans-scim/|)(.*)#">
        ProxyErrorOverride Off
    </If>

    ErrorDocument 404 /custom_404.html
    ErrorDocument 500 /custom_500.html
    ErrorDocument 502 /custom_502.html
    ErrorDocument 503 /custom_503.html
    ErrorDocument 504 /custom_504.html
    
</VirtualHost>
