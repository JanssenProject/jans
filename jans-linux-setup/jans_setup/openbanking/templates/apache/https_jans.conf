<VirtualHost  *:80>
    ServerName %(hostname)s
    Redirect  / https://%(hostname)s/
    DocumentRoot "/var/www/html/"

    RewriteEngine on
    RewriteCond %{SERVER_NAME} =%(hostname)s
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot "/var/www/html/"
    ServerName %(hostname)s:443


    SSLOptions +StdEnvVars
    RequestHeader add X-SSL_PROTOCOL "%{SSL_PROTOCOL}s"
    RequestHeader add CAissuer "%{SSL_CLIENT_I_DN}e"
    RequestHeader add SerialNumber "%{SSL_CLIENT_S_DN}e"
    LogLevel debug ssl:debug
    SSLEngine on
    ### If this is using options file from letsencrypt, the below changes should be applied there as well
    ### Example is: Include /etc/letsencrypt/options-ssl-apache.conf
    # SSLProtocol -all +TLSv1.1 +TLSv1.2
    # SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    SSLProtocol -all +TLSv1.2
    SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256
    SSLHonorCipherOrder On
    SSLCertificateFile /etc/certs/ob/server.crt
    SSLCertificateKeyFile /etc/certs/ob/server.key

    #SSLCertificateFile /etc/letsencrypt/live/%(hostname)s/fullchain.pem
    #SSLCertificateKeyFile /etc/letsencrypt/live/%(hostname)s/privkey.pem
    #Include /etc/letsencrypt/options-ssl-apache.conf

    #following lines for OB trusted certs and revoked certs
    SSLCACertificateFile /etc/certs/ob/ca.crt
    #SSLCARevocationFile revoked.pem 
    #SSLCARevocationCheck chain no_crl_for_cert_ok
    #SSLCARevocationPath /etc/apache2/certs/revoke/


    # SetEnv proxy-nokeepalive 1
    SetEnv proxy-initial-not-pooled 1
    Timeout 60
    ProxyTimeout 60

    # Security headers
    # Header always append X-Frame-Options SAMEORIGIN
    Header always set X-Xss-Protection "1; mode=block"
    Header always set X-Content-Type-Options nosniff
    # Header always set Content-Security-Policy "default-src 'self' 'unsafe-inline' https://%(hostname)s"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

    Header edit Set-Cookie ^((?!opbs|session_state).*)$ $1;HttpOnly
    SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0

    # Unset X-ClientCert to make sure that we not get certificate in request
    # RequestHeader unset X-ClientCert

    # Turn off support for true Proxy behaviour as we are acting as a transparent proxy
    # ProxyRequests Off
 
    # Turn off VIA header as we know where the requests are proxied
    # ProxyVia Off

    # Turn on Host header preservation so that the servlet container
    # can write links with the correct host and rewriting can be avoided.
    ProxyPreserveHost On

    # Preserve the scheme when proxying the request to Jetty
    RequestHeader set X-Forwarded-Proto "https" env=HTTPS

    Header unset ETag
    FileETag None
    
    RequestHeader set X-ClientCert "" 
    # Set the permissions for the proxy
    <Proxy *>
        AddDefaultCharset off
        Order deny,allow
        Allow from all
    </Proxy>

#    <Location /jans-auth>
#        ProxyPass http://localhost:8081/jans-auth retry=5 connectiontimeout=60 timeout=60
#        Header set Access-Control-Allow-Origin "*"
#        Order deny,allow
#        Allow from all
#    </Location>

    <Location /jans-config-api>
        ProxyPass http://localhost:8074/jans-config-api retry=5 connectiontimeout=60 timeout=60
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/restv1/introspection>
        ProxyPass http://localhost:8081/jans-auth/restv1/introspection
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/restv1/authorize>
        ProxyPass http://localhost:8081/jans-auth/restv1/authorize
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/authorize.htm>
        ProxyPass http://localhost:8081/jans-auth/authorize.htm
        Order deny,allow
        Allow from all
    </Location>


    <Location /jans-auth/postlogin.htm>
        ProxyPass http://localhost:8081/jans-auth/postlogin.htm
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/login.htm>
        ProxyPass http://localhost:8081/jans-auth/login.htm
        Order deny,allow
        Allow from all
    </Location>


    <Location /jans-auth/restv1/register>
        SSLVerifyClient require
        SSLVerifyDepth 10
        SSLOptions +StdEnvVars +StrictRequire +ExportCertData


        SSLUserName SSL_CLIENT_S_DN_CN
        # Forward certificate to destination server
        RequestHeader set X-ClientCert "%{SSL_CLIENT_CERT}s"
        #ProxyPreserveHost on 
        ProxyPass http://localhost:8081/jans-auth/restv1/register
        ProxyPassReverse http://localhost:8081/jans-auth/restv1/register
        Order allow,deny 
        Allow from all
    </Location>

    <Location /jans-auth/restv1/token>
        SSLVerifyClient require
        SSLVerifyDepth 10
        SSLOptions +StdEnvVars +StrictRequire +ExportCertData


        # SSLUserName SSL_CLIENT_S_DN_CN
        # Forward certificate to destination server
        RequestHeader set X-ClientCert "%{SSL_CLIENT_CERT}s"
        # ProxyPreserveHost on
        ProxyPass http://localhost:8081/jans-auth/restv1/token
        ProxyPassReverse http://localhost:8081/jans-auth/restv1/token
        Order allow,deny
        Allow from all
    </Location>

    <Location /jans-auth/restv1/device_authorization>
        ProxyPass http://localhost:8081/jans-auth/restv1/device_authorization
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/device_authorization.htm>
        ProxyPass http://localhost:8081/jans-auth/device_authorization.htm
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/js>
        ProxyPass http://localhost:8081/jans-auth/js
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/stylesheet>
        ProxyPass http://localhost:8081/jans-auth/stylesheet
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/servlet>
        ProxyPass http://localhost:8081/jans-auth/servlet
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/restv1/userinfo>
        ProxyPass http://localhost:8081/jans-auth/restv1/userinfo
        Order deny,allow
        Allow from all
    </Location>

    <Location /jans-auth/jakarta.faces.resource>
        ProxyPass http://localhost:8081/jans-auth/jakarta.faces.resource
        Order deny,allow
        Allow from all
    </Location>

    <Location /fapi-rs>
        SSLVerifyClient optional_no_ca
        SSLVerifyDepth 10
        SSLOptions -StdEnvVars +StrictRequire +ExportCertData

        # Forward certificate to destination server
        RequestHeader set X-ClientCert "%{SSL_CLIENT_CERT}s"
    </Location>

    ProxyPass   /fapi-rs/.well-known/openid-configuration http://localhost:8081/jans-auth/fapi-rs/.well-known/openid-configuration
    ProxyPass   /.well-known/openid-configuration http://localhost:8081/jans-auth/.well-known/openid-configuration
    ProxyPass   /.well-known/webfinger http://localhost:8081/jans-auth/.well-known/webfinger
    ProxyPass   /.well-known/uma2-configuration http://localhost:8081/jans-auth/restv1/uma2-configuration
    ProxyPass   /.well-known/fido-configuration http://localhost:8081/jans-auth/restv1/fido-configuration
    ProxyPass   /.well-known/fido-u2f-configuration http://localhost:8081/jans-auth/restv1/fido-configuration
    ProxyPass   /firebase-messaging-sw.js http://localhost:8081/jans-auth/firebase-messaging-sw.js
    ProxyPass   /device-code http://localhost:8081/jans-auth/device_authorization.htm

    ProxyErrorOverride On

    <If "%{REQUEST_URI} =~ m#(.*)(/api/v1/|/jans-config-api/|/restv1/token/|/jans-scim/|)(.*)#">
        ProxyErrorOverride Off
    </If>

    ErrorDocument 404 /custom_404.html
    ErrorDocument 500 /custom_500.html
    ErrorDocument 502 /custom_502.html
    ErrorDocument 503 /custom_503.html
    ErrorDocument 504 /custom_504.html

</VirtualHost>
