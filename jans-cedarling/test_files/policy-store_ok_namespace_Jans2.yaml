# This software is available under the Apache-2.0 license.
# See https://www.apache.org/licenses/LICENSE-2.0.txt for full text.
#
# Copyright (c) 2024, Gluu, Inc.
cedar_version: v4.0.0
policy_stores:
  a1bf93115de86de760ee0bea1d529b521489e5a11747:
    cedar_version: v4.0.0
    name: "Jans2"
    description: A test policy store where everything is fine.
    trusted_issuers:
      Jans123123:
        name: "Jans2"
        description: "A Test IDP"
        openid_configuration_endpoint: "https://account.gluu.org/.well-known/openid-configuration"
        token_metadata:
          access_token:
            entity_type_name: "Jans2::Access_token"
            workload_id: "client_id"
            principal_mapping:
              - "Jans2::Workload"
          id_token:
            entity_type_name: "Jans2::Id_token"
          userinfo_token:
            entity_type_name: "Jans2::Userinfo_token"
            user_id: "sub"
            principal_mapping:
              - "Jans2::User"
    policies:
      1:
        description: simple policy example for principal workload, permit when workload org_id same with resource
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal is Jans2::Workload,
                action in [Jans2::Action::"Update"],
                resource is Jans2::Issue
            )when{
                principal.client_id != "" &&
                principal.access_token.org_id == resource.org_id
            };
      2:
        description: simple policy example for principal user, permit if user country same with the issue
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal is Jans2::User,
                action in [Jans2::Action::"Update"],
                resource is Jans2::Issue
            )when{
                principal.role == ["Admin"]
            };
      3:
        description: simple policy example for principal role, permit when Admin
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal == Jans2::Role::"Admin",
                action in [Jans2::Action::"Update"],
                resource is Jans2::Issue
            );
    schema:
      encoding: none
      content_type: cedar
      body: |-
        namespace Jans {
          entity TrustedIssuer = {"issuer_entity_id": Jans2::Url};
        }
        namespace Jans2 {
          type Url = {"host": String, "path": String, "protocol": String};
          entity Issue = {"country": String, "org_id": String};
          entity Role;
          entity User in [Role] = {
            sub: String,
            role: Set<String>,
            country?: String,
            id_token?: Id_token,
            userinfo_token?: Userinfo_token,
          };
          entity Workload = {
            iss: Jans::TrustedIssuer,
            aud?: String,
            client_id?: String,
            access_token: Access_token,
          };
          entity Access_token = {
            iss: Jans::TrustedIssuer,
            aud: String,
            client_id: String,
            org_id: String,
          };
          entity Id_token = {
            iss: Jans::TrustedIssuer,
            sub: String,
            aud: String,
          };
          entity Userinfo_token  = {
            iss: Jans::TrustedIssuer,
            jti: String,
            role: Set<String>,
          };
          type Context = {
            user: User,
            workload: Workload,
            access_token: Access_token,
            id_token: Id_token,
            userinfo_token: Userinfo_token,
          };
          action "Update" appliesTo {
            principal: [Workload, User, Role],
            resource: [Issue],
            context: Context
          };
        }
