cedar_version: v4.0.0
policy_stores:
  a1bf93115de86de760ee0bea1d529b521489e5a11747:
    cedar_version: v4.0.0
    name: "Jans"
    policies:
      1:
        description: simple policy example for principal workload, permit when workload org_id same with resource
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal is Jans::Workload,
                action in [Jans::Action::"Update",Jans::Action::"UpdateForWorkload",Jans::Action::"UpdateForWorkloadAndRole"],
                resource is Jans::Issue
            )when{
                principal.org_id == resource.org_id
            };
      2:
        description: simple policy example for principal user, permit if user country same with the issue
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal is Jans::User,
                action in [Jans::Action::"Update",Jans::Action::"UpdateForUser",Jans::Action::"UpdateForUserAndRole"],
                resource is Jans::Issue
            )when{
                principal.country == resource.country
            };
      3:
        description: simple policy example for principal role, permit when Admin
        creation_date: '2024-09-20T17:22:39.996050'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            permit(
                principal == Jans::Role::"Admin",
                action in [Jans::Action::"Update",Jans::Action::"UpdateForRole",Jans::Action::"UpdateForUserAndRole",Jans::Action::"UpdateForWorkloadAndRole"],
                resource is Jans::Issue
            );
    schema:
      encoding: none
      content_type: cedar
      # we minimize amount of field in entites to simplify test cases
      body: |-
        namespace Jans {
        type Url = {"host": String, "path": String, "protocol": String};
        entity TrustedIssuer = {"issuer_entity_id": Url};
        entity Issue = {"country": String, "org_id": String};
        entity id_token = {"aud": String,"iss": String, "sub": String};
        entity Role;
        entity User in [Role] = {"country": String};
        entity Workload = {"org_id": String};
        entity Access_token = {"aud": String,"iss": String, "jti": String, "client_id": String,"org_id": String};
        entity Userinfo_token  = {"iss": String, "jti": String, "client_id": String};
        entity Empty;
        action "Update" appliesTo {
          principal: [Workload, User, Role],
          resource: [Issue],
          context: {}
        };
        action "UpdateForWorkload" appliesTo {
          principal: [Workload],
          resource: [Issue],
          context: {}
        };
        action "UpdateForUser" appliesTo {
          principal: [User],
          resource: [Issue],
          context: {}
        };
        action "UpdateForRole" appliesTo {
          principal: [Role],
          resource: [Issue],
          context: {}
        };
        action "UpdateForUserAndRole" appliesTo {
          principal: [User,Role],
          resource: [Issue],
          context: {}
        };
        action "UpdateForWorkloadAndRole" appliesTo {
          principal: [Workload,Role],
          resource: [Issue],
          context: {}
        };
        action "NoApplies" appliesTo {
          principal: [Empty],
          resource: [Issue],
          context: {}
        };
        }
