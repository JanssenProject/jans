cedar_version: "4.0.0"
policy_stores:
  873e650f3739e4800b48d7d6752f93619eee2bc7dad6:
    name: TestPolicy
    description: test
    policies:
      922a050d9ff6f3268a5987ef85a0d8799154fbce0322:
        description: '1'
        creation_date: '2024-11-05T02:52:09.488528'
        policy_content:
          encoding: none
          content_type: cedar
          body: |-
            @id("1")
            forbid
            (
             principal,
             action in [TestPolicy::Action::"Share",TestPolicy::Action::"HEAD",TestPolicy::Action::"Compare"],
             resource in TestPolicy::Application::"Application"
            )
            ;
    trusted_issuers:
      7ca8ccc6e8682ad91f47e651cf7e3dcea4f8133663ae:
        name: Test
        description: '1'
        openid_configuration_endpoint: https://test-casa.gluu.info/.well-known/openid-configuration
        access_tokens:
          trusted: true
          principal_identifier: ''
          role_mapping: ''
        id_tokens:
          trusted: true
          principal_identifier: sub
          role_mapping: ''
        userinfo_tokens:
          trusted: true
          principal_identifier: ''
          role_mapping: role
        tx_tokens:
          trusted: true
          principal_identifier: ''
          role_mapping: ''
    schema:
      encoding: none
      content_type: cedar
      body: |-
        namespace TestPolicy {
          type Context = {"current_time": __cedar::Long, "device_health": Set < __cedar::String >, "fraud_indicators": Set < __cedar::String >, "geolocation": Set < __cedar::String >, "network": __cedar::ipaddr, "network_type": __cedar::String, "operating_system": __cedar::String, "user_agent": __cedar::String};
          type Url = {"host": __cedar::String, "path": __cedar::String, "protocol": __cedar::String};
          type email_address = {"domain": __cedar::String, "id": __cedar::String};
          entity Access_token = {"aud": __cedar::String, "exp": __cedar::Long, "iat": __cedar::Long, "iss": TrustedIssuer, "jti": __cedar::String, "nbf": __cedar::Long, "scope": __cedar::String};
          entity Application = {"app_id": __cedar::String, "name": __cedar::String, "url": Url};
          entity HTTP_Request = {"accept": Set < __cedar::String >, "header": Set < __cedar::String >, "url": Url};
          entity Role;
          entity TrustedIssuer = {"issuer_entity_id": Url};
          entity User in [Role] = {"email": email_address, "phone_number": __cedar::String, "role": Set < __cedar::String >, "sub": __cedar::String, "username": __cedar::String};
          entity Userinfo_token = {"aud": __cedar::String, "birthdate": __cedar::String, "email": email_address, "exp": __cedar::Long, "iat": __cedar::Long, "iss": TrustedIssuer, "jti": __cedar::String, "name": __cedar::String, "phone_number": __cedar::String, "role": Set < __cedar::String >, "sub": __cedar::String};
          entity Workload = {"client_id": __cedar::String, "iss": TrustedIssuer, "name": __cedar::String, "rp_id": __cedar::String, "spiffe_id": __cedar::String};
          entity id_token = {"acr": Set < __cedar::String >, "amr": __cedar::String, "aud": __cedar::String, "azp": __cedar::String, "birthdate": __cedar::String, "email": email_address, "exp": __cedar::Long, "iat": __cedar::Long, "iss": TrustedIssuer, "jti": __cedar::String, "name": __cedar::String, "phone_number": __cedar::String, "role": Set < __cedar::String >, "sub": __cedar::String};
          action "Compare" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "DELETE" appliesTo {
            principal: [Workload],
            resource: [HTTP_Request],
            context: Context
          };
          action "Execute" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "GET" appliesTo {
            principal: [Workload],
            resource: [HTTP_Request],
            context: Context
          };
          action "HEAD" appliesTo {
            principal: [Workload],
            resource: [HTTP_Request],
            context: Context
          };
          action "Monitor" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "PATCH" appliesTo {
            principal: [Workload],
            resource: [HTTP_Request],
            context: Context
          };
          action "PUT" appliesTo {
            principal: [Workload],
            resource: [HTTP_Request],
            context: Context
          };
          action "Read" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "Search" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "Share" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "Tag" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
          action "Write" appliesTo {
            principal: [User, Workload],
            resource: [Application],
            context: Context
          };
        }
