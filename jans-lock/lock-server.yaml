openapi: 3.0.1
info:
  title: Jans Lock API
  contact:
    name: Contact
    url: https://github.com/JanssenProject/jans/discussions
  license:
    name: License
    url: https://github.com/JanssenProject/jans/blob/main/LICENSE
  version: OAS Version
servers:
- url: https://jans.local.io
  description: The Jans server
tags:
- name: Lock - Stat
- name: Lock - Audit Health
- name: Lock - Audit Log
- name: Lock - Audit Telemetry
- name: Lock - SSE
paths:
  /configuration:
    get:
      tags:
      - Lock - Server Configuration
      summary: Request .well-known data
      description: Request .well-know Lock server configuration
      operationId: getConfiguration
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
  /.well-known/lock-server-configuration:
    get:
      tags:
      - Lock - Server Configuration
      summary: Request .well-known data
      description: Request .well-know Lock server configuration
      operationId: doGet
      requestBody:
        description: Telemetry entry
        content:
          '*/*': {}
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
  /audit/health/bulk:
    post:
      tags:
      - Lock - Audit Health
      summary: Bulk save health data
      description: Bulk save health data
      operationId: processBulkHealthRequest_1
      requestBody:
        description: Bulk health entry
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HealthEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/health.write
  /audit/log/bulk:
    post:
      tags:
      - Lock - Audit Log
      summary: Bulk save log data
      description: Bulk save log data
      operationId: processBulkLogRequest_1
      requestBody:
        description: Bulk log entry
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LogEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/log.write
  /audit/telemetry/bulk:
    post:
      tags:
      - Lock - Audit Telemetry
      summary: Bulk save telemetry data
      description: Bulk save telemetry data
      operationId: processBulkTelemetryRequest_1
      requestBody:
        description: Bulk telemetry entry
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TelemetryEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/telemetry.write
  /audit/health:
    post:
      tags:
      - Lock - Audit Health
      summary: Save health data
      description: Save health data
      operationId: processHealthRequest_1
      requestBody:
        description: Health entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/health.write
  /audit/log:
    post:
      tags:
      - Lock - Audit Log
      summary: Save log data
      description: Save log data
      operationId: processLogRequest_1
      requestBody:
        description: Log entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/log.write
  /audit/telemetry:
    post:
      tags:
      - Lock - Audit Telemetry
      summary: Save telemetry data
      description: Save telemetry data
      operationId: processTelemetryRequest_1
      requestBody:
        description: Telemetry entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetryEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/telemetry.write
  /config:
    get:
      operationId: processConfigRequest
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /config/issuers:
    get:
      operationId: processIssuersRequest
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /config/policy:
    get:
      operationId: processPolicyRequest
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /config/schema:
    get:
      operationId: processSchemaRequest
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /sse:
    get:
      tags:
      - Lock - SSE
      summary: Subscribe to SSE events
      description: Subscribe to SSE events
      operationId: subscribe
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - jans_stat
  /internal/stat:
    get:
      tags:
      - Lock - Stat
      summary: Request stat data
      description: Request stat data
      operationId: statGet_1
      parameters:
      - name: month
        in: query
        schema:
          type: string
      - name: start-month
        in: query
        schema:
          type: string
      - name: end-month
        in: query
        schema:
          type: string
      - name: format
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatStatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - jans_stat
    post:
      tags:
      - Lock - Stat
      summary: Request stat data
      description: Request stat data
      operationId: statPost_1
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                month:
                  type: string
                start-month:
                  type: string
                end-month:
                  type: string
                format:
                  type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatStatResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockApiError'
      security:
      - oauth2:
        - jans_stat
components:
  schemas:
    LockApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
    AsyncContext:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
        request:
          $ref: '#/components/schemas/ServletRequest'
        response:
          $ref: '#/components/schemas/ServletResponse'
    Cookie:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        comment:
          type: string
        domain:
          type: string
        maxAge:
          type: integer
          format: int32
        path:
          type: string
        secure:
          type: boolean
        version:
          type: integer
          format: int32
        httpOnly:
          type: boolean
    FilterRegistration:
      type: object
      properties:
        servletNameMappings:
          type: array
          items:
            type: string
        urlPatternMappings:
          type: array
          items:
            type: string
        name:
          type: string
        className:
          type: string
        initParameters:
          type: object
          additionalProperties:
            type: string
    HttpServletMapping:
      type: object
      properties:
        pattern:
          type: string
        servletName:
          type: string
        mappingMatch:
          type: string
          enum:
          - CONTEXT_ROOT
          - DEFAULT
          - EXACT
          - EXTENSION
          - PATH
        matchValue:
          type: string
    HttpServletRequest:
      type: object
      properties:
        method:
          type: string
        session:
          $ref: '#/components/schemas/HttpSession'
        userPrincipal:
          type: object
          properties:
            name:
              type: string
        httpServletMapping:
          $ref: '#/components/schemas/HttpServletMapping'
        requestedSessionId:
          type: string
        requestedSessionIdValid:
          type: boolean
        requestedSessionIdFromCookie:
          type: boolean
        requestedSessionIdFromURL:
          type: boolean
        trailerFieldsReady:
          type: boolean
        requestedSessionIdFromUrl:
          type: boolean
        requestURI:
          type: string
        headerNames:
          type: object
        queryString:
          type: string
        authType:
          type: string
        pathInfo:
          type: string
        contextPath:
          type: string
        remoteUser:
          type: string
        pathTranslated:
          type: string
        cookies:
          type: array
          items:
            $ref: '#/components/schemas/Cookie'
        trailerFields:
          type: object
          additionalProperties:
            type: string
        servletPath:
          type: string
        parts:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        requestURL:
          type: object
          properties:
            length:
              type: integer
              format: int32
              writeOnly: true
            empty:
              type: boolean
        contentLengthLong:
          type: integer
          format: int64
        contentType:
          type: string
        localName:
          type: string
        scheme:
          type: string
        inputStream:
          $ref: '#/components/schemas/ServletInputStream'
        protocol:
          type: string
        locale:
          type: object
          properties:
            language:
              type: string
            displayName:
              type: string
            country:
              type: string
            variant:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
        contentLength:
          type: integer
          format: int32
        attributeNames:
          type: object
        parameterMap:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        characterEncoding:
          type: string
        reader:
          type: object
        servletContext:
          $ref: '#/components/schemas/ServletContext'
        serverName:
          type: string
        serverPort:
          type: integer
          format: int32
        remoteAddr:
          type: string
        remoteHost:
          type: string
        locales:
          type: object
        remotePort:
          type: integer
          format: int32
        secure:
          type: boolean
        localAddr:
          type: string
        parameterNames:
          type: object
        localPort:
          type: integer
          format: int32
        dispatcherType:
          type: string
          enum:
          - FORWARD
          - INCLUDE
          - REQUEST
          - ASYNC
          - ERROR
        asyncStarted:
          type: boolean
        asyncContext:
          $ref: '#/components/schemas/AsyncContext'
        asyncSupported:
          type: boolean
    HttpSession:
      type: object
      properties:
        id:
          type: string
        creationTime:
          type: integer
          format: int64
        attributeNames:
          type: object
        maxInactiveInterval:
          type: integer
          format: int32
        lastAccessedTime:
          type: integer
          format: int64
        servletContext:
          $ref: '#/components/schemas/ServletContext'
        new:
          type: boolean
        sessionContext:
          $ref: '#/components/schemas/HttpSessionContext'
        valueNames:
          type: array
          items:
            type: string
    HttpSessionContext:
      type: object
      properties:
        ids:
          type: object
    JspConfigDescriptor:
      type: object
      properties:
        jspPropertyGroups:
          type: array
          items:
            $ref: '#/components/schemas/JspPropertyGroupDescriptor'
        taglibs:
          type: array
          items:
            $ref: '#/components/schemas/TaglibDescriptor'
    JspPropertyGroupDescriptor:
      type: object
      properties:
        buffer:
          type: string
        scriptingInvalid:
          type: string
        trimDirectiveWhitespaces:
          type: string
        deferredSyntaxAllowedAsLiteral:
          type: string
        defaultContentType:
          type: string
        errorOnUndeclaredNamespace:
          type: string
        isXml:
          type: string
        includePreludes:
          type: array
          items:
            type: string
        urlPatterns:
          type: array
          items:
            type: string
        pageEncoding:
          type: string
        includeCodas:
          type: array
          items:
            type: string
        elIgnored:
          type: string
    Part:
      type: object
      properties:
        contentType:
          type: string
        name:
          type: string
        size:
          type: integer
          format: int64
        inputStream:
          type: object
        headerNames:
          type: array
          items:
            type: string
        submittedFileName:
          type: string
    ReadListener:
      type: object
    ServletContext:
      type: object
      properties:
        classLoader:
          type: object
          properties:
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            parent:
              type: object
              properties:
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
                unnamedModule:
                  type: object
                  properties:
                    name:
                      type: string
                    descriptor:
                      type: object
                      properties:
                        open:
                          type: boolean
                        automatic:
                          type: boolean
                    named:
                      type: boolean
                    annotations:
                      type: array
                      items:
                        type: object
                    declaredAnnotations:
                      type: array
                      items:
                        type: object
                    packages:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    layer:
                      type: object
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationTitle:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
            unnamedModule:
              type: object
              properties:
                name:
                  type: string
                descriptor:
                  type: object
                  properties:
                    open:
                      type: boolean
                    automatic:
                      type: boolean
                named:
                  type: boolean
                annotations:
                  type: array
                  items:
                    type: object
                declaredAnnotations:
                  type: array
                  items:
                    type: object
                packages:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                layer:
                  type: object
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationTitle:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
        majorVersion:
          type: integer
          format: int32
        minorVersion:
          type: integer
          format: int32
        attributeNames:
          type: object
        servlets:
          type: object
        servletNames:
          type: object
        serverInfo:
          type: string
        filterRegistrations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FilterRegistration'
        servletContextName:
          type: string
        servletRegistrations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServletRegistration'
        sessionCookieConfig:
          $ref: '#/components/schemas/SessionCookieConfig'
        defaultSessionTrackingModes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
        sessionTrackingModes:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
        virtualServerName:
          type: string
        requestCharacterEncoding:
          type: string
        responseCharacterEncoding:
          type: string
        effectiveMinorVersion:
          type: integer
          format: int32
        effectiveSessionTrackingModes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
        jspConfigDescriptor:
          $ref: '#/components/schemas/JspConfigDescriptor'
        effectiveMajorVersion:
          type: integer
          format: int32
        contextPath:
          type: string
        initParameterNames:
          type: object
        sessionTimeout:
          type: integer
          format: int32
    ServletInputStream:
      type: object
      properties:
        finished:
          type: boolean
        ready:
          type: boolean
        readListener:
          $ref: '#/components/schemas/ReadListener'
    ServletOutputStream:
      type: object
      properties:
        writeListener:
          $ref: '#/components/schemas/WriteListener'
        ready:
          type: boolean
    ServletRegistration:
      type: object
      properties:
        mappings:
          type: array
          items:
            type: string
        runAsRole:
          type: string
        name:
          type: string
        className:
          type: string
        initParameters:
          type: object
          additionalProperties:
            type: string
    ServletRequest:
      type: object
      properties:
        contentLengthLong:
          type: integer
          format: int64
        contentType:
          type: string
        localName:
          type: string
        scheme:
          type: string
        inputStream:
          $ref: '#/components/schemas/ServletInputStream'
        protocol:
          type: string
        locale:
          type: object
          properties:
            language:
              type: string
            displayName:
              type: string
            country:
              type: string
            variant:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
        contentLength:
          type: integer
          format: int32
        attributeNames:
          type: object
        parameterMap:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        characterEncoding:
          type: string
        reader:
          type: object
        servletContext:
          $ref: '#/components/schemas/ServletContext'
        serverName:
          type: string
        serverPort:
          type: integer
          format: int32
        remoteAddr:
          type: string
        remoteHost:
          type: string
        locales:
          type: object
        remotePort:
          type: integer
          format: int32
        secure:
          type: boolean
        localAddr:
          type: string
        parameterNames:
          type: object
        localPort:
          type: integer
          format: int32
        dispatcherType:
          type: string
          enum:
          - FORWARD
          - INCLUDE
          - REQUEST
          - ASYNC
          - ERROR
        asyncStarted:
          type: boolean
        asyncContext:
          $ref: '#/components/schemas/AsyncContext'
        asyncSupported:
          type: boolean
    ServletResponse:
      type: object
      properties:
        contentType:
          type: string
        contentLength:
          type: integer
          format: int32
          writeOnly: true
        outputStream:
          $ref: '#/components/schemas/ServletOutputStream'
        locale:
          type: object
          properties:
            language:
              type: string
            displayName:
              type: string
            country:
              type: string
            variant:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
        characterEncoding:
          type: string
        writer:
          type: object
        contentLengthLong:
          type: integer
          format: int64
          writeOnly: true
        committed:
          type: boolean
        bufferSize:
          type: integer
          format: int32
    SessionCookieConfig:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        comment:
          type: string
        secure:
          type: boolean
        httpOnly:
          type: boolean
        domain:
          type: string
        maxAge:
          type: integer
          format: int32
    TaglibDescriptor:
      type: object
      properties:
        taglibLocation:
          type: string
        taglibURI:
          type: string
    WriteListener:
      type: object
    HttpServletResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        trailerFields:
          type: object
        headerNames:
          type: array
          items:
            type: string
        contentType:
          type: string
        contentLength:
          type: integer
          format: int32
          writeOnly: true
        outputStream:
          $ref: '#/components/schemas/ServletOutputStream'
        locale:
          type: object
          properties:
            language:
              type: string
            displayName:
              type: string
            country:
              type: string
            variant:
              type: string
            script:
              type: string
            unicodeLocaleAttributes:
              uniqueItems: true
              type: array
              items:
                type: string
            unicodeLocaleKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            displayLanguage:
              type: string
            displayScript:
              type: string
            displayCountry:
              type: string
            displayVariant:
              type: string
            extensionKeys:
              uniqueItems: true
              type: array
              items:
                type: string
            iso3Language:
              type: string
            iso3Country:
              type: string
        characterEncoding:
          type: string
        writer:
          type: object
        contentLengthLong:
          type: integer
          format: int64
          writeOnly: true
        committed:
          type: boolean
        bufferSize:
          type: integer
          format: int32
    HealthEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        status:
          type: string
        engineStatus:
          type: string
        baseDn:
          type: string
        inum:
          type: string
    LogEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        eventType:
          type: string
        severetyLevel:
          type: string
        action:
          type: string
        decisionResult:
          type: string
        requestedResource:
          type: string
        princiaplId:
          type: string
        clientId:
          type: string
        contextInformation:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
    TelemetryEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        status:
          type: string
        lastPolicyLoadSize:
          type: integer
          format: int32
        policySuccessLoadCounter:
          type: integer
          format: int64
        policyFailedLoadCounter:
          type: integer
          format: int64
        lastPolicyEvaluationTimeNs:
          type: integer
          format: int32
        avgPolicyEvaluationTimeNs:
          type: integer
          format: int32
        evaluationRequestsCount:
          type: integer
          format: int64
        policyStats:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
        memoryUsage:
          type: string
    FlatStatResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/StatResponseItem'
    StatResponseItem:
      type: object
      properties:
        month:
          type: string
        monthly_active_users:
          type: integer
          format: int64
        monthly_active_clients:
          type: integer
          format: int64
        operations_by_type:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: int64
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://{op-hostname}/.../token"
          scopes:
            https://jans.io/oauth/lock-config.readonly: View configuration related
              information
            https://jans.io/lock-server/issuers.read: View issuers related information
            https://jans.io/lock-server/schema.read: View schema related information
            https://jans.io/lock-server/policy.read: View policy related information
            https://jans.io/oauth/lock/health.write: Write audit health entries
            https://jans.io/oauth/lock/log.write: Write audit log entries
            https://jans.io/oauth/lock/telemetry.write: Write telemetry health entries
            https://jans.io/oauth/lock/sse.read: Subscribe to SSE events
            jans_stat: View stat related information
