{{- if not .Values.global.cnConfiguratorCustomSchema.secretName -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-configuration-file
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: configurator
{{ include "config.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if or (.Values.additionalAnnotations) (.Values.global.config.customAnnotations.secret) }}
  annotations:
{{- if .Values.additionalAnnotations }}
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
{{- if .Values.global.config.customAnnotations.secret }}
{{ toYaml .Values.global.config.customAnnotations.secret | indent 4 }}
{{- end }}
{{- end }}
type: Opaque
stringData:
  {{ .Values.global.cnConfiguratorConfigurationFile | base }}: |-
    {
      "_configmap": {
        "hostname": {{ .Values.global.fqdn | quote }},
        "country_code": {{ .Values.countryCode | quote }},
        "state": {{ .Values.state | quote }},
        "city": {{ .Values.city | quote }},
        "admin_email": {{ .Values.email | quote }},
        "orgName": {{ .Values.orgName | quote }},
        "auth_sig_keys": {{ index .Values "global" "auth-server" "authSigKeys" | quote }},
        "auth_enc_keys": {{ index .Values "global" "auth-server" "authEncKeys" | quote }},
        "optional_scopes": {{ list (include "config.optionalScopes" . | fromJsonArray | join ",") | quote }},
        {{- if .Values.global.saml.enabled }}
        "kc_admin_username": {{ .Values.configmap.kcAdminUsername | quote }},
        {{- end }}
        "init_keys_exp": {{ index .Values "global" "auth-server-key-rotation" "initKeysLife" }}
      },
      "_secret": {
        "admin_password": {{ .Values.adminPassword | quote }},
        "redis_password": {{ .Values.redisPassword | quote }},
        {{ if or ( eq .Values.global.cnPersistenceType "sql" ) ( eq .Values.global.cnPersistenceType "hybrid" ) }}
        "sql_password": {{ .Values.configmap.cnSqldbUserPassword | quote }},
        {{- end }}
        {{ if eq .Values.global.configSecretAdapter "vault" }}
        "vault_role_id": {{ .Values.configmap.cnVaultRoleId | quote }},
        "vault_secret_id": {{ .Values.configmap.cnVaultSecretId | quote }},
        {{- end }}
        {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.configAdapterName "google") }}
        "google_credentials": {{ .Values.configmap.cnGoogleSecretManagerServiceAccount | quote }},
        {{- end }}
        {{ if or (eq .Values.global.configAdapterName "aws") (eq .Values.global.configSecretAdapter "aws") }}
        "aws_credentials": {{ include "config.aws-shared-credentials" . | b64enc | quote }},
        "aws_config": {{ include "config.aws-config" . | b64enc | quote }},
        "aws_replica_regions": {{ .Values.configmap.cnAwsSecretsReplicaRegions | toJson | b64enc | quote }},
        {{- end }}
        {{- if .Values.global.saml.enabled }}
        "kc_db_password": {{ .Values.configmap.kcDbPassword | quote }},
        "kc_admin_password": {{ .Values.configmap.kcAdminPassword | quote }},
        {{- end }}
        "encoded_salt": {{ .Values.salt | quote }}
      }
    }
{{- end -}}
