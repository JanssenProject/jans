apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: auth-server
{{ include "auth-server.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if or (.Values.additionalAnnotations) (index .Values.global "auth-server" "customAnnotations" "deployment") }}
  annotations:
{{- if .Values.additionalAnnotations }}
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
{{- if index .Values.global "auth-server" "customAnnotations" "deployment" }}
{{ toYaml (index .Values.global "auth-server" "customAnnotations" "deployment") | indent 4 }}
{{- end }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ include "auth-server.name" . }}
  template:
    metadata:
      labels:
        APP_NAME: auth-server
        app: {{ .Release.Name }}-{{ include "auth-server.name" . }}
      {{- if .Values.global.istio.ingress }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- include "auth-server.topology-spread-constraints" . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      containers:
      - name: {{ include "auth-server.name" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
          - name: CN_AUTH_JAVA_OPTIONS
            value: {{ include "auth-server.customJavaOptions" . | trim }}
          {{- include "auth-server.usr-envs" . | indent 10 }}
          {{- include "auth-server.usr-secret-envs" . | indent 10 }}
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        {{- if or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local") ( .Values.customScripts) }}
        command:
          - /bin/sh
          - -c
          - |
              {{- with .Values.customScripts }}
              {{- toYaml . | replace "- " "" | nindent 14}}
              {{- end }}
              {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
              /usr/bin/python3 /scripts/updatelbip.py &
              {{- end}}
              /app/scripts/entrypoint.sh
        {{- end}}
        ports:
        - name: {{ .Values.service.name }}
          containerPort: {{ .Values.service.port }}
        {{ if .Values.global.cnPrometheusPort }}
        - name: prometheus-port
          containerPort: {{ .Values.global.cnPrometheusPort }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config-cm
        {{ if .Values.global.usrEnvs.secret }}
        - secretRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        {{ if .Values.global.usrEnvs.normal }}
        - configMapRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        lifecycle:
{{- toYaml .Values.lifecycle | nindent 10 }}
        volumeMounts:
        {{- with .Values.volumeMounts }}
{{- toYaml . | nindent 10 }}
        {{- end }}
        {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
          - mountPath: {{ .Values.global.cnAwsSharedCredentialsFile }}
            name: aws-shared-credential-file
            subPath: aws_shared_credential_file
          - mountPath: {{ .Values.global.cnAwsConfigFile }}
            name: aws-config-file
            subPath: aws_config_file
          - mountPath: {{ .Values.global.cnAwsSecretsReplicaRegionsFile }}
            name: aws-secrets-replica-regions
            subPath: aws_secrets_replica_regions
        {{- end }}
        {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.cnPersistenceType "spanner") }}
          - mountPath: {{ .Values.global.cnGoogleApplicationCredentials }}
            name: google-sa
            subPath: google-credentials.json
        {{- end }}
        {{ if eq .Values.global.configSecretAdapter "vault" }}
          - name: vault
            mountPath: /etc/certs/vault_role_id
            subPath: vault_role_id
          - name: vault
            mountPath: /etc/certs/vault_secret_id
            subPath: vault_secret_id
        {{- end }}
        {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
          - name: {{ include "auth-server.fullname" .}}-updatelbip
            mountPath: "/scripts"
        {{- end }}
        livenessProbe:
{{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
{{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- if and ( .Values.global.opendj.enabled ) (or (eq .Values.global.storageClass.provisioner "microk8s.io/hostpath" ) (eq .Values.global.storageClass.provisioner "k8s.io/minikube-hostpath")) }}
        resources: {}
        {{- else if .Values.global.cloud.testEnviroment }}
        resources: {}
        {{- else }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
      {{- if not .Values.global.isFqdnRegistered  }}
      hostAliases:
      - ip: {{ .Values.global.lbIp }}
        hostnames:
        - {{ .Values.global.fqdn }}
      {{- end }}
      volumes:
      {{- with .Values.volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
        - name: aws-shared-credential-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_shared_credential_file
                path: aws_shared_credential_file
        - name: aws-config-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_config_file
                path: aws_config_file
        - name: aws-secrets-replica-regions
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_secrets_replica_regions
                path: aws_secrets_replica_regions
      {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.cnPersistenceType "spanner") }}
        - name: google-sa
          secret:
            secretName: {{ .Release.Name }}-google-sa
      {{- end }}
      {{ if eq .Values.global.configSecretAdapter "vault" }}
        - name: vault
          secret:
            secretName: {{ .Release.Name }}-vault
            items:
            - key: vault_role_id
              path: vault_role_id
            - key: vault_secret_id
              path: vault_secret_id
      {{- end }}
      {{- if and (not .Values.global.isFqdnRegistered ) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
        - name: {{ include "auth-server.fullname" . }}-updatelbip
          configMap:
            name: {{ .Release.Name }}-updatelbip
      {{- end }}
