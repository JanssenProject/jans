# License terms and conditions for Janssen Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
# -- Middleware API to help application developers call an OAuth, OpenID or UMA server. You may wonder why this is necessary. It makes it easier for client developers to use OpenID signing and encryption features, without becoming crypto experts. This API provides some high level endpoints to do some of the heavy lifting.
# -- Configure the HorizontalPodAutoscaler
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
  # -- metrics if targetCPUUtilizationPercentage is not set
  metrics: []
  # -- Scaling Policies
  behavior: {}
# -- Add custom normal and secret envs to the service
usrEnvs:
  # -- Add custom normal envs to the service
  # variable1: value1
  normal: {}
  # -- Add custom secret envs to the service
  # variable1: value1
  secret: {}
# -- Add custom dns policy
dnsPolicy: ""
# -- Add custom dns config
dnsConfig: {}
image:
  # -- Image pullPolicy to use for deploying.
  pullPolicy: IfNotPresent
  # -- Image  to use for deploying.
  repository: janssenproject/client-api
  # -- Image  tag to use for deploying.
  tag: 1.0.0_b9
  # -- Image Pull Secrets
  pullSecrets: [ ]
# -- Service replica number.
replicas: 1
# -- Resource specs.
resources:
  limits:
    # -- CPU limit.
    cpu: 1000m
    # -- Memory limit.
    memory: 400Mi
  requests:
    # -- CPU request.
    cpu: 1000m
    # -- Memory request.
    memory: 400Mi
# -- Configure the liveness healthcheck for the auth server if needed.
livenessProbe:
  # -- Executes the python3 healthcheck.
  exec:
    command:
      - curl
      - -k
      - https://localhost:8443/health-check
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
# -- Configure the readiness healthcheck for the auth server if needed.
readinessProbe:
  exec:
    command:
      - curl
      - -k
      - https://localhost:8443/health-check
  initialDelaySeconds: 25
  periodSeconds: 25
  timeoutSeconds: 5
# -- Configure any additional volumes that need to be attached to the pod
volumes: []
# -- Configure any additional volumesMounts that need to be attached to the containers
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
