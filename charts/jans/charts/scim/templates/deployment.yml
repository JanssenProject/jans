# License terms and conditions for Janssen Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scim.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    APP_NAME: scim
{{ include "scim.labels" . | indent 4}}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "scim.name" . }}
  template:
    metadata:
      labels:
        APP_NAME: scim
        app: {{ include "scim.name" . }}
      {{- if .Values.global.istio.ingress }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      {{- end }}
    spec:
      containers:
      - name: {{ include "scim.name" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        {{- if and (eq .Values.global.isFqdnRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
        command:
          - /bin/sh
          - -c
          - |
              /usr/bin/python3 /scripts/updatelbip.py &
              /app/scripts/entrypoint.sh
        {{- end}}
        {{- if or (eq .Values.global.storageClass.provisioner "microk8s.io/hostpath" ) (eq .Values.global.storageClass.provisioner "k8s.io/minikube-hostpath") }}
        resources: {}
        {{- else if .Values.global.cloud.testEnviroment }}
        resources: {}
        {{- else }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.ports.containerPort }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config-cm
        volumeMounts:
        {{ if eq .Values.global.configSecretAdapter "google" }}
        - mountPath: {{ .Values.global.cnGoogleApplicationCredentials }}
          name: google-secret-manager-sa
          subPath: google-credentials.json
        {{- end }}
        {{- if eq .Values.global.cnPersistenceType "sql" }}
        - name: sql-pass
          mountPath: "/etc/jans/conf/sql_password"
          subPath: sql_password
        {{- end }}
        {{- if and (eq .Values.global.isFqdnRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
          - name: {{ include "scim.fullname" .}}-updatelbip
            mountPath: "/scripts"
        {{- end }}
        {{- if or (eq .Values.global.cnPersistenceType "couchbase") (eq .Values.global.cnPersistenceType "hybrid") }}
          - name: cb-pass
            mountPath: "/etc/jans/conf/couchbase_password"
            subPath: couchbase_password
          {{- if not .Values.global.istio.enabled }}
          - name: cb-crt 
            mountPath: "/etc/certs/couchbase.crt"
            subPath: couchbase.crt
          {{- end }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /jans-scim/sys/health-check
            port: {{ .Values.ports.containerPort }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /jans-scim/sys/health-check
            port: {{ .Values.ports.containerPort }}
          initialDelaySeconds: 25
          periodSeconds: 25
          timeoutSeconds: 5
      {{- if eq .Values.global.isFqdnRegistered "false" }}
      hostAliases:
      - ip: {{ .Values.global.lbIp }}
        hostnames:
        - {{ .Values.global.fqdn }}
      {{- end }}
      volumes:
      {{ if eq .Values.global.configSecretAdapter "google" }}
        - name: google-secret-manager-sa
          secret:
            secretName: {{ .Release.Name }}-google-secret-manager-sa
      {{- end }}
      {{- if eq .Values.global.cnPersistenceType "sql" }}
        - name: sql-pass
          secret:
            secretName: {{ .Release.Name }}-sql-pass
      {{- end }}
      {{- if or (eq .Values.global.cnPersistenceType "couchbase") (eq .Values.global.cnPersistenceType "hybrid") }}
        - name: cb-pass
          secret:
            secretName: {{ .Release.Name }}-cb-pass
        {{- if not .Values.global.istio.enabled }}
        - name: cb-crt 
          secret:
            secretName: {{ .Release.Name }}-cb-crt
        {{- end }}
      {{- end }}
      {{- if and (eq .Values.global.isFqdnRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
        - name: {{ include "scim.fullname" . }}-updatelbip
          configMap:
            name: {{ .Release.Name }}-updatelbip
      {{- end }}
      