{
    "start": 0,
    "totalEntriesCount": 37,
    "entriesCount": 2,
    "entries": [
        {
            "dn": "inum=0300-BA90,ou=scripts,o=jans",
            "inum": "0300-BA90",
            "name": "discovery_java_params",
            "description": "Java Custom Sample Script",
            "script": "/* Copyright (c) 2022, Gluu\n Author: Yuriy Z\n */\n\nimport io.jans.model.SimpleCustomProperty;\nimport io.jans.model.custom.script.model.CustomScript;\nimport io.jans.model.custom.script.type.discovery.DiscoveryType;\nimport io.jans.service.custom.script.CustomScriptManager;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.json.JSONObject;\n\nimport java.util.Map;\n\npublic class Discovery implements DiscoveryType {\n\n    private static final Logger log = LoggerFactory.getLogger(Discovery.class);\n    private static final Logger scriptLogger = LoggerFactory.getLogger(CustomScriptManager.class);\n\n    @Override\n    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Destroy of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public int getApiVersion() {\n        log.info(\"getApiVersion Discovery Java custom script: 11\");\n        return 11;\n    }\n\n    @Override\n    public boolean modifyResponse(Object responseAsJsonObject, Object context) {\n        scriptLogger.info(\"write to script logger\");\n        JSONObject response = (JSONObject) responseAsJsonObject;\n        response.accumulate(\"key_from_java\", \"value_from_script_on_java\");\n        return true;\n    }\n}\n",
            "scriptType": "discovery",
            "programmingLanguage": "java",
            "moduleProperties": [
                {
                    "value1": "location_type",
                    "value2": "ldap"
                }
            ],
            "level": 1,
            "revision": 11,
            "enabled": true,
            "modified": false,
            "internal": false,
            "locationType": "ldap",
            "baseDn": "inum=0300-BA90,ou=scripts,o=jans"
        },
        {
            "dn": "inum=031C-4A65,ou=scripts,o=jans",
            "inum": "031C-4A65",
            "name": "id_generator",
            "description": "Sample Id Generator script",
            "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.id import IdGeneratorType\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom java.util import Arrays, ArrayList\n\nimport java\n\nclass IdGenerator(IdGeneratorType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Id generator. Initialization\"\n        print \"Id generator. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Id generator. Destroy\"\n        print \"Id generator. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Id generator init method\n    #   appId is application Id\n    #   idType is Id Type\n    #   idPrefix is Id Prefix\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def generateId(self, appId, idType, idPrefix, configurationAttributes):\n        print \"Id generator. Generate Id\"\n        print \"Id generator. Generate Id. AppId: '\", appId, \"', IdType: '\", idType, \"', IdPrefix: '\", idPrefix, \"'\"\n\n        # Return None or empty string to trigger default Id generation method\n        return None\n",
            "scriptType": "id_generator",
            "programmingLanguage": "python",
            "moduleProperties": [
                {
                    "value1": "location_type",
                    "value2": "ldap"
                }
            ],
            "level": 100,
            "revision": 1,
            "enabled": false,
            "modified": false,
            "internal": false,
            "locationType": "ldap",
            "baseDn": "inum=031C-4A65,ou=scripts,o=jans"
        }
    ]
}