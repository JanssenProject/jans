openapi: 3.0.1
info:
  title: Jans Config API - SAML
  contact:
    name: Gluu Support
    url: https://support.gluu.org
    email: xxx@gluu.org
  license:
    name: Apache 2.0
    url: https://github.com/JanssenProject/jans/blob/main/LICENSE
  version: 1.0.0
servers:
- url: https://jans.io/
  description: The Jans server
  variables: {}
tags:
- name: SAML - Configuration
- name: SAML - Trust Relationship
paths:
  /saml/samlConfig:
    get:
      tags:
      - SAML - Configuration
      summary: Gets SAML configuration properties
      description: Gets SAML configuration properties
      operationId: get-saml-properties
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-config.readonly
    put:
      tags:
      - SAML - Configuration
      summary: Update SAML configuration properties
      description: Update SAML configuration properties
      operationId: put-saml-properties
      requestBody:
        description: GluuAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlAppConfiguration'
            examples:
              Request example:
                description: Request example
                value: |
                  {
                    "applicationName":"saml",
                    "samlTrustRelationshipDn":"ou=trustRelationships,o=jans",
                    "samlEnabled": "true",
                    "selectedIdp": "keycloak",
                    "idpRootDir": "/opt/idp/configs/",
                    "idpMetadataFilePattern":"%s-idp-metadata.xml",
                    "spMetadataFilePattern":"%s-sp-metadata.xml",
                    "idpConfigs":[
                      {
                        "configId":"keycloak",
                        "rootDir":"/opt/idp/configs/keycloak",
                        "enabled": "true",
                        "metadataTempDir": "/opt/idp/configs/keycloak/temp_metadata",
                        "metadataDir":"/opt/idp/configs/keycloak/metadata",
                        "metadataFilePattern":"%s-idp-metadata.xml"
                      }
                    ]
                  }
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-config.write
    patch:
      tags:
      - SAML - Configuration
      summary: Partially modifies SAML configuration properties.
      description: Partially modifies SAML Configuration properties.
      operationId: patch-saml-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [{
                      "op": "replace",
                      "path": "/samlEnabled",
                      "value": false
                  },
                  {
                     "op": "add",
                      "path": "/idpConfigs/1",
                      "value":  {
                              "configId": "shibboleth",
                              "rootDir": "/opt/idp/configs/shibboleth",
                              "enabled": false,
                              "metadataTempDir": "/opt/idp/configs/shibboleth/temp_metadata",
                              "metadataDir": "/opt/idp/configs/shibboleth/metadata",
                              "metadataFilePattern": "%s-idp-metadata.xml"
                          }
                  }
                  ]
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-config.write
  /saml/trust-relationship/upload:
    post:
      tags:
      - SAML - Trust Relationship
      summary: Create Trust Relationship with Metadata File
      description: Create Trust Relationship with Metadata File
      operationId: post-trust-relationship-metadata-file
      requestBody:
        description: Trust Relationship object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationship'
            examples:
              Request example:
                description: Request example
                value: ""
      responses:
        "201":
          description: Newly created Trust Relationship
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/TrustRelationshipForm'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/trust-relationship/{id}:
    delete:
      tags:
      - SAML - Trust Relationship
      summary: Delete TrustRelationship
      description: Delete TrustRelationship
      operationId: put-trust-relationship
      parameters:
      - name: id
        in: path
        description: Unique Id of Trust Relationship
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/trust-relationship:
    get:
      tags:
      - SAML - Trust Relationship
      summary: Get all Trust Relationship
      description: Get all TrustRelationship.
      operationId: get-trust-relationship
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.readonly
    put:
      tags:
      - SAML - Trust Relationship
      summary: Update TrustRelationship
      description: Update TrustRelationship
      operationId: put-trust-relationship_1
      requestBody:
        description: Trust Relationship object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationship'
            examples:
              Request example:
                description: Request example
                value: ""
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/trust-relationship/id/{id}:
    get:
      tags:
      - SAML - Trust Relationship
      summary: Get TrustRelationship by Id
      description: Get TrustRelationship by Id
      operationId: get-trust-relationship-by-id
      parameters:
      - name: id
        in: path
        description: Unique identifier - Id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.readonly
  /saml/trust-relationship/PROCESS_META_FILE:
    post:
      tags:
      - SAML - Trust Relationship
      summary: Process unprocessed metadata files
      description: Process unprocessed metadata files
      operationId: post-metadata-files
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
components:
  schemas:
    IdpConfig:
      type: object
      properties:
        configId:
          type: string
        rootDir:
          type: string
        enabled:
          type: boolean
        metadataTempDir:
          type: string
        metadataDir:
          type: string
        metadataFilePattern:
          type: string
    SamlAppConfiguration:
      type: object
      properties:
        applicationName:
          type: string
        samlTrustRelationshipDn:
          type: string
        samlEnabled:
          type: boolean
        selectedIdp:
          type: string
        idpRootDir:
          type: string
        idpMetadataFilePattern:
          type: string
        spMetadataFilePattern:
          type: string
        spMetadataFile:
          type: string
        configGeneration:
          type: boolean
        ignoreValidation:
          type: boolean
        idpConfigs:
          type: array
          items:
            $ref: '#/components/schemas/IdpConfig'
    JsonPatch:
      type: object
    ProfileConfiguration:
      type: object
      properties:
        name:
          type: string
        signResponses:
          type: string
    TrustRelationship:
      required:
      - description
      - displayName
      - spMetaDataSourceType
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        owner:
          type: string
        clientId:
          type: string
        displayName:
          maxLength: 60
          minLength: 0
          type: string
        description:
          maxLength: 4000
          minLength: 0
          type: string
        rootUrl:
          type: string
        adminUrl:
          type: string
        baseUrl:
          type: string
        surrogateAuthRequired:
          type: boolean
        enabled:
          type: boolean
        alwaysDisplayInConsole:
          type: boolean
        clientAuthenticatorType:
          type: string
        secret:
          type: string
        registrationAccessToken:
          type: string
        consentRequired:
          type: boolean
        spMetaDataSourceType:
          type: string
          enum:
          - file
          - uri
          - federation
          - manual
          - mdq
        spMetaDataURL:
          type: string
        metaLocation:
          type: string
        jansEntityId:
          type: array
          items:
            type: string
        releasedAttributes:
          type: array
          items:
            type: string
        url:
          pattern: "^(https?|http)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
          type: string
        spLogoutURL:
          pattern: "^$|(^(https?|http)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|])"
          type: string
        status:
          type: string
          enum:
          - active
          - inactive
          - expired
          - register
        validationStatus:
          type: string
          enum:
          - In Progress
          - Success
          - Scheduled
          - Failed
        validationLog:
          type: array
          items:
            type: string
        profileConfigurations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileConfiguration'
        baseDn:
          type: string
    TrustRelationshipForm:
      required:
      - metaDataFile
      - trustRelationship
      type: object
      properties:
        trustRelationship:
          $ref: '#/components/schemas/TrustRelationship'
        metaDataFile:
          type: object
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://{op-hostname}/.../token"
          scopes:
            https://jans.io/oauth/config/saml.readonly: View SAML related information
            https://jans.io/oauth/config/saml.write: Manage SAML related information
            https://jans.io/oauth/config/saml-config.readonly: View SAML configuration
              related information
            https://jans.io/oauth/config/saml-config.write: Manage SAML configuration
              related information
