openapi: 3.0.1
info:
  title: Jans Config API - SAML
  contact:
    name: Gluu Support
    url: https://support.gluu.org
    email: xxx@gluu.org
  license:
    name: Apache 2.0
    url: https://github.com/JanssenProject/jans/blob/main/LICENSE
  version: 1.0.0
servers:
- url: https://jans.io/
  description: The Jans server
  variables: {}
tags:
- name: SAML - Configuration
- name: SAML - Trust Relationship
paths:
  /saml/samlConfig:
    get:
      tags:
      - SAML - Configuration
      summary: Gets Jans SAML configuration properties
      description: Gets Jans SAML configuration properties
      operationId: get-properties-saml
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlConfig'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-config.readonly
  /saml/clientScope/{clientId}:
    get:
      tags:
      - SAML - Client Scope
      summary: Get Client Scope
      description: Get Client Scope
      operationId: get-saml-client-scope
      parameters:
      - name: clientId
        in: path
        description: Client Id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-client-scope.readonly
    put:
      tags:
      - SAML - Client Scope
      summary: Update Client Scope
      description: Update Client Scope
      operationId: post-saml-client-scope_1
      parameters:
      - name: clientId
        in: path
        description: Client Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProtocolMapperRepresentation'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-client-scope.write
    post:
      operationId: addClientScope
      parameters:
      - name: clientId
        in: path
        description: Client Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
  /saml/clientScope/test/{clientId}:
    post:
      tags:
      - SAML - Client Scope
      summary: Add new Client Scope
      description: Add new Client Scope
      operationId: post-saml-client-scope
      parameters:
      - name: clientId
        in: path
        description: Client Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml-client-scope.write
  /saml/samlClient/test:
    post:
      tags:
      - SAML - Trust Relationship
      summary: Create Trust Relationship
      description: Create Trust Relationship
      operationId: post-trust-relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationship'
      responses:
        "201":
          description: clientList
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/samlClient/upload:
    post:
      tags:
      - SAML - Trust Relationship
      summary: Create Trust Relationship with File
      description: Create Trust Relationship with File
      operationId: post-trust-relationship-file
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          description: clientList
          content:
            multipart/form-data:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/samlClient/{id}:
    delete:
      tags:
      - SAML - Trust Relationship
      summary: Delete TrustRelationship
      description: Delete TrustRelationship
      operationId: put-trust-relationship
      parameters:
      - name: id
        in: path
        description: Unique Id of client
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/samlClient:
    get:
      tags:
      - SAML - Trust Relationship
      summary: Get all Trust Relationship
      description: Get all TrustRelationship.
      operationId: get-trust-relationship
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.readonly
    put:
      tags:
      - SAML - Trust Relationship
      summary: Update TrustRelationship
      description: Update TrustRelationship
      operationId: put-trust-relationship_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationship'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.write
  /saml/samlClient/id/{id}:
    get:
      tags:
      - SAML - Trust Relationship
      summary: Get TrustRelationship by Id
      description: Get TrustRelationship by Id
      operationId: get-trust-relationship-by-id
      parameters:
      - name: id
        in: path
        description: Unique identifier - Id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.readonly
  /saml/samlClient/{clientId}:
    get:
      tags:
      - SAML - Trust Relationship
      summary: Get TrustRelationship by name
      description: Get TrustRelationship by name
      operationId: get-trust-relationship-by-name
      parameters:
      - name: clientId
        in: path
        description: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/config/saml.readonly
components:
  schemas:
    SamlConfig:
      type: object
      properties:
        serverUrl:
          type: string
        realm:
          type: string
        username:
          type: string
        password:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
    ProtocolMapperRepresentation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        protocol:
          type: string
        protocolMapper:
          type: string
        consentRequired:
          type: boolean
        consentText:
          type: string
        config:
          type: object
          additionalProperties:
            type: string
    ProfileConfiguration:
      type: object
      properties:
        name:
          type: string
        signResponses:
          type: string
    TrustRelationship:
      required:
      - description
      - displayName
      - spMetaDataSourceType
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        owner:
          type: string
        clientId:
          type: string
        displayName:
          maxLength: 60
          minLength: 0
          type: string
        description:
          maxLength: 4000
          minLength: 0
          type: string
        rootUrl:
          type: string
        adminUrl:
          type: string
        baseUrl:
          type: string
        surrogateAuthRequired:
          type: boolean
        enabled:
          type: boolean
        alwaysDisplayInConsole:
          type: boolean
        clientAuthenticatorType:
          type: string
        secret:
          type: string
        registrationAccessToken:
          type: string
        redirectUris:
          type: array
          items:
            type: string
        webOrigins:
          type: array
          items:
            type: string
        consentRequired:
          type: boolean
        jansSAMLMetaDataFilter:
          type: array
          items:
            type: string
        spMetaDataSourceType:
          type: string
          enum:
          - file
          - uri
          - federation
          - manual
          - mdq
        spMetaDataFN:
          type: string
        spMetaDataURL:
          type: string
        metaLocation:
          type: string
        jansIsFed:
          type: boolean
        jansEntityId:
          type: array
          items:
            type: string
        entityType:
          type: string
          enum:
          - Single SP
          - Federation/Aggregate
        jansProfileConf:
          type: array
          items:
            type: string
        releasedAttributes:
          type: array
          items:
            type: string
        url:
          pattern: "^(https?|http)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
          type: string
        spLogoutURL:
          pattern: "^$|(^(https?|http)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|])"
          type: string
        protocol:
          type: string
        status:
          type: string
          enum:
          - active
          - inactive
          - expired
          - register
        validationStatus:
          type: string
          enum:
          - In Progress
          - Success
          - Scheduled
          - Failed
        validationLog:
          type: array
          items:
            type: string
        profileConfigurations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileConfiguration'
        baseDn:
          type: string
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://{op-hostname}/.../token"
          scopes:
            https://jans.io/oauth/config/saml.readonly: View SAML related information
            https://jans.io/oauth/config/saml.write: Manage SAML related information
            https://jans.io/oauth/config/saml-config.readonly: View SAML configuration
              related information
            https://jans.io/oauth/config/saml-config.write: Manage SAML configuration
              related information
