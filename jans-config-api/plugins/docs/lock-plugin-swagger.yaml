openapi: 3.0.1
info:
  title: Jans Config API - Lock
  contact:
    name: Gluu Support
    url: https://support.gluu.org
    email: support@gluu.org
  license:
    name: Apache 2.0
    url: https://github.com/JanssenProject/jans/blob/main/LICENSE
  version: 1.0.0
servers:
- url: https://jans.io/
  description: The Jans server
tags:
- name: Lock - Configuration
- name: Lock - Audit
paths:
  /lock/audit/health/{eventStartDate}-{eventEndDate}:
    get:
      tags:
      - Lock - Audit
      summary: Rerquest health records for specific event range
      description: Rerquest health records for specific event range
      operationId: request-lock-health-records-event-range
      parameters:
      - name: limit
        in: query
        description: Search size - max size of the results to return
        schema:
          type: integer
          format: int32
          default: 50
      - name: eventStartDate
        in: path
        description: Event start date in ISO8601 format
        required: true
        schema:
          type: string
      - name: eventEndtDate
        in: path
        description: Event end date in ISO8601 format
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthEntry'
        "400":
          description: Wrong date range specified
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock/health.readonly
  /lock/audit/log/{eventStartDate}-{eventEndDate}:
    get:
      tags:
      - Lock - Log
      summary: Rerquest log records for specific event range
      description: Rerquest log records for specific event range
      operationId: request-lock-log-records-event-range
      parameters:
      - name: limit
        in: query
        description: Search size - max size of the results to return
        schema:
          type: integer
          format: int32
          default: 50
      - name: eventStartDate
        in: path
        description: Event start date in ISO8601 format
        required: true
        schema:
          type: string
      - name: eventEndtDate
        in: path
        description: Event end date in ISO8601 format
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEntry'
        "400":
          description: Wrong date range specified
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock/log.readonly
  /lock/audit/telemetry/{eventStartDate}-{eventEndDate}:
    get:
      tags:
      - Lock - Audit
      summary: Request telemetry records for specific event range
      description: Rerquest telemetry records for specific event range
      operationId: request-lock-telemetry-records-event-range
      parameters:
      - name: limit
        in: query
        description: Search size - max size of the results to return
        schema:
          type: integer
          format: int32
          default: 50
      - name: eventStartDate
        in: path
        description: Event start date in ISO8601 format
        required: true
        schema:
          type: string
      - name: eventEndtDate
        in: path
        description: Event end date in ISO8601 format
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryEntry'
        "400":
          description: Wrong date range specified
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock/telemetry.readonly
  /lock/audit/health:
    post:
      tags:
      - Lock - Audit
      summary: Save health data
      description: Save health data
      operationId: save-health-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/health.write
  /lock/audit/log:
    post:
      tags:
      - Lock - Audit
      summary: Save log data
      description: Save log data
      operationId: save-log-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/log.write
  /lock/audit/telemetry:
    post:
      tags:
      - Lock - Audit
      summary: Save telemetry data
      description: Save telemetry data
      operationId: save-telemetry-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetryEntry'
      responses:
        "200":
          description: Ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
      - oauth2:
        - https://jans.io/oauth/lock/telemetry.write
  /lock/lockConfig:
    get:
      tags:
      - Lock - Configuration
      summary: Gets Lock configuration properties
      description: Gets Lock configuration properties
      operationId: get-lock-properties
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock-config.readonly
    put:
      tags:
      - Lock - Configuration
      summary: Update Lock configuration properties
      description: Update Lock configuration properties
      operationId: put-lock-properties
      requestBody:
        description: GluuAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfiguration'
            examples:
              Request example:
                description: Request example
                value: ""
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock-config.write
    patch:
      tags:
      - Lock - Configuration
      summary: Partially modifies Lock configuration properties.
      description: Partially modifies Lock configuration properties.
      operationId: patch-lock-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ""
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
        "401":
          description: Unauthorized
        "500":
          description: InternalServerError
      security:
      - oauth2:
        - https://jans.io/oauth/lock-config.write
components:
  schemas:
    HealthEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeId:
          type: string
        status:
          type: string
        engineStatus:
          type: string
        baseDn:
          type: string
        inum:
          type: string
    LogEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeId:
          type: string
        eventType:
          type: string
        severetyLevel:
          type: string
        action:
          type: string
        decisionResult:
          type: string
        requestedResource:
          type: string
        princiaplId:
          type: string
        clientId:
          type: string
        contextInformation:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
    TelemetryEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeId:
          type: string
        status:
          type: string
        lastPolicyLoadSize:
          type: integer
          format: int32
        policySuccessLoadCounter:
          type: integer
          format: int64
        policyFailedLoadCounter:
          type: integer
          format: int64
        lastPolicyEvaluationTimeNs:
          type: string
          format: date-time
        avgPolicyEvaluationTimeNs:
          type: string
          format: date-time
        evaluationRequestsCount:
          type: integer
          format: int64
        policyStats:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
        memoryUsage:
          type: string
    ApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
    AppConfiguration:
      type: object
      properties:
        baseDN:
          type: string
          description: Entry Base distinguished name (DN) that identifies the starting
            point of a search
        baseEndpoint:
          type: string
          description: Lock base endpoint URL
        openIdIssuer:
          type: string
          description: OpenID issuer URL
        tokenChannels:
          type: array
          description: List of token channel names
          items:
            type: string
            description: List of token channel names
        clientId:
          type: string
          description: Lock Client ID
        clientPassword:
          type: string
          description: Lock client password
        tokenUrl:
          type: string
          description: Jans URL of the OpenID Connect Provider's OAuth 2.0 Token Endpoint
        groupScopeEnabled:
          type: boolean
          description: Group scope enabled
        endpointGroups:
          type: object
          additionalProperties:
            type: array
            description: Endpoint groups
            items:
              type: string
              description: Endpoint groups
          description: Endpoint groups
        endpointDetails:
          type: object
          additionalProperties:
            type: array
            description: Jans URL of config-api audit endpoints and corresponding
              scope details
            items:
              type: string
              description: Jans URL of config-api audit endpoints and corresponding
                scope details
          description: Jans URL of config-api audit endpoints and corresponding scope
            details
        disableJdkLogger:
          type: boolean
          description: Choose whether to disable JDK loggers
        loggingLevel:
          type: string
          description: Specify the logging level of loggers
        loggingLayout:
          type: string
          description: Logging layout used for Jans Authorization Server loggers
        externalLoggerConfiguration:
          type: string
          description: The path to the external log4j2 logging configuration
        metricChannel:
          type: string
          description: Channel for metric reports
        metricReporterInterval:
          type: integer
          description: The interval for metric reporter in seconds
          format: int32
        metricReporterKeepDataDays:
          type: integer
          description: The days to keep metric reported data
          format: int32
        metricReporterEnabled:
          type: boolean
          description: Enable metric reporter
        cleanServiceInterval:
          type: integer
          description: Time interval for the Clean Service in seconds
          format: int32
        opaConfiguration:
          $ref: '#/components/schemas/OpaConfiguration'
        pdpType:
          type: string
          description: PDP type
        policiesJsonUrisAuthorizationToken:
          type: string
          description: Authorization token to access Json Uris
        policiesJsonUris:
          type: array
          description: List of Json Uris with link to Rego policies
          items:
            type: string
            description: List of Json Uris with link to Rego policies
        policiesZipUrisAuthorizationToken:
          type: string
          description: Authorization token to access Zip Uris
        policiesZipUris:
          type: array
          description: List of Zip Uris with policies
          items:
            type: string
            description: List of Zip Uris with policies
    OpaConfiguration:
      type: object
      properties:
        baseUrl:
          type: string
          description: Base OPA URL
        accessToken:
          type: string
          description: OPA access token
      description: Opa Configuration
    JsonPatch:
      type: object
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://{op-hostname}/.../token"
          scopes:
            https://jans.io/oauth/lock/read-all: View Lock related information
            https://jans.io/oauth/lock/write-all: View Lock related information
            https://jans.io/oauth/lock-config.readonly: View Lock configuration related
              information
            https://jans.io/oauth/lock-config.write: Manage Lock configuration related
              information
            https://jans.io/oauth/lock/audit.readonly: View Lock audit related information
            https://jans.io/oauth/lock/audit.write: View Lock audit related information
            https://jans.io/oauth/lock/health.readonly: View Lock health related information
            https://jans.io/oauth/lock/health.write: Manage Lock health related information
            https://jans.io/oauth/lock/log.readonly: View Lock log related information
            https://jans.io/oauth/lock/log.write: Manage Lock log health related information
            https://jans.io/oauth/lock/telemetry.readonly: View Lock telemetry related
              information
            https://jans.io/oauth/lock/telemetry.write: Manage Lock telemetry related
              information
